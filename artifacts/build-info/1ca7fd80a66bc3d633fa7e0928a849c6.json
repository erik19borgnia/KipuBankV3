{
	"id": "1ca7fd80a66bc3d633fa7e0928a849c6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KipuBankV3.sol": {
				"content": "//SPDX-License-Identifier: MIT \r\n\r\npragma solidity 0.8.30;\r\n\r\n\r\n/*///////////////////////\r\n        Imports\r\n///////////////////////*/\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n/*///////////////////////\r\n        Libraries\r\n///////////////////////*/\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n/*///////////////////////\r\n        Interfaces\r\n///////////////////////*/\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {AggregatorV3Interface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\n\r\n/**\r\n * @title KipuBank V3\r\n * @author Erik Borgnia\r\n * @notice Contrato para el TP Final del Módulo 4 del curso de EthKipu\r\n * @notice Es una simulación de banco con depósitos y extracciones, auditable por el dueño del contrato, que además incorpora USDC al que se hizo previamente\r\n */\r\ncontract KipuBankV3 is Ownable{\r\n    /*///////////////////////\r\n    DECLARACIÓN DE TIPOS\r\n    ///////////////////////*/\r\n    using SafeERC20 for IERC20;\r\n\r\n    /*///////////////////////\r\n    Variables\r\n    ///////////////////////*/\r\n    ///@notice variable constante para almacenar el latido (heartbeat) del Data Feed\r\n    uint16 constant ORACLE_HEARTBEAT = 3600;\r\n    ///@notice variable constante para almacenar el factor de decimales\r\n    uint256 constant DECIMAL_FACTOR = 1 * 10 ** 20;\r\n\r\n    ///@notice variable para almacenar la dirección del Chainlink Feed\r\n    AggregatorV3Interface public s_feeds;\r\n    //0x694AA1769357215DE4FAC081bf1f309aDC325306 Ethereum ETH/USD\r\n\r\n    ////////////////////\r\n    //MAPPINGS DE TODO//\r\n    ////////////////////\r\n    ///@notice Mapping que mantienen el balance de tokens ERC20 de las distintas cuentas \r\n    mapping (address user => mapping (address token => uint256 amount)) s_balances;\r\n    ///@notice Mapping que mantienen la cantidad de depósitos de tokens ERC20 de las distintas cuentas\r\n    mapping (address user => mapping (address token => uint32 counter)) s_deposits;\r\n    ///@notice Mapping que mantienen la cantidad de extracciones de tokens ERC20  de las distintas cuentas\r\n    mapping (address user => mapping (address token => uint32 amount)) s_withdrawals;\r\n    \r\n    ///@notice Límite de balance por cuenta\r\n    uint128 public immutable s_bankCap;\r\n    ///@notice Límite de extracción por cuenta\r\n    uint128 public immutable s_withdrawLimit = 10**18; //1.000.000.000.000.000.000\r\n    // Que sean a lo mucho la mitad de lo máximo que podría tener el contrato es bastante razonable.\r\n    //1 trillón (o 1 quintillions) necesita menos de 128 bits, pero por coherencia se lo deja uint128\r\n    //Acomodado a un número más razonable. Es equivalente a 1 ETH.\r\n\r\n    ///@notice Evento emitido al depositar exitosamente\r\n    event Deposited(address from, uint amount);\r\n    ///@notice Evento emitido al extraer exitosamente\r\n    event Extracted(address to, uint amount);\r\n    ///@notice Evento emitido al depositar USDC exitosamente\r\n    event ERC20Deposited(address from, address tokenAddress, uint amount);\r\n    ///@notice Evento emitido al extraer USDC exitosamente\r\n    event ERC20Extracted(address to, address tokenAddress, uint amount);\r\n    ///@notice Evento emitido al extraer USDC exitosamente\r\n    event ChainlinkFeedUpdated(AggregatorV3Interface oldFeed, AggregatorV3Interface newFeed);\r\n\r\n    ///@notice Error emitido cuando se intenta depositar una cantidad inválida (=0, o la cuenta superaría el bankCap)\r\n    error DepositNotAllowed(address to, uint amount);\r\n    ///@notice Error emitido cuando se intenta extraer una cantidad inválda (<=0, >saldo, >límite)\r\n    error ExtractionNotAllowed(address to, uint amount);\r\n    ///@notice Error emitido cuando falla una extracción\r\n    error ExtractionReverted(address to, uint amount, bytes errorData);\r\n    ///@notice Error emitido cuando se intenta depositar una cantidad inválida de un token ERC20 (=0)\r\n    error ERC20DepositNotAllowed(address to, address tokenAddress, uint amount);\r\n    ///@notice Error emitido cuando se intenta extraer una cantidad inválda de un token ERC20 (<=0, >saldo)\r\n    error ERC20ExtractionNotAllowed(address to, address tokenAddress, uint amount);\r\n    ///@notice Error emitido cuando falla el oráculo\r\n    error OracleCompromised();\r\n    ///@notice Error emitido cuando la última actualización del oráculo supera el heartbeat\r\n    error StalePrice();\r\n\r\n    /*\r\n        *@notice Constructor que recibe el bankCap como parámetro\r\n        *@param _bankCap es el máximo que podría tener el contrato en total\r\n    */\r\n    constructor(uint128 _banckCap, address _feed) Ownable(msg.sender) {\r\n        s_bankCap = _banckCap;\r\n        s_feeds = AggregatorV3Interface(_feed);\r\n    }\r\n\r\n    /**\r\n        *@notice Función receive para manejar depósitos directos\r\n\t\t*@notice Esto garantiza la consistencia con las interacciones del contrato\r\n    */\r\n    receive() external payable {\r\n        depositEth();\r\n    }\r\n\r\n    /**\r\n        *@notice Función para hacer un depósito\r\n\t\t*@notice Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\r\n    */\r\n    function depositEth() public payable {\r\n        require(msg.value > 0, DepositNotAllowed(msg.sender,msg.value));\r\n        require(msg.value+s_balances[msg.sender][address(0)] <= s_bankCap, DepositNotAllowed(msg.sender,msg.value));\r\n\r\n        s_balances[msg.sender][address(0)] += msg.value;\r\n        s_deposits[msg.sender][address(0)]++;\r\n        \r\n        emit Deposited(msg.sender, msg.value);\r\n    }\r\n\r\n    /**\r\n         *@notice Función externa para recibir depósitos de tokens ERC20\r\n         *@notice Emite un evento cuando la transacción es exitosa.\r\n         *@param _tokenAddress La dirección del contrato del token a depositar\r\n         *@param _amount La cantidad a depositar de USDC\r\n     */\r\n    function depositERC20(address _tokenAddress, uint256 _amount) external {\r\n        require(_amount > 0, DepositNotAllowed(msg.sender,_amount));\r\n        s_balances[msg.sender][_tokenAddress] += _amount;\r\n        s_deposits[msg.sender][_tokenAddress]++;\r\n\r\n        emit ERC20Deposited(msg.sender, _tokenAddress, _amount);\r\n\r\n        IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount);\r\n    }\r\n\r\n    /**\r\n        *@notice Función pública para ver el balance de ETH que uno mismo tiene\r\n    */\r\n    function getBalance() external view returns(uint balance_) {\r\n        balance_ = s_balances[msg.sender][address(0)];\r\n    }\r\n    /**\r\n        *@notice Función pública para ver el balance de ETH que uno mismo tiene en USD\r\n    */\r\n    function getBalanceInUSD() external view returns(uint balance_) {\r\n        balance_ = convertEthInUSD(s_balances[msg.sender][address(0)]);\r\n    }\r\n    /**\r\n        *@notice Función pública para ver la cantidad de depósitos de ETH que uno hizo\r\n    */\r\n    function getDeposits() external view returns(uint deposits_) {\r\n        deposits_ = s_deposits[msg.sender][address(0)];\r\n    }\r\n    /**\r\n        *@notice Función pública para ver la cantidad de extracciones de ETH que uno hizo\r\n    */\r\n    function getWithdrawals() external view returns(uint withdrawals_) {\r\n        withdrawals_ = s_withdrawals[msg.sender][address(0)];\r\n    }\r\n    /**\r\n        *@notice Función pública para ver el balance que uno mismo tiene de un token ERC20 específico\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Balance(address _tokenAddress) external view returns(uint balance_) {\r\n        balance_ = s_balances[msg.sender][_tokenAddress];\r\n    }\r\n    /**\r\n        *@notice Función pública para ver la cantidad de depósitos que uno hizo de un token ERC20 específico\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Deposits(address _tokenAddress) external view returns(uint deposits_) {\r\n        deposits_ = s_deposits[msg.sender][_tokenAddress];\r\n    }\r\n    /**\r\n        *@notice Función pública para ver la cantidad de extracciones que uno hizo de un token ERC20 específico\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Withdrawals(address _tokenAddress) external view returns(uint withdrawals_) {\r\n        withdrawals_ = s_withdrawals[msg.sender][_tokenAddress];\r\n    }\r\n    /////////////////////////////\r\n    //FUNCIONES ADMINISTRATIVAS//\r\n    /////////////////////////////\r\n    /**\r\n        *@notice Función onlyOwner para ver el balance de ETH que algún usuario tiene\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n    */\r\n    function getBalance(address user_) external onlyOwner view returns(uint balance_) {\r\n        balance_ = s_balances[user_][address(0)];\r\n    }/**\r\n        *@notice Función onlyOwner para ver el balance de ETH que algún usuario tiene en USD\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n    */\r\n    function getBalanceInUSD(address user_) external view returns(uint balance_) {\r\n        balance_ = convertEthInUSD(s_balances[user_][address(0)]);\r\n    }\r\n    /**\r\n        *@notice Función onlyOwner para ver la cantidad de depósitos de ETH que algún usuario hizo\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n    */\r\n    function getDeposits(address user_) external onlyOwner view returns(uint deposits_) {\r\n        deposits_ = s_deposits[user_][address(0)];\r\n    }\r\n    /**\r\n        *@notice Función onlyOwner para ver la cantidad de extracciones de ETH que algún usuario hizo\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n    */\r\n    function getWithdrawals(address user_) external onlyOwner view returns(uint withdrawals_) {\r\n        withdrawals_ = s_withdrawals[user_][address(0)];\r\n    }\r\n    /**\r\n        *@notice Función onlyOwner para ver el balance que algún usuario tiene en algún token ERC20\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Balance(address user_, address _tokenAddress) external onlyOwner view returns(uint balance_) {\r\n        balance_ = s_balances[user_][_tokenAddress];\r\n    }\r\n    /**\r\n        *@notice Función onlyOwner para ver la cantidad de depósitos que algún usuario hizo de algún token ERC20\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Deposits(address user_, address _tokenAddress) external onlyOwner view returns(uint deposits_) {\r\n        deposits_ = s_deposits[user_][_tokenAddress];\r\n    }\r\n    /**\r\n        *@notice Función onlyOwner para ver la cantidad de extracciones que algún usuario hizo de algún token ERC20\r\n\t\t*@dev Esta función garantiza que toda la información es auditable\r\n        *@param user_ Usuario que se quiere auditar\r\n        *@param _tokenAddress La dirección del contrato del token a consultar\r\n    */\r\n    function getERC20Withdrawals(address user_, address _tokenAddress) external onlyOwner view returns(uint withdrawals_) {\r\n        withdrawals_ = s_withdrawals[user_][_tokenAddress];\r\n    }\r\n    \r\n\r\n    /**\r\n        *@notice Función para actualizar el Chainlink Price Feed\r\n        *@param _feed La nueva dirección del Price Feed\r\n        *@dev Sólo puede ser llamada por el propietario\r\n    */\r\n    function setFeeds(address _feed) external onlyOwner {\r\n\r\n        emit ChainlinkFeedUpdated(s_feeds, AggregatorV3Interface(_feed));\r\n\r\n        s_feeds = AggregatorV3Interface(_feed);\r\n\r\n    }\r\n\r\n    /**\r\n        *@notice Función para hacer un depósito\r\n\t\t*@dev Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\r\n        *@param _amount Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción\r\n    */\r\n    function withdrawEth(uint _amount) public {\r\n        require(_amount > 0, ExtractionNotAllowed(msg.sender, _amount));\r\n        require(_amount <= s_balances[msg.sender][address(0)], ExtractionNotAllowed(msg.sender, _amount));\r\n        require(_amount <= s_withdrawLimit, ExtractionNotAllowed(msg.sender, _amount));\r\n\r\n        s_balances[msg.sender][address(0)] -= _amount;\r\n        s_withdrawals[msg.sender][address(0)]++;\r\n        \r\n        transferEth(_amount);\r\n        \r\n        emit Extracted(msg.sender, _amount);        \r\n    }\r\n\r\n    /**\r\n        *@notice Función para hacer un depósito\r\n\t\t*@dev Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\r\n        *@param _tokenAddress La dirección del contrato del token a extraer\r\n        *@param _amount Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción\r\n    */\r\n    function withdrawERC20(address _tokenAddress, uint _amount) public {\r\n        require(_amount > 0, ERC20ExtractionNotAllowed(msg.sender, _tokenAddress, _amount));\r\n        require(_amount <= s_balances[msg.sender][_tokenAddress], ERC20ExtractionNotAllowed(msg.sender, _tokenAddress, _amount));\r\n\r\n        s_balances[msg.sender][_tokenAddress] -= _amount;\r\n        s_withdrawals[msg.sender][_tokenAddress]++;\r\n        \r\n        transferERC20(_tokenAddress, _amount);\r\n        \r\n        emit ERC20Extracted(msg.sender, _tokenAddress, _amount);        \r\n    }\r\n\r\n    /**\r\n        *@notice Función interna para realizar la conversión de decimales de ETH a USD\r\n        *@param _ethAmount La cantidad de ETH a ser convertida\r\n        *@return convertedAmount_ El resultado del cálculo.\r\n    */\r\n    function convertEthInUSD(uint256 _ethAmount) internal view returns (uint256 convertedAmount_) {\r\n        convertedAmount_ = (_ethAmount * chainlinkFeed()) / DECIMAL_FACTOR;\r\n    }\r\n\r\n    /**\r\n        *@notice Función para consultar el precio en USD del ETH\r\n        *@return ethUSDPrice_ El precio provisto por el oráculo.\r\n    */\r\n    function chainlinkFeed() internal view returns (uint256 ethUSDPrice_) {\r\n        (, int256 ethUSDPrice,, uint256 updatedAt,) = s_feeds.latestRoundData();\r\n\r\n        require(ethUSDPrice != 0, OracleCompromised());\r\n        require((block.timestamp - updatedAt) > ORACLE_HEARTBEAT, StalePrice());\r\n\r\n        ethUSDPrice_ = uint256(ethUSDPrice);\r\n    }\r\n\r\n    /**\r\n        *@notice Función privada que transfiere la cantidad pedida por la extracción\r\n\t\t*@dev Nadie puede acceder a esta función excepto ESTE contrato\r\n        *@param _amount Cantidad a transferir\r\n    */\r\n    function transferEth(uint _amount) private {\r\n        (bool success, bytes memory errorData) = msg.sender.call{value: _amount}(\"\");\r\n        require(success, ExtractionReverted(msg.sender,_amount,errorData));\r\n    }\r\n\r\n    /**\r\n        *@notice Función privada que transfiere la cantidad pedida por la extracción\r\n\t\t*@dev Nadie puede acceder a esta función excepto ESTE contrato\r\n        *@param _tokenAddress La dirección del contrato del token a transferir\r\n        *@param _amount Cantidad a transferir\r\n    */\r\n    function transferERC20(address _tokenAddress, uint _amount) private {\r\n        IERC20(_tokenAddress).safeTransferFrom(address(this), msg.sender, _amount);\r\n    }\r\n\r\n\r\n\r\n\r\n}"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBankV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KipuBankV3.sol": {
				"KipuBankV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "_banckCap",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "_feed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositNotAllowed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20DepositNotAllowed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20ExtractionNotAllowed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ExtractionNotAllowed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "errorData",
									"type": "bytes"
								}
							],
							"name": "ExtractionReverted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OracleCompromised",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StalePrice",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "contract AggregatorV3Interface",
									"name": "oldFeed",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract AggregatorV3Interface",
									"name": "newFeed",
									"type": "address"
								}
							],
							"name": "ChainlinkFeedUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Extracted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Extracted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "depositERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositEth",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "getBalanceInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalanceInUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposits_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "getDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposits_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposits_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "deposits_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Withdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "withdrawals_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"name": "getERC20Withdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "withdrawals_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_",
									"type": "address"
								}
							],
							"name": "getWithdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "withdrawals_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWithdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "withdrawals_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_bankCap",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_feeds",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_withdrawLimit",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feed",
									"type": "address"
								}
							],
							"name": "setFeeds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawEth",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "Erik Borgnia",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"depositERC20(address,uint256)": {
								"params": {
									"_amount": "La cantidad a depositar de USDC",
									"_tokenAddress": "La dirección del contrato del token a depositar"
								}
							},
							"getBalance(address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getBalanceInUSD(address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getDeposits(address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getERC20Balance(address)": {
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar"
								}
							},
							"getERC20Balance(address,address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar",
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getERC20Deposits(address)": {
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar"
								}
							},
							"getERC20Deposits(address,address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar",
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getERC20Withdrawals(address)": {
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar"
								}
							},
							"getERC20Withdrawals(address,address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"_tokenAddress": "La dirección del contrato del token a consultar",
									"user_": "Usuario que se quiere auditar"
								}
							},
							"getWithdrawals(address)": {
								"details": "Esta función garantiza que toda la información es auditable",
								"params": {
									"user_": "Usuario que se quiere auditar"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setFeeds(address)": {
								"details": "Sólo puede ser llamada por el propietario",
								"params": {
									"_feed": "La nueva dirección del Price Feed"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawERC20(address,uint256)": {
								"details": "Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap",
								"params": {
									"_amount": "Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción",
									"_tokenAddress": "La dirección del contrato del token a extraer"
								}
							},
							"withdrawEth(uint256)": {
								"details": "Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap",
								"params": {
									"_amount": "Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción"
								}
							}
						},
						"title": "KipuBank V3",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KipuBankV3.sol\":919:15589  contract KipuBankV3 is Ownable{... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/KipuBankV3.sol\":2427:2433  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/KipuBankV3.sol\":2384:2433  uint128 public immutable s_withdrawLimit = 10**18 */\n  0xffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  swap1\n  0xffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/KipuBankV3.sol\":4607:4762  constructor(uint128 _banckCap, address _feed) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KipuBankV3.sol\":4661:4671  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/KipuBankV3.sol\":4696:4705  _banckCap */\n  dup2\n    /* \"contracts/KipuBankV3.sol\":4684:4705  s_bankCap = _banckCap */\n  0xffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/KipuBankV3.sol\":4748:4753  _feed */\n  dup1\n    /* \"contracts/KipuBankV3.sol\":4716:4723  s_feeds */\n  0x01\n  0x00\n    /* \"contracts/KipuBankV3.sol\":4716:4754  s_feeds = AggregatorV3Interface(_feed) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/KipuBankV3.sol\":4607:4762  constructor(uint128 _banckCap, address _feed) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/KipuBankV3.sol\":919:15589  contract KipuBankV3 is Ownable{... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:452   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:445   */\n  0xffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:446   */\n  and\n    /* \"#utility.yul\":389:446   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:452   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":458:580   */\ntag_19:\n    /* \"#utility.yul\":531:555   */\n  tag_32\n    /* \"#utility.yul\":549:554   */\n  dup2\n    /* \"#utility.yul\":531:555   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":524:529   */\n  dup2\n    /* \"#utility.yul\":521:556   */\n  eq\n    /* \"#utility.yul\":511:574   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":567:568   */\n  0x00\n    /* \"#utility.yul\":560:572   */\n  revert\n    /* \"#utility.yul\":511:574   */\ntag_33:\n    /* \"#utility.yul\":458:580   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":586:729   */\ntag_20:\n    /* \"#utility.yul\":643:648   */\n  0x00\n    /* \"#utility.yul\":674:680   */\n  dup2\n    /* \"#utility.yul\":668:681   */\n  mload\n    /* \"#utility.yul\":659:681   */\n  swap1\n  pop\n    /* \"#utility.yul\":690:723   */\n  tag_35\n    /* \"#utility.yul\":717:722   */\n  dup2\n    /* \"#utility.yul\":690:723   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":586:729   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":735:861   */\ntag_21:\n    /* \"#utility.yul\":772:779   */\n  0x00\n    /* \"#utility.yul\":812:854   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":805:810   */\n  dup3\n    /* \"#utility.yul\":801:855   */\n  and\n    /* \"#utility.yul\":790:855   */\n  swap1\n  pop\n    /* \"#utility.yul\":735:861   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":867:963   */\ntag_22:\n    /* \"#utility.yul\":904:911   */\n  0x00\n    /* \"#utility.yul\":933:957   */\n  tag_38\n    /* \"#utility.yul\":951:956   */\n  dup3\n    /* \"#utility.yul\":933:957   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":922:957   */\n  swap1\n  pop\n    /* \"#utility.yul\":867:963   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":969:1091   */\ntag_23:\n    /* \"#utility.yul\":1042:1066   */\n  tag_40\n    /* \"#utility.yul\":1060:1065   */\n  dup2\n    /* \"#utility.yul\":1042:1066   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1035:1040   */\n  dup2\n    /* \"#utility.yul\":1032:1067   */\n  eq\n    /* \"#utility.yul\":1022:1085   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1081:1082   */\n  0x00\n    /* \"#utility.yul\":1078:1079   */\n  0x00\n    /* \"#utility.yul\":1071:1083   */\n  revert\n    /* \"#utility.yul\":1022:1085   */\ntag_41:\n    /* \"#utility.yul\":969:1091   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1097:1240   */\ntag_24:\n    /* \"#utility.yul\":1154:1159   */\n  0x00\n    /* \"#utility.yul\":1185:1191   */\n  dup2\n    /* \"#utility.yul\":1179:1192   */\n  mload\n    /* \"#utility.yul\":1170:1192   */\n  swap1\n  pop\n    /* \"#utility.yul\":1201:1234   */\n  tag_43\n    /* \"#utility.yul\":1228:1233   */\n  dup2\n    /* \"#utility.yul\":1201:1234   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1097:1240   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1246:1753   */\ntag_3:\n    /* \"#utility.yul\":1325:1331   */\n  0x00\n    /* \"#utility.yul\":1333:1339   */\n  0x00\n    /* \"#utility.yul\":1382:1384   */\n  0x40\n    /* \"#utility.yul\":1370:1379   */\n  dup4\n    /* \"#utility.yul\":1361:1368   */\n  dup6\n    /* \"#utility.yul\":1357:1380   */\n  sub\n    /* \"#utility.yul\":1353:1385   */\n  slt\n    /* \"#utility.yul\":1350:1469   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1388:1467   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1350:1469   */\ntag_45:\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1533:1597   */\n  tag_47\n    /* \"#utility.yul\":1589:1596   */\n  dup6\n    /* \"#utility.yul\":1580:1586   */\n  dup3\n    /* \"#utility.yul\":1569:1578   */\n  dup7\n    /* \"#utility.yul\":1565:1587   */\n  add\n    /* \"#utility.yul\":1533:1597   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1523:1597   */\n  swap3\n  pop\n    /* \"#utility.yul\":1479:1607   */\n  pop\n    /* \"#utility.yul\":1646:1648   */\n  0x20\n    /* \"#utility.yul\":1672:1736   */\n  tag_48\n    /* \"#utility.yul\":1728:1735   */\n  dup6\n    /* \"#utility.yul\":1719:1725   */\n  dup3\n    /* \"#utility.yul\":1708:1717   */\n  dup7\n    /* \"#utility.yul\":1704:1726   */\n  add\n    /* \"#utility.yul\":1672:1736   */\n  tag_24\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1662:1736   */\n  swap2\n  pop\n    /* \"#utility.yul\":1617:1746   */\n  pop\n    /* \"#utility.yul\":1246:1753   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1759:1877   */\ntag_25:\n    /* \"#utility.yul\":1846:1870   */\n  tag_50\n    /* \"#utility.yul\":1864:1869   */\n  dup2\n    /* \"#utility.yul\":1846:1870   */\n  tag_22\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1841:1844   */\n  dup3\n    /* \"#utility.yul\":1834:1871   */\n  mstore\n    /* \"#utility.yul\":1759:1877   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1883:2105   */\ntag_9:\n    /* \"#utility.yul\":1976:1980   */\n  0x00\n    /* \"#utility.yul\":2014:2016   */\n  0x20\n    /* \"#utility.yul\":2003:2012   */\n  dup3\n    /* \"#utility.yul\":1999:2017   */\n  add\n    /* \"#utility.yul\":1991:2017   */\n  swap1\n  pop\n    /* \"#utility.yul\":2027:2098   */\n  tag_52\n    /* \"#utility.yul\":2095:2096   */\n  0x00\n    /* \"#utility.yul\":2084:2093   */\n  dup4\n    /* \"#utility.yul\":2080:2097   */\n  add\n    /* \"#utility.yul\":2071:2077   */\n  dup5\n    /* \"#utility.yul\":2027:2098   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1883:2105   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KipuBankV3.sol\":919:15589  contract KipuBankV3 is Ownable{... */\ntag_13:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc428c6907bdb089a99d3f8e2fb15559324b37df012d4d9c6f20b91e1c28c612e\")\n  0x00\n  assignImmutable(\"0x795dcf830090319074c4e36a23e7ad6013124a9e4afc765f3f324f667dfac3a5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/KipuBankV3.sol\":919:15589  contract KipuBankV3 is Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x94f649dd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc311d049\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xd2706c91\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xd2706c91\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xef649249\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xc311d049\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc3a8962c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc77e551b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x94f649dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x962b9bcc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x97feb926\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa1db9782\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa2abecd3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb588d225\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x6b149d87\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x6b149d87\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7dc532c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7f86ee43\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x80ef10ed\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21d60805\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x297beb3c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a2b643a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x439370b1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x50d6c1e8\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/KipuBankV3.sol\":4971:4983  depositEth() */\n      tag_34\n        /* \"contracts/KipuBankV3.sol\":4971:4981  depositEth */\n      tag_35\n        /* \"contracts/KipuBankV3.sol\":4971:4983  depositEth() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/KipuBankV3.sol\":919:15589  contract KipuBankV3 is Ownable{... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/KipuBankV3.sol\":6394:6517  function getBalance() external view returns(uint balance_) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":9107:9260  function getBalanceInUSD(address user_) external view returns(uint balance_) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":10910:11085  function getERC20Deposits(address user_, address _tokenAddress) external onlyOwner view returns(uint deposits_) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":9906:10062  function getWithdrawals(address user_) external onlyOwner view returns(uint withdrawals_) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":5160:5562  function depositEth() public payable {... */\n    tag_7:\n      tag_58\n      tag_35\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/KipuBankV3.sol\":7131:7269  function getWithdrawals() external view returns(uint withdrawals_) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":6889:7015  function getDeposits() external view returns(uint deposits_) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      revert(0x00, 0x00)\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/KipuBankV3.sol\":11833:12023  function setFeeds(address _feed) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      revert(0x00, 0x00)\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/KipuBankV3.sol\":2384:2433  uint128 public immutable s_withdrawLimit = 10**18 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":2293:2327  uint128 public immutable s_bankCap */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":9510:9654  function getDeposits(address user_) external onlyOwner view returns(uint deposits_) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":11432:11619  function getERC20Withdrawals(address user_, address _tokenAddress) external onlyOwner view returns(uint withdrawals_) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":5873:6286  function depositERC20(address _tokenAddress, uint256 _amount) external {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/KipuBankV3.sol\":13183:13739  function withdrawERC20(address _tokenAddress, uint _amount) public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/KipuBankV3.sol\":7847:8002  function getERC20Deposits(address _tokenAddress) external view returns(uint deposits_) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":7478:7630  function getERC20Balance(address _tokenAddress) external view returns(uint balance_) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":12297:12831  function withdrawEth(uint _amount) public {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/KipuBankV3.sol\":10393:10565  function getERC20Balance(address user_, address _tokenAddress) external onlyOwner view returns(uint balance_) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      revert(0x00, 0x00)\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":1490:1526  AggregatorV3Interface public s_feeds */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      revert(0x00, 0x00)\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":8221:8388  function getERC20Withdrawals(address _tokenAddress) external view returns(uint withdrawals_) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      revert(0x00, 0x00)\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":6630:6775  function getBalanceInUSD() external view returns(uint balance_) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      revert(0x00, 0x00)\n    tag_137:\n      pop\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"contracts/KipuBankV3.sol\":8729:8870  function getBalance(address user_) external onlyOwner view returns(uint balance_) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      revert(0x00, 0x00)\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KipuBankV3.sol\":5160:5562  function depositEth() public payable {... */\n    tag_35:\n        /* \"contracts/KipuBankV3.sol\":5228:5229  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5216:5225  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5216:5229  msg.value > 0 */\n      gt\n        /* \"contracts/KipuBankV3.sol\":5249:5259  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5260:5269  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5208:5271  require(msg.value > 0, DepositNotAllowed(msg.sender,msg.value)) */\n      swap1\n      swap2\n      tag_151\n      jumpi\n      mload(0x40)\n      0xacb26d8e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":5338:5347  s_bankCap */\n      immutable(\"0x795dcf830090319074c4e36a23e7ad6013124a9e4afc765f3f324f667dfac3a5\")\n        /* \"contracts/KipuBankV3.sol\":5290:5347  msg.value+s_balances[msg.sender][address(0)] <= s_bankCap */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":5300:5310  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":5300:5322  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5311:5321  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5300:5322  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":5300:5334  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5331:5332  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5300:5334  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":5290:5299  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5290:5334  msg.value+s_balances[msg.sender][address(0)] */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/KipuBankV3.sol\":5290:5347  msg.value+s_balances[msg.sender][address(0)] <= s_bankCap */\n      gt\n      iszero\n        /* \"contracts/KipuBankV3.sol\":5367:5377  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5378:5387  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5282:5389  require(msg.value+s_balances[msg.sender][address(0)] <= s_bankCap, DepositNotAllowed(msg.sender,msg.value)) */\n      swap1\n      swap2\n      tag_156\n      jumpi\n      mload(0x40)\n      0xacb26d8e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":5440:5449  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5402:5412  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":5402:5424  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5413:5423  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5402:5424  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":5402:5436  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5433:5434  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5402:5436  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5402:5449  s_balances[msg.sender][address(0)] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV3.sol\":5460:5470  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":5460:5482  s_deposits[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5471:5481  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5460:5482  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":5460:5494  s_deposits[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5491:5492  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5460:5494  s_deposits[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5460:5496  s_deposits[msg.sender][address(0)]++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":5522:5554  Deposited(msg.sender, msg.value) */\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"contracts/KipuBankV3.sol\":5532:5542  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":5544:5553  msg.value */\n      callvalue\n        /* \"contracts/KipuBankV3.sol\":5522:5554  Deposited(msg.sender, msg.value) */\n      mload(0x40)\n      tag_161\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV3.sol\":5160:5562  function depositEth() public payable {... */\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":6394:6517  function getBalance() external view returns(uint balance_) {... */\n    tag_38:\n        /* \"contracts/KipuBankV3.sol\":6438:6451  uint balance_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6475:6485  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":6475:6497  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6486:6496  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6475:6497  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":6475:6509  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6506:6507  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6475:6509  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":6464:6509  balance_ = s_balances[msg.sender][address(0)] */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":6394:6517  function getBalance() external view returns(uint balance_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":9107:9260  function getBalanceInUSD(address user_) external view returns(uint balance_) {... */\n    tag_45:\n        /* \"contracts/KipuBankV3.sol\":9169:9182  uint balance_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9206:9252  convertEthInUSD(s_balances[user_][address(0)]) */\n      tag_164\n        /* \"contracts/KipuBankV3.sol\":9222:9232  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":9222:9239  s_balances[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9233:9238  user_ */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":9222:9239  s_balances[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":9222:9251  s_balances[user_][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9248:9249  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9222:9251  s_balances[user_][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":9206:9221  convertEthInUSD */\n      tag_165\n        /* \"contracts/KipuBankV3.sol\":9206:9252  convertEthInUSD(s_balances[user_][address(0)]) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/KipuBankV3.sol\":9195:9252  balance_ = convertEthInUSD(s_balances[user_][address(0)]) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":9107:9260  function getBalanceInUSD(address user_) external view returns(uint balance_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":10910:11085  function getERC20Deposits(address user_, address _tokenAddress) external onlyOwner view returns(uint deposits_) {... */\n    tag_51:\n        /* \"contracts/KipuBankV3.sol\":11006:11020  uint deposits_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/KipuBankV3.sol\":11045:11055  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":11045:11062  s_deposits[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":11056:11061  user_ */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":11045:11062  s_deposits[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":11045:11077  s_deposits[user_][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":11063:11076  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":11045:11077  s_deposits[user_][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":11033:11077  deposits_ = s_deposits[user_][_tokenAddress] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":10910:11085  function getERC20Deposits(address user_, address _tokenAddress) external onlyOwner view returns(uint deposits_) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":9906:10062  function getWithdrawals(address user_) external onlyOwner view returns(uint withdrawals_) {... */\n    tag_56:\n        /* \"contracts/KipuBankV3.sol\":9977:9994  uint withdrawals_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/KipuBankV3.sol\":10022:10035  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":10022:10042  s_withdrawals[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":10036:10041  user_ */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":10022:10042  s_withdrawals[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":10022:10054  s_withdrawals[user_][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":10051:10052  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":10022:10054  s_withdrawals[user_][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":10007:10054  withdrawals_ = s_withdrawals[user_][address(0)] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":9906:10062  function getWithdrawals(address user_) external onlyOwner view returns(uint withdrawals_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":7131:7269  function getWithdrawals() external view returns(uint withdrawals_) {... */\n    tag_61:\n        /* \"contracts/KipuBankV3.sol\":7179:7196  uint withdrawals_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7224:7237  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":7224:7249  s_withdrawals[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7238:7248  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":7224:7249  s_withdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":7224:7261  s_withdrawals[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7258:7259  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7224:7261  s_withdrawals[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":7209:7261  withdrawals_ = s_withdrawals[msg.sender][address(0)] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":7131:7269  function getWithdrawals() external view returns(uint withdrawals_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":6889:7015  function getDeposits() external view returns(uint deposits_) {... */\n    tag_65:\n        /* \"contracts/KipuBankV3.sol\":6934:6948  uint deposits_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6973:6983  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":6973:6995  s_deposits[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6984:6994  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6973:6995  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":6973:7007  s_deposits[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7004:7005  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6973:7007  s_deposits[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":6961:7007  deposits_ = s_deposits[msg.sender][address(0)] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":6889:7015  function getDeposits() external view returns(uint deposits_) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":11833:12023  function setFeeds(address _feed) external onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/KipuBankV3.sol\":11903:11962  ChainlinkFeedUpdated(s_feeds, AggregatorV3Interface(_feed)) */\n      0x3be680563c528780d5a9cd763a27b4a48ab5f9dc10e4083a2fa55b6fc5ff33e6\n        /* \"contracts/KipuBankV3.sol\":11924:11931  s_feeds */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":11955:11960  _feed */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":11903:11962  ChainlinkFeedUpdated(s_feeds, AggregatorV3Interface(_feed)) */\n      mload(0x40)\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV3.sol\":12007:12012  _feed */\n      dup1\n        /* \"contracts/KipuBankV3.sol\":11975:11982  s_feeds */\n      0x01\n      0x00\n        /* \"contracts/KipuBankV3.sol\":11975:12013  s_feeds = AggregatorV3Interface(_feed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV3.sol\":11833:12023  function setFeeds(address _feed) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":2384:2433  uint128 public immutable s_withdrawLimit = 10**18 */\n    tag_76:\n      immutable(\"0xc428c6907bdb089a99d3f8e2fb15559324b37df012d4d9c6f20b91e1c28c612e\")\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":2293:2327  uint128 public immutable s_bankCap */\n    tag_81:\n      immutable(\"0x795dcf830090319074c4e36a23e7ad6013124a9e4afc765f3f324f667dfac3a5\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":9510:9654  function getDeposits(address user_) external onlyOwner view returns(uint deposits_) {... */\n    tag_91:\n        /* \"contracts/KipuBankV3.sol\":9578:9592  uint deposits_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/KipuBankV3.sol\":9617:9627  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":9617:9634  s_deposits[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9628:9633  user_ */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":9617:9634  s_deposits[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":9617:9646  s_deposits[user_][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9643:9644  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":9617:9646  s_deposits[user_][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":9605:9646  deposits_ = s_deposits[user_][address(0)] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":9510:9654  function getDeposits(address user_) external onlyOwner view returns(uint deposits_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":11432:11619  function getERC20Withdrawals(address user_, address _tokenAddress) external onlyOwner view returns(uint withdrawals_) {... */\n    tag_96:\n        /* \"contracts/KipuBankV3.sol\":11531:11548  uint withdrawals_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/KipuBankV3.sol\":11576:11589  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":11576:11596  s_withdrawals[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":11590:11595  user_ */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":11576:11596  s_withdrawals[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":11576:11611  s_withdrawals[user_][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":11597:11610  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":11576:11611  s_withdrawals[user_][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":11561:11611  withdrawals_ = s_withdrawals[user_][_tokenAddress] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":11432:11619  function getERC20Withdrawals(address user_, address _tokenAddress) external onlyOwner view returns(uint withdrawals_) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":5873:6286  function depositERC20(address _tokenAddress, uint256 _amount) external {... */\n    tag_102:\n        /* \"contracts/KipuBankV3.sol\":5973:5974  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":5963:5970  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":5963:5974  _amount > 0 */\n      gt\n        /* \"contracts/KipuBankV3.sol\":5994:6004  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6005:6012  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":5955:6014  require(_amount > 0, DepositNotAllowed(msg.sender,_amount)) */\n      swap1\n      swap2\n      tag_193\n      jumpi\n      mload(0x40)\n      0xacb26d8e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":6066:6073  _amount */\n      dup1\n        /* \"contracts/KipuBankV3.sol\":6025:6035  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":6025:6047  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6036:6046  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6025:6047  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":6025:6062  s_balances[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6048:6061  _tokenAddress */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":6025:6062  s_balances[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6025:6073  s_balances[msg.sender][_tokenAddress] += _amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV3.sol\":6084:6094  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":6084:6106  s_deposits[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6095:6105  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6084:6106  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":6084:6121  s_deposits[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6107:6120  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":6084:6121  s_deposits[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6084:6123  s_deposits[msg.sender][_tokenAddress]++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_196\n      swap1\n      tag_160\n      jump\t// in\n    tag_196:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":6141:6191  ERC20Deposited(msg.sender, _tokenAddress, _amount) */\n      0xe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1\n        /* \"contracts/KipuBankV3.sol\":6156:6166  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6168:6181  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":6183:6190  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":6141:6191  ERC20Deposited(msg.sender, _tokenAddress, _amount) */\n      mload(0x40)\n      tag_197\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV3.sol\":6204:6278  IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_199\n        /* \"contracts/KipuBankV3.sol\":6243:6253  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6263:6267  this */\n      address\n        /* \"contracts/KipuBankV3.sol\":6270:6277  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":6211:6224  _tokenAddress */\n      dup6\n        /* \"contracts/KipuBankV3.sol\":6204:6242  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"contracts/KipuBankV3.sol\":6204:6278  IERC20(_tokenAddress).safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/KipuBankV3.sol\":5873:6286  function depositERC20(address _tokenAddress, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":13183:13739  function withdrawERC20(address _tokenAddress, uint _amount) public {... */\n    tag_106:\n        /* \"contracts/KipuBankV3.sol\":13279:13280  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13269:13276  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":13269:13280  _amount > 0 */\n      gt\n        /* \"contracts/KipuBankV3.sol\":13308:13318  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13320:13333  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13335:13342  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13261:13344  require(_amount > 0, ERC20ExtractionNotAllowed(msg.sender, _tokenAddress, _amount)) */\n      swap1\n      swap2\n      swap3\n      tag_202\n      jumpi\n      mload(0x40)\n      0xb4e4601d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n      pop\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":13374:13384  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":13374:13396  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13385:13395  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13374:13396  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":13374:13411  s_balances[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13397:13410  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13374:13411  s_balances[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":13363:13370  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":13363:13411  _amount <= s_balances[msg.sender][_tokenAddress] */\n      gt\n      iszero\n        /* \"contracts/KipuBankV3.sol\":13439:13449  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13451:13464  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13466:13473  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13355:13475  require(_amount <= s_balances[msg.sender][_tokenAddress], ERC20ExtractionNotAllowed(msg.sender, _tokenAddress, _amount)) */\n      swap1\n      swap2\n      swap3\n      tag_204\n      jumpi\n      mload(0x40)\n      0xb4e4601d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n      pop\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":13529:13536  _amount */\n      dup1\n        /* \"contracts/KipuBankV3.sol\":13488:13498  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":13488:13510  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13499:13509  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13488:13510  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":13488:13525  s_balances[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13511:13524  _tokenAddress */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":13488:13525  s_balances[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13488:13536  s_balances[msg.sender][_tokenAddress] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV3.sol\":13547:13560  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":13547:13572  s_withdrawals[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13561:13571  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13547:13572  s_withdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":13547:13587  s_withdrawals[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13573:13586  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13547:13587  s_withdrawals[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":13547:13589  s_withdrawals[msg.sender][_tokenAddress]++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_208\n      swap1\n      tag_160\n      jump\t// in\n    tag_208:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":13610:13647  transferERC20(_tokenAddress, _amount) */\n      tag_209\n        /* \"contracts/KipuBankV3.sol\":13624:13637  _tokenAddress */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":13639:13646  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":13610:13623  transferERC20 */\n      tag_210\n        /* \"contracts/KipuBankV3.sol\":13610:13647  transferERC20(_tokenAddress, _amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/KipuBankV3.sol\":13673:13723  ERC20Extracted(msg.sender, _tokenAddress, _amount) */\n      0xd0164496e26f9675acaea59fb065313e45d71d1d3e09d3681765773cd4aa1918\n        /* \"contracts/KipuBankV3.sol\":13688:13698  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":13700:13713  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13715:13722  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":13673:13723  ERC20Extracted(msg.sender, _tokenAddress, _amount) */\n      mload(0x40)\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV3.sol\":13183:13739  function withdrawERC20(address _tokenAddress, uint _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":7847:8002  function getERC20Deposits(address _tokenAddress) external view returns(uint deposits_) {... */\n    tag_110:\n        /* \"contracts/KipuBankV3.sol\":7918:7932  uint deposits_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7957:7967  s_deposits */\n      0x03\n        /* \"contracts/KipuBankV3.sol\":7957:7979  s_deposits[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7968:7978  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":7957:7979  s_deposits[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":7957:7994  s_deposits[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7980:7993  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":7957:7994  s_deposits[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":7945:7994  deposits_ = s_deposits[msg.sender][_tokenAddress] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":7847:8002  function getERC20Deposits(address _tokenAddress) external view returns(uint deposits_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":7478:7630  function getERC20Balance(address _tokenAddress) external view returns(uint balance_) {... */\n    tag_115:\n        /* \"contracts/KipuBankV3.sol\":7548:7561  uint balance_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7585:7595  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":7585:7607  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7596:7606  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":7585:7607  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":7585:7622  s_balances[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":7608:7621  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":7585:7622  s_balances[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":7574:7622  balance_ = s_balances[msg.sender][_tokenAddress] */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":7478:7630  function getERC20Balance(address _tokenAddress) external view returns(uint balance_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":12297:12831  function withdrawEth(uint _amount) public {... */\n    tag_121:\n        /* \"contracts/KipuBankV3.sol\":12368:12369  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12358:12365  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":12358:12369  _amount > 0 */\n      gt\n        /* \"contracts/KipuBankV3.sol\":12392:12402  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12404:12411  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":12350:12413  require(_amount > 0, ExtractionNotAllowed(msg.sender, _amount)) */\n      swap1\n      swap2\n      tag_215\n      jumpi\n      mload(0x40)\n      0xf607410700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":12443:12453  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":12443:12465  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12454:12464  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12443:12465  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":12443:12477  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12474:12475  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12443:12477  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":12432:12439  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":12432:12477  _amount <= s_balances[msg.sender][address(0)] */\n      gt\n      iszero\n        /* \"contracts/KipuBankV3.sol\":12500:12510  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12512:12519  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":12424:12521  require(_amount <= s_balances[msg.sender][address(0)], ExtractionNotAllowed(msg.sender, _amount)) */\n      swap1\n      swap2\n      tag_217\n      jumpi\n      mload(0x40)\n      0xf607410700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":12551:12566  s_withdrawLimit */\n      immutable(\"0xc428c6907bdb089a99d3f8e2fb15559324b37df012d4d9c6f20b91e1c28c612e\")\n        /* \"contracts/KipuBankV3.sol\":12540:12566  _amount <= s_withdrawLimit */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":12540:12547  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":12540:12566  _amount <= s_withdrawLimit */\n      gt\n      iszero\n        /* \"contracts/KipuBankV3.sol\":12589:12599  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12601:12608  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":12532:12610  require(_amount <= s_withdrawLimit, ExtractionNotAllowed(msg.sender, _amount)) */\n      swap1\n      swap2\n      tag_219\n      jumpi\n      mload(0x40)\n      0xf607410700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":12661:12668  _amount */\n      dup1\n        /* \"contracts/KipuBankV3.sol\":12623:12633  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":12623:12645  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12634:12644  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12623:12645  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":12623:12657  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12654:12655  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12623:12657  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12623:12668  s_balances[msg.sender][address(0)] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_221:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KipuBankV3.sol\":12679:12692  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":12679:12704  s_withdrawals[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12693:12703  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12679:12704  s_withdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":12679:12716  s_withdrawals[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12713:12714  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12679:12716  s_withdrawals[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KipuBankV3.sol\":12679:12718  s_withdrawals[msg.sender][address(0)]++ */\n      dup2\n      dup2\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_222\n      swap1\n      tag_160\n      jump\t// in\n    tag_222:\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":12739:12759  transferEth(_amount) */\n      tag_223\n        /* \"contracts/KipuBankV3.sol\":12751:12758  _amount */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":12739:12750  transferEth */\n      tag_224\n        /* \"contracts/KipuBankV3.sol\":12739:12759  transferEth(_amount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/KipuBankV3.sol\":12785:12815  Extracted(msg.sender, _amount) */\n      0x69c169e5c85af54e1ca7e16608ccc812437821387924fb3353a7d053264ddaa0\n        /* \"contracts/KipuBankV3.sol\":12795:12805  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":12807:12814  _amount */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":12785:12815  Extracted(msg.sender, _amount) */\n      mload(0x40)\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/KipuBankV3.sol\":12297:12831  function withdrawEth(uint _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":10393:10565  function getERC20Balance(address user_, address _tokenAddress) external onlyOwner view returns(uint balance_) {... */\n    tag_125:\n        /* \"contracts/KipuBankV3.sol\":10488:10501  uint balance_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/KipuBankV3.sol\":10525:10535  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":10525:10542  s_balances[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":10536:10541  user_ */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":10525:10542  s_balances[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":10525:10557  s_balances[user_][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":10543:10556  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":10525:10557  s_balances[user_][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":10514:10557  balance_ = s_balances[user_][_tokenAddress] */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":10393:10565  function getERC20Balance(address user_, address _tokenAddress) external onlyOwner view returns(uint balance_) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":1490:1526  AggregatorV3Interface public s_feeds */\n    tag_129:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":8221:8388  function getERC20Withdrawals(address _tokenAddress) external view returns(uint withdrawals_) {... */\n    tag_135:\n        /* \"contracts/KipuBankV3.sol\":8295:8312  uint withdrawals_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8340:8353  s_withdrawals */\n      0x04\n        /* \"contracts/KipuBankV3.sol\":8340:8365  s_withdrawals[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8354:8364  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":8340:8365  s_withdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":8340:8380  s_withdrawals[msg.sender][_tokenAddress] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8366:8379  _tokenAddress */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":8340:8380  s_withdrawals[msg.sender][_tokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":8325:8380  withdrawals_ = s_withdrawals[msg.sender][_tokenAddress] */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":8221:8388  function getERC20Withdrawals(address _tokenAddress) external view returns(uint withdrawals_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":6630:6775  function getBalanceInUSD() external view returns(uint balance_) {... */\n    tag_139:\n        /* \"contracts/KipuBankV3.sol\":6679:6692  uint balance_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6716:6767  convertEthInUSD(s_balances[msg.sender][address(0)]) */\n      tag_231\n        /* \"contracts/KipuBankV3.sol\":6732:6742  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":6732:6754  s_balances[msg.sender] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6743:6753  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":6732:6754  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":6732:6766  s_balances[msg.sender][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6763:6764  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":6732:6766  s_balances[msg.sender][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":6716:6731  convertEthInUSD */\n      tag_165\n        /* \"contracts/KipuBankV3.sol\":6716:6767  convertEthInUSD(s_balances[msg.sender][address(0)]) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/KipuBankV3.sol\":6705:6767  balance_ = convertEthInUSD(s_balances[msg.sender][address(0)]) */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":6630:6775  function getBalanceInUSD() external view returns(uint balance_) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":8729:8870  function getBalance(address user_) external onlyOwner view returns(uint balance_) {... */\n    tag_148:\n        /* \"contracts/KipuBankV3.sol\":8796:8809  uint balance_ */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/KipuBankV3.sol\":8833:8843  s_balances */\n      0x02\n        /* \"contracts/KipuBankV3.sol\":8833:8850  s_balances[user_] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8844:8849  user_ */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":8833:8850  s_balances[user_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KipuBankV3.sol\":8833:8862  s_balances[user_][address(0)] */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8859:8860  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":8833:8862  s_balances[user_][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KipuBankV3.sol\":8822:8862  balance_ = s_balances[user_][address(0)] */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":8729:8870  function getBalance(address user_) external onlyOwner view returns(uint balance_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":13980:14159  function convertEthInUSD(uint256 _ethAmount) internal view returns (uint256 convertedAmount_) {... */\n    tag_165:\n        /* \"contracts/KipuBankV3.sol\":14048:14072  uint256 convertedAmount_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":1396:1408  1 * 10 ** 20 */\n      0x056bc75e2d63100000\n        /* \"contracts/KipuBankV3.sol\":14118:14133  chainlinkFeed() */\n      tag_242\n        /* \"contracts/KipuBankV3.sol\":14118:14131  chainlinkFeed */\n      tag_243\n        /* \"contracts/KipuBankV3.sol\":14118:14133  chainlinkFeed() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/KipuBankV3.sol\":14105:14115  _ethAmount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":14105:14133  _ethAmount * chainlinkFeed() */\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/KipuBankV3.sol\":14104:14151  (_ethAmount * chainlinkFeed()) / DECIMAL_FACTOR */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"contracts/KipuBankV3.sol\":14085:14151  convertedAmount_ = (_ethAmount * chainlinkFeed()) / DECIMAL_FACTOR */\n      swap1\n      pop\n        /* \"contracts/KipuBankV3.sol\":13980:14159  function convertEthInUSD(uint256 _ethAmount) internal view returns (uint256 convertedAmount_) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_250\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_250\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_258\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":15417:15578  function transferERC20(address _tokenAddress, uint _amount) private {... */\n    tag_210:\n        /* \"contracts/KipuBankV3.sol\":15496:15570  IERC20(_tokenAddress).safeTransferFrom(address(this), msg.sender, _amount) */\n      tag_261\n        /* \"contracts/KipuBankV3.sol\":15543:15547  this */\n      address\n        /* \"contracts/KipuBankV3.sol\":15550:15560  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":15562:15569  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":15503:15516  _tokenAddress */\n      dup6\n        /* \"contracts/KipuBankV3.sol\":15496:15534  IERC20(_tokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_200\n      swap1\n        /* \"contracts/KipuBankV3.sol\":15496:15570  IERC20(_tokenAddress).safeTransferFrom(address(this), msg.sender, _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/KipuBankV3.sol\":15417:15578  function transferERC20(address _tokenAddress, uint _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":14894:15109  function transferEth(uint _amount) private {... */\n    tag_224:\n        /* \"contracts/KipuBankV3.sol\":14949:14961  bool success */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14963:14985  bytes memory errorData */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14989:14999  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":14989:15004  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":15012:15019  _amount */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":14989:15024  msg.sender.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_267\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_266)\n    tag_267:\n      0x60\n      swap2\n      pop\n    tag_266:\n      pop\n        /* \"contracts/KipuBankV3.sol\":14948:15024  (bool success, bytes memory errorData) = msg.sender.call{value: _amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/KipuBankV3.sol\":15043:15050  success */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":15071:15081  msg.sender */\n      caller\n        /* \"contracts/KipuBankV3.sol\":15082:15089  _amount */\n      dup5\n        /* \"contracts/KipuBankV3.sol\":15090:15099  errorData */\n      dup4\n        /* \"contracts/KipuBankV3.sol\":15035:15101  require(success, ExtractionReverted(msg.sender,_amount,errorData)) */\n      swap1\n      swap2\n      swap3\n      tag_268\n      jumpi\n      mload(0x40)\n      0x3fd18b8500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n      pop\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":14937:15109  {... */\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":14894:15109  function transferEth(uint _amount) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/KipuBankV3.sol\":14318:14667  function chainlinkFeed() internal view returns (uint256 ethUSDPrice_) {... */\n    tag_243:\n        /* \"contracts/KipuBankV3.sol\":14366:14386  uint256 ethUSDPrice_ */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14402:14420  int256 ethUSDPrice */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14423:14440  uint256 updatedAt */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14445:14452  s_feeds */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KipuBankV3.sol\":14445:14468  s_feeds.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/KipuBankV3.sol\":14445:14470  s_feeds.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"contracts/KipuBankV3.sol\":14399:14470  (, int256 ethUSDPrice,, uint256 updatedAt,) = s_feeds.latestRoundData() */\n      pop\n      swap4\n      pop\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":14506:14507  0 */\n      0x00\n        /* \"contracts/KipuBankV3.sol\":14491:14502  ethUSDPrice */\n      dup3\n        /* \"contracts/KipuBankV3.sol\":14491:14507  ethUSDPrice != 0 */\n      sub\n        /* \"contracts/KipuBankV3.sol\":14483:14529  require(ethUSDPrice != 0, OracleCompromised()) */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x144c1d9500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/KipuBankV3.sol\":1278:1282  3600 */\n      0x0e10\n        /* \"contracts/KipuBankV3.sol\":14548:14596  (block.timestamp - updatedAt) > ORACLE_HEARTBEAT */\n      0xffff\n      and\n        /* \"contracts/KipuBankV3.sol\":14567:14576  updatedAt */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":14549:14564  block.timestamp */\n      timestamp\n        /* \"contracts/KipuBankV3.sol\":14549:14576  block.timestamp - updatedAt */\n      tag_277\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_277:\n        /* \"contracts/KipuBankV3.sol\":14548:14596  (block.timestamp - updatedAt) > ORACLE_HEARTBEAT */\n      gt\n        /* \"contracts/KipuBankV3.sol\":14540:14611  require((block.timestamp - updatedAt) > ORACLE_HEARTBEAT, StalePrice()) */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x19abf40e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/KipuBankV3.sol\":14647:14658  ethUSDPrice */\n      dup2\n        /* \"contracts/KipuBankV3.sol\":14624:14659  ethUSDPrice_ = uint256(ethUSDPrice) */\n      swap3\n      pop\n        /* \"contracts/KipuBankV3.sol\":14388:14667  {... */\n      pop\n      pop\n        /* \"contracts/KipuBankV3.sol\":14318:14667  function chainlinkFeed() internal view returns (uint256 ethUSDPrice_) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_283)\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_286:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_287:\n        /* \"#utility.yul\":177:201   */\n      tag_326\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_286\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_40:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_328\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_287\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_289:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_291:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_292:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_334\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_291\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_293:\n        /* \"#utility.yul\":1076:1100   */\n      tag_336\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_292\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_337:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_294:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_339\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_293\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_44:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_342\n      tag_289\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1352:1471   */\n    tag_341:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_343\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_294\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2085   */\n    tag_50:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x40\n        /* \"#utility.yul\":1724:1733   */\n      dup4\n        /* \"#utility.yul\":1715:1722   */\n      dup6\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_346\n      tag_289\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1704:1823   */\n    tag_345:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_347\n        /* \"#utility.yul\":1932:1939   */\n      dup6\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup7\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_294\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1877:1940   */\n      swap3\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":2015:2068   */\n      tag_348\n        /* \"#utility.yul\":2060:2067   */\n      dup6\n        /* \"#utility.yul\":2051:2057   */\n      dup3\n        /* \"#utility.yul\":2040:2049   */\n      dup7\n        /* \"#utility.yul\":2036:2058   */\n      add\n        /* \"#utility.yul\":2015:2068   */\n      tag_294\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2005:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":1960:2078   */\n      pop\n        /* \"#utility.yul\":1611:2085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2209   */\n    tag_295:\n        /* \"#utility.yul\":2128:2135   */\n      0x00\n        /* \"#utility.yul\":2168:2202   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2161:2166   */\n      dup3\n        /* \"#utility.yul\":2157:2203   */\n      and\n        /* \"#utility.yul\":2146:2203   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2333   */\n    tag_296:\n        /* \"#utility.yul\":2302:2326   */\n      tag_351\n        /* \"#utility.yul\":2320:2325   */\n      dup2\n        /* \"#utility.yul\":2302:2326   */\n      tag_295\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2297:2300   */\n      dup3\n        /* \"#utility.yul\":2290:2327   */\n      mstore\n        /* \"#utility.yul\":2215:2333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:2561   */\n    tag_78:\n        /* \"#utility.yul\":2432:2436   */\n      0x00\n        /* \"#utility.yul\":2470:2472   */\n      0x20\n        /* \"#utility.yul\":2459:2468   */\n      dup3\n        /* \"#utility.yul\":2455:2473   */\n      add\n        /* \"#utility.yul\":2447:2473   */\n      swap1\n      pop\n        /* \"#utility.yul\":2483:2554   */\n      tag_353\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2540:2549   */\n      dup4\n        /* \"#utility.yul\":2536:2553   */\n      add\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2483:2554   */\n      tag_296\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2339:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2685   */\n    tag_297:\n        /* \"#utility.yul\":2654:2678   */\n      tag_355\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2654:2678   */\n      tag_292\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2649:2652   */\n      dup3\n        /* \"#utility.yul\":2642:2679   */\n      mstore\n        /* \"#utility.yul\":2567:2685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:2913   */\n    tag_87:\n        /* \"#utility.yul\":2784:2788   */\n      0x00\n        /* \"#utility.yul\":2822:2824   */\n      0x20\n        /* \"#utility.yul\":2811:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2825   */\n      add\n        /* \"#utility.yul\":2799:2825   */\n      swap1\n      pop\n        /* \"#utility.yul\":2835:2906   */\n      tag_357\n        /* \"#utility.yul\":2903:2904   */\n      0x00\n        /* \"#utility.yul\":2892:2901   */\n      dup4\n        /* \"#utility.yul\":2888:2905   */\n      add\n        /* \"#utility.yul\":2879:2885   */\n      dup5\n        /* \"#utility.yul\":2835:2906   */\n      tag_297\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2691:2913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3041   */\n    tag_298:\n        /* \"#utility.yul\":2992:3016   */\n      tag_359\n        /* \"#utility.yul\":3010:3015   */\n      dup2\n        /* \"#utility.yul\":2992:3016   */\n      tag_286\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2985:2990   */\n      dup2\n        /* \"#utility.yul\":2982:3017   */\n      eq\n        /* \"#utility.yul\":2972:3035   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":3031:3032   */\n      0x00\n        /* \"#utility.yul\":3028:3029   */\n      0x00\n        /* \"#utility.yul\":3021:3033   */\n      revert\n        /* \"#utility.yul\":2972:3035   */\n    tag_360:\n        /* \"#utility.yul\":2919:3041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3047:3186   */\n    tag_299:\n        /* \"#utility.yul\":3093:3098   */\n      0x00\n        /* \"#utility.yul\":3131:3137   */\n      dup2\n        /* \"#utility.yul\":3118:3138   */\n      calldataload\n        /* \"#utility.yul\":3109:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":3147:3180   */\n      tag_362\n        /* \"#utility.yul\":3174:3179   */\n      dup2\n        /* \"#utility.yul\":3147:3180   */\n      tag_298\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3047:3186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3192:3666   */\n    tag_101:\n        /* \"#utility.yul\":3260:3266   */\n      0x00\n        /* \"#utility.yul\":3268:3274   */\n      0x00\n        /* \"#utility.yul\":3317:3319   */\n      0x40\n        /* \"#utility.yul\":3305:3314   */\n      dup4\n        /* \"#utility.yul\":3296:3303   */\n      dup6\n        /* \"#utility.yul\":3292:3315   */\n      sub\n        /* \"#utility.yul\":3288:3320   */\n      slt\n        /* \"#utility.yul\":3285:3404   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":3323:3402   */\n      tag_365\n      tag_289\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3285:3404   */\n    tag_364:\n        /* \"#utility.yul\":3443:3444   */\n      0x00\n        /* \"#utility.yul\":3468:3521   */\n      tag_366\n        /* \"#utility.yul\":3513:3520   */\n      dup6\n        /* \"#utility.yul\":3504:3510   */\n      dup3\n        /* \"#utility.yul\":3493:3502   */\n      dup7\n        /* \"#utility.yul\":3489:3511   */\n      add\n        /* \"#utility.yul\":3468:3521   */\n      tag_294\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":3458:3521   */\n      swap3\n      pop\n        /* \"#utility.yul\":3414:3531   */\n      pop\n        /* \"#utility.yul\":3570:3572   */\n      0x20\n        /* \"#utility.yul\":3596:3649   */\n      tag_367\n        /* \"#utility.yul\":3641:3648   */\n      dup6\n        /* \"#utility.yul\":3632:3638   */\n      dup3\n        /* \"#utility.yul\":3621:3630   */\n      dup7\n        /* \"#utility.yul\":3617:3639   */\n      add\n        /* \"#utility.yul\":3596:3649   */\n      tag_299\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3586:3649   */\n      swap2\n      pop\n        /* \"#utility.yul\":3541:3659   */\n      pop\n        /* \"#utility.yul\":3192:3666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3672:4001   */\n    tag_120:\n        /* \"#utility.yul\":3731:3737   */\n      0x00\n        /* \"#utility.yul\":3780:3782   */\n      0x20\n        /* \"#utility.yul\":3768:3777   */\n      dup3\n        /* \"#utility.yul\":3759:3766   */\n      dup5\n        /* \"#utility.yul\":3755:3778   */\n      sub\n        /* \"#utility.yul\":3751:3783   */\n      slt\n        /* \"#utility.yul\":3748:3867   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":3786:3865   */\n      tag_370\n      tag_289\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3748:3867   */\n    tag_369:\n        /* \"#utility.yul\":3906:3907   */\n      0x00\n        /* \"#utility.yul\":3931:3984   */\n      tag_371\n        /* \"#utility.yul\":3976:3983   */\n      dup5\n        /* \"#utility.yul\":3967:3973   */\n      dup3\n        /* \"#utility.yul\":3956:3965   */\n      dup6\n        /* \"#utility.yul\":3952:3974   */\n      add\n        /* \"#utility.yul\":3931:3984   */\n      tag_299\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3921:3984   */\n      swap2\n      pop\n        /* \"#utility.yul\":3877:3994   */\n      pop\n        /* \"#utility.yul\":3672:4001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4067   */\n    tag_300:\n        /* \"#utility.yul\":4035:4038   */\n      0x00\n        /* \"#utility.yul\":4056:4061   */\n      dup2\n        /* \"#utility.yul\":4049:4061   */\n      swap1\n      pop\n        /* \"#utility.yul\":4007:4067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4073:4215   */\n    tag_301:\n        /* \"#utility.yul\":4123:4132   */\n      0x00\n        /* \"#utility.yul\":4156:4209   */\n      tag_374\n        /* \"#utility.yul\":4174:4208   */\n      tag_375\n        /* \"#utility.yul\":4183:4207   */\n      tag_376\n        /* \"#utility.yul\":4201:4206   */\n      dup5\n        /* \"#utility.yul\":4183:4207   */\n      tag_291\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4174:4208   */\n      tag_300\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4156:4209   */\n      tag_291\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4143:4209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4073:4215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4221:4347   */\n    tag_302:\n        /* \"#utility.yul\":4271:4280   */\n      0x00\n        /* \"#utility.yul\":4304:4341   */\n      tag_378\n        /* \"#utility.yul\":4335:4340   */\n      dup3\n        /* \"#utility.yul\":4304:4341   */\n      tag_301\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":4291:4341   */\n      swap1\n      pop\n        /* \"#utility.yul\":4221:4347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4353:4507   */\n    tag_303:\n        /* \"#utility.yul\":4431:4440   */\n      0x00\n        /* \"#utility.yul\":4464:4501   */\n      tag_380\n        /* \"#utility.yul\":4495:4500   */\n      dup3\n        /* \"#utility.yul\":4464:4501   */\n      tag_302\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4451:4501   */\n      swap1\n      pop\n        /* \"#utility.yul\":4353:4507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4513:4700   */\n    tag_304:\n        /* \"#utility.yul\":4628:4693   */\n      tag_382\n        /* \"#utility.yul\":4687:4692   */\n      dup2\n        /* \"#utility.yul\":4628:4693   */\n      tag_303\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4623:4626   */\n      dup3\n        /* \"#utility.yul\":4616:4694   */\n      mstore\n        /* \"#utility.yul\":4513:4700   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4706:4984   */\n    tag_131:\n        /* \"#utility.yul\":4827:4831   */\n      0x00\n        /* \"#utility.yul\":4865:4867   */\n      0x20\n        /* \"#utility.yul\":4854:4863   */\n      dup3\n        /* \"#utility.yul\":4850:4868   */\n      add\n        /* \"#utility.yul\":4842:4868   */\n      swap1\n      pop\n        /* \"#utility.yul\":4878:4977   */\n      tag_384\n        /* \"#utility.yul\":4974:4975   */\n      0x00\n        /* \"#utility.yul\":4963:4972   */\n      dup4\n        /* \"#utility.yul\":4959:4976   */\n      add\n        /* \"#utility.yul\":4950:4956   */\n      dup5\n        /* \"#utility.yul\":4878:4977   */\n      tag_304\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4706:4984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4990:5322   */\n    tag_153:\n        /* \"#utility.yul\":5111:5115   */\n      0x00\n        /* \"#utility.yul\":5149:5151   */\n      0x40\n        /* \"#utility.yul\":5138:5147   */\n      dup3\n        /* \"#utility.yul\":5134:5152   */\n      add\n        /* \"#utility.yul\":5126:5152   */\n      swap1\n      pop\n        /* \"#utility.yul\":5162:5233   */\n      tag_386\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5219:5228   */\n      dup4\n        /* \"#utility.yul\":5215:5232   */\n      add\n        /* \"#utility.yul\":5206:5212   */\n      dup6\n        /* \"#utility.yul\":5162:5233   */\n      tag_297\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5243:5315   */\n      tag_387\n        /* \"#utility.yul\":5311:5313   */\n      0x20\n        /* \"#utility.yul\":5300:5309   */\n      dup4\n        /* \"#utility.yul\":5296:5314   */\n      add\n        /* \"#utility.yul\":5287:5293   */\n      dup5\n        /* \"#utility.yul\":5243:5315   */\n      tag_287\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4990:5322   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5508   */\n    tag_305:\n        /* \"#utility.yul\":5376:5453   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5373:5374   */\n      0x00\n        /* \"#utility.yul\":5366:5454   */\n      mstore\n        /* \"#utility.yul\":5473:5477   */\n      0x11\n        /* \"#utility.yul\":5470:5471   */\n      0x04\n        /* \"#utility.yul\":5463:5478   */\n      mstore\n        /* \"#utility.yul\":5497:5501   */\n      0x24\n        /* \"#utility.yul\":5494:5495   */\n      0x00\n        /* \"#utility.yul\":5487:5502   */\n      revert\n        /* \"#utility.yul\":5514:5705   */\n    tag_155:\n        /* \"#utility.yul\":5554:5557   */\n      0x00\n        /* \"#utility.yul\":5573:5593   */\n      tag_390\n        /* \"#utility.yul\":5591:5592   */\n      dup3\n        /* \"#utility.yul\":5573:5593   */\n      tag_286\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":5568:5593   */\n      swap2\n      pop\n        /* \"#utility.yul\":5607:5627   */\n      tag_391\n        /* \"#utility.yul\":5625:5626   */\n      dup4\n        /* \"#utility.yul\":5607:5627   */\n      tag_286\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5602:5627   */\n      swap3\n      pop\n        /* \"#utility.yul\":5650:5651   */\n      dup3\n        /* \"#utility.yul\":5647:5648   */\n      dup3\n        /* \"#utility.yul\":5643:5652   */\n      add\n        /* \"#utility.yul\":5636:5652   */\n      swap1\n      pop\n        /* \"#utility.yul\":5671:5674   */\n      dup1\n        /* \"#utility.yul\":5668:5669   */\n      dup3\n        /* \"#utility.yul\":5665:5675   */\n      gt\n        /* \"#utility.yul\":5662:5698   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":5678:5696   */\n      tag_393\n      tag_305\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5662:5698   */\n    tag_392:\n        /* \"#utility.yul\":5514:5705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5711:5804   */\n    tag_306:\n        /* \"#utility.yul\":5747:5754   */\n      0x00\n        /* \"#utility.yul\":5787:5797   */\n      0xffffffff\n        /* \"#utility.yul\":5780:5785   */\n      dup3\n        /* \"#utility.yul\":5776:5798   */\n      and\n        /* \"#utility.yul\":5765:5798   */\n      swap1\n      pop\n        /* \"#utility.yul\":5711:5804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5810:5985   */\n    tag_160:\n        /* \"#utility.yul\":5848:5851   */\n      0x00\n        /* \"#utility.yul\":5871:5894   */\n      tag_396\n        /* \"#utility.yul\":5888:5893   */\n      dup3\n        /* \"#utility.yul\":5871:5894   */\n      tag_306\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5862:5894   */\n      swap2\n      pop\n        /* \"#utility.yul\":5916:5926   */\n      0xffffffff\n        /* \"#utility.yul\":5909:5914   */\n      dup3\n        /* \"#utility.yul\":5906:5927   */\n      sub\n        /* \"#utility.yul\":5903:5950   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":5930:5948   */\n      tag_398\n      tag_305\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5903:5950   */\n    tag_397:\n        /* \"#utility.yul\":5977:5978   */\n      0x01\n        /* \"#utility.yul\":5970:5975   */\n      dup3\n        /* \"#utility.yul\":5966:5979   */\n      add\n        /* \"#utility.yul\":5959:5979   */\n      swap1\n      pop\n        /* \"#utility.yul\":5810:5985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5991:6435   */\n    tag_184:\n        /* \"#utility.yul\":6168:6172   */\n      0x00\n        /* \"#utility.yul\":6206:6208   */\n      0x40\n        /* \"#utility.yul\":6195:6204   */\n      dup3\n        /* \"#utility.yul\":6191:6209   */\n      add\n        /* \"#utility.yul\":6183:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6219:6318   */\n      tag_400\n        /* \"#utility.yul\":6315:6316   */\n      0x00\n        /* \"#utility.yul\":6304:6313   */\n      dup4\n        /* \"#utility.yul\":6300:6317   */\n      add\n        /* \"#utility.yul\":6291:6297   */\n      dup6\n        /* \"#utility.yul\":6219:6318   */\n      tag_304\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":6328:6428   */\n      tag_401\n        /* \"#utility.yul\":6424:6426   */\n      0x20\n        /* \"#utility.yul\":6413:6422   */\n      dup4\n        /* \"#utility.yul\":6409:6427   */\n      add\n        /* \"#utility.yul\":6400:6406   */\n      dup5\n        /* \"#utility.yul\":6328:6428   */\n      tag_304\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5991:6435   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6441:6883   */\n    tag_198:\n        /* \"#utility.yul\":6590:6594   */\n      0x00\n        /* \"#utility.yul\":6628:6630   */\n      0x60\n        /* \"#utility.yul\":6617:6626   */\n      dup3\n        /* \"#utility.yul\":6613:6631   */\n      add\n        /* \"#utility.yul\":6605:6631   */\n      swap1\n      pop\n        /* \"#utility.yul\":6641:6712   */\n      tag_403\n        /* \"#utility.yul\":6709:6710   */\n      0x00\n        /* \"#utility.yul\":6698:6707   */\n      dup4\n        /* \"#utility.yul\":6694:6711   */\n      add\n        /* \"#utility.yul\":6685:6691   */\n      dup7\n        /* \"#utility.yul\":6641:6712   */\n      tag_297\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6722:6794   */\n      tag_404\n        /* \"#utility.yul\":6790:6792   */\n      0x20\n        /* \"#utility.yul\":6779:6788   */\n      dup4\n        /* \"#utility.yul\":6775:6793   */\n      add\n        /* \"#utility.yul\":6766:6772   */\n      dup6\n        /* \"#utility.yul\":6722:6794   */\n      tag_297\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":6804:6876   */\n      tag_405\n        /* \"#utility.yul\":6872:6874   */\n      0x40\n        /* \"#utility.yul\":6861:6870   */\n      dup4\n        /* \"#utility.yul\":6857:6875   */\n      add\n        /* \"#utility.yul\":6848:6854   */\n      dup5\n        /* \"#utility.yul\":6804:6876   */\n      tag_287\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6441:6883   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6889:7083   */\n    tag_207:\n        /* \"#utility.yul\":6929:6933   */\n      0x00\n        /* \"#utility.yul\":6949:6969   */\n      tag_407\n        /* \"#utility.yul\":6967:6968   */\n      dup3\n        /* \"#utility.yul\":6949:6969   */\n      tag_286\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6944:6969   */\n      swap2\n      pop\n        /* \"#utility.yul\":6983:7003   */\n      tag_408\n        /* \"#utility.yul\":7001:7002   */\n      dup4\n        /* \"#utility.yul\":6983:7003   */\n      tag_286\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6978:7003   */\n      swap3\n      pop\n        /* \"#utility.yul\":7027:7028   */\n      dup3\n        /* \"#utility.yul\":7024:7025   */\n      dup3\n        /* \"#utility.yul\":7020:7029   */\n      sub\n        /* \"#utility.yul\":7012:7029   */\n      swap1\n      pop\n        /* \"#utility.yul\":7051:7052   */\n      dup2\n        /* \"#utility.yul\":7045:7049   */\n      dup2\n        /* \"#utility.yul\":7042:7053   */\n      gt\n        /* \"#utility.yul\":7039:7076   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7056:7074   */\n      tag_410\n      tag_305\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7039:7076   */\n    tag_409:\n        /* \"#utility.yul\":6889:7083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7499   */\n    tag_245:\n        /* \"#utility.yul\":7129:7136   */\n      0x00\n        /* \"#utility.yul\":7152:7172   */\n      tag_412\n        /* \"#utility.yul\":7170:7171   */\n      dup3\n        /* \"#utility.yul\":7152:7172   */\n      tag_286\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7147:7172   */\n      swap2\n      pop\n        /* \"#utility.yul\":7186:7206   */\n      tag_413\n        /* \"#utility.yul\":7204:7205   */\n      dup4\n        /* \"#utility.yul\":7186:7206   */\n      tag_286\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7181:7206   */\n      swap3\n      pop\n        /* \"#utility.yul\":7241:7242   */\n      dup3\n        /* \"#utility.yul\":7238:7239   */\n      dup3\n        /* \"#utility.yul\":7234:7243   */\n      mul\n        /* \"#utility.yul\":7263:7293   */\n      tag_414\n        /* \"#utility.yul\":7281:7292   */\n      dup2\n        /* \"#utility.yul\":7263:7293   */\n      tag_286\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7252:7293   */\n      swap2\n      pop\n        /* \"#utility.yul\":7442:7443   */\n      dup3\n        /* \"#utility.yul\":7433:7440   */\n      dup3\n        /* \"#utility.yul\":7429:7444   */\n      div\n        /* \"#utility.yul\":7426:7427   */\n      dup5\n        /* \"#utility.yul\":7423:7445   */\n      eq\n        /* \"#utility.yul\":7403:7404   */\n      dup4\n        /* \"#utility.yul\":7396:7405   */\n      iszero\n        /* \"#utility.yul\":7376:7459   */\n      or\n        /* \"#utility.yul\":7353:7492   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":7472:7490   */\n      tag_416\n      tag_305\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":7353:7492   */\n    tag_415:\n        /* \"#utility.yul\":7137:7499   */\n      pop\n        /* \"#utility.yul\":7089:7499   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7505:7685   */\n    tag_307:\n        /* \"#utility.yul\":7553:7630   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7550:7551   */\n      0x00\n        /* \"#utility.yul\":7543:7631   */\n      mstore\n        /* \"#utility.yul\":7650:7654   */\n      0x12\n        /* \"#utility.yul\":7647:7648   */\n      0x04\n        /* \"#utility.yul\":7640:7655   */\n      mstore\n        /* \"#utility.yul\":7674:7678   */\n      0x24\n        /* \"#utility.yul\":7671:7672   */\n      0x00\n        /* \"#utility.yul\":7664:7679   */\n      revert\n        /* \"#utility.yul\":7691:7876   */\n    tag_247:\n        /* \"#utility.yul\":7731:7732   */\n      0x00\n        /* \"#utility.yul\":7748:7768   */\n      tag_419\n        /* \"#utility.yul\":7766:7767   */\n      dup3\n        /* \"#utility.yul\":7748:7768   */\n      tag_286\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7743:7768   */\n      swap2\n      pop\n        /* \"#utility.yul\":7782:7802   */\n      tag_420\n        /* \"#utility.yul\":7800:7801   */\n      dup4\n        /* \"#utility.yul\":7782:7802   */\n      tag_286\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7777:7802   */\n      swap3\n      pop\n        /* \"#utility.yul\":7821:7822   */\n      dup3\n        /* \"#utility.yul\":7811:7846   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":7826:7844   */\n      tag_422\n      tag_307\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7811:7846   */\n    tag_421:\n        /* \"#utility.yul\":7868:7869   */\n      dup3\n        /* \"#utility.yul\":7865:7866   */\n      dup3\n        /* \"#utility.yul\":7861:7870   */\n      div\n        /* \"#utility.yul\":7856:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7691:7876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7882:8029   */\n    tag_308:\n        /* \"#utility.yul\":7983:7994   */\n      0x00\n        /* \"#utility.yul\":8020:8023   */\n      dup2\n        /* \"#utility.yul\":8005:8023   */\n      swap1\n      pop\n        /* \"#utility.yul\":7882:8029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8035:8149   */\n    tag_309:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8553   */\n    tag_310:\n        /* \"#utility.yul\":8314:8317   */\n      0x00\n        /* \"#utility.yul\":8335:8418   */\n      tag_426\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8411:8414   */\n      dup4\n        /* \"#utility.yul\":8335:8418   */\n      tag_308\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8328:8418   */\n      swap2\n      pop\n        /* \"#utility.yul\":8427:8520   */\n      tag_427\n        /* \"#utility.yul\":8516:8519   */\n      dup3\n        /* \"#utility.yul\":8427:8520   */\n      tag_309\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8545:8546   */\n      0x00\n        /* \"#utility.yul\":8540:8543   */\n      dup3\n        /* \"#utility.yul\":8536:8547   */\n      add\n        /* \"#utility.yul\":8529:8547   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:8938   */\n    tag_264:\n        /* \"#utility.yul\":8743:8746   */\n      0x00\n        /* \"#utility.yul\":8765:8912   */\n      tag_429\n        /* \"#utility.yul\":8908:8911   */\n      dup3\n        /* \"#utility.yul\":8765:8912   */\n      tag_310\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8758:8912   */\n      swap2\n      pop\n        /* \"#utility.yul\":8929:8932   */\n      dup2\n        /* \"#utility.yul\":8922:8932   */\n      swap1\n      pop\n        /* \"#utility.yul\":8559:8938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8944:9042   */\n    tag_311:\n        /* \"#utility.yul\":8995:9001   */\n      0x00\n        /* \"#utility.yul\":9029:9034   */\n      dup2\n        /* \"#utility.yul\":9023:9035   */\n      mload\n        /* \"#utility.yul\":9013:9035   */\n      swap1\n      pop\n        /* \"#utility.yul\":8944:9042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9048:9216   */\n    tag_312:\n        /* \"#utility.yul\":9131:9142   */\n      0x00\n        /* \"#utility.yul\":9165:9171   */\n      dup3\n        /* \"#utility.yul\":9160:9163   */\n      dup3\n        /* \"#utility.yul\":9153:9172   */\n      mstore\n        /* \"#utility.yul\":9205:9209   */\n      0x20\n        /* \"#utility.yul\":9200:9203   */\n      dup3\n        /* \"#utility.yul\":9196:9210   */\n      add\n        /* \"#utility.yul\":9181:9210   */\n      swap1\n      pop\n        /* \"#utility.yul\":9048:9216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9222:9361   */\n    tag_313:\n        /* \"#utility.yul\":9311:9317   */\n      dup3\n        /* \"#utility.yul\":9306:9309   */\n      dup2\n        /* \"#utility.yul\":9301:9304   */\n      dup4\n        /* \"#utility.yul\":9295:9318   */\n      mcopy\n        /* \"#utility.yul\":9352:9353   */\n      0x00\n        /* \"#utility.yul\":9343:9349   */\n      dup4\n        /* \"#utility.yul\":9338:9341   */\n      dup4\n        /* \"#utility.yul\":9334:9350   */\n      add\n        /* \"#utility.yul\":9327:9354   */\n      mstore\n        /* \"#utility.yul\":9222:9361   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9367:9469   */\n    tag_314:\n        /* \"#utility.yul\":9408:9414   */\n      0x00\n        /* \"#utility.yul\":9459:9461   */\n      0x1f\n        /* \"#utility.yul\":9455:9462   */\n      not\n        /* \"#utility.yul\":9450:9452   */\n      0x1f\n        /* \"#utility.yul\":9443:9448   */\n      dup4\n        /* \"#utility.yul\":9439:9453   */\n      add\n        /* \"#utility.yul\":9435:9463   */\n      and\n        /* \"#utility.yul\":9425:9463   */\n      swap1\n      pop\n        /* \"#utility.yul\":9367:9469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9475:9848   */\n    tag_315:\n        /* \"#utility.yul\":9561:9564   */\n      0x00\n        /* \"#utility.yul\":9589:9627   */\n      tag_435\n        /* \"#utility.yul\":9621:9626   */\n      dup3\n        /* \"#utility.yul\":9589:9627   */\n      tag_311\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":9643:9713   */\n      tag_436\n        /* \"#utility.yul\":9706:9712   */\n      dup2\n        /* \"#utility.yul\":9701:9704   */\n      dup6\n        /* \"#utility.yul\":9643:9713   */\n      tag_312\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9636:9713   */\n      swap4\n      pop\n        /* \"#utility.yul\":9722:9787   */\n      tag_437\n        /* \"#utility.yul\":9780:9786   */\n      dup2\n        /* \"#utility.yul\":9775:9778   */\n      dup6\n        /* \"#utility.yul\":9768:9772   */\n      0x20\n        /* \"#utility.yul\":9761:9766   */\n      dup7\n        /* \"#utility.yul\":9757:9773   */\n      add\n        /* \"#utility.yul\":9722:9787   */\n      tag_313\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9812:9841   */\n      tag_438\n        /* \"#utility.yul\":9834:9840   */\n      dup2\n        /* \"#utility.yul\":9812:9841   */\n      tag_314\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9807:9810   */\n      dup5\n        /* \"#utility.yul\":9803:9842   */\n      add\n        /* \"#utility.yul\":9796:9842   */\n      swap2\n      pop\n        /* \"#utility.yul\":9565:9848   */\n      pop\n        /* \"#utility.yul\":9475:9848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9854:10383   */\n    tag_270:\n        /* \"#utility.yul\":10021:10025   */\n      0x00\n        /* \"#utility.yul\":10059:10061   */\n      0x60\n        /* \"#utility.yul\":10048:10057   */\n      dup3\n        /* \"#utility.yul\":10044:10062   */\n      add\n        /* \"#utility.yul\":10036:10062   */\n      swap1\n      pop\n        /* \"#utility.yul\":10072:10143   */\n      tag_440\n        /* \"#utility.yul\":10140:10141   */\n      0x00\n        /* \"#utility.yul\":10129:10138   */\n      dup4\n        /* \"#utility.yul\":10125:10142   */\n      add\n        /* \"#utility.yul\":10116:10122   */\n      dup7\n        /* \"#utility.yul\":10072:10143   */\n      tag_297\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10153:10225   */\n      tag_441\n        /* \"#utility.yul\":10221:10223   */\n      0x20\n        /* \"#utility.yul\":10210:10219   */\n      dup4\n        /* \"#utility.yul\":10206:10224   */\n      add\n        /* \"#utility.yul\":10197:10203   */\n      dup6\n        /* \"#utility.yul\":10153:10225   */\n      tag_287\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10272:10281   */\n      dup2\n        /* \"#utility.yul\":10266:10270   */\n      dup2\n        /* \"#utility.yul\":10262:10282   */\n      sub\n        /* \"#utility.yul\":10257:10259   */\n      0x40\n        /* \"#utility.yul\":10246:10255   */\n      dup4\n        /* \"#utility.yul\":10242:10260   */\n      add\n        /* \"#utility.yul\":10235:10283   */\n      mstore\n        /* \"#utility.yul\":10300:10376   */\n      tag_442\n        /* \"#utility.yul\":10371:10375   */\n      dup2\n        /* \"#utility.yul\":10362:10368   */\n      dup5\n        /* \"#utility.yul\":10300:10376   */\n      tag_315\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10292:10376   */\n      swap1\n      pop\n        /* \"#utility.yul\":9854:10383   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10389:10494   */\n    tag_316:\n        /* \"#utility.yul\":10425:10432   */\n      0x00\n        /* \"#utility.yul\":10465:10487   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":10458:10463   */\n      dup3\n        /* \"#utility.yul\":10454:10488   */\n      and\n        /* \"#utility.yul\":10443:10488   */\n      swap1\n      pop\n        /* \"#utility.yul\":10389:10494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10500:10620   */\n    tag_317:\n        /* \"#utility.yul\":10572:10595   */\n      tag_445\n        /* \"#utility.yul\":10589:10594   */\n      dup2\n        /* \"#utility.yul\":10572:10595   */\n      tag_316\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10565:10570   */\n      dup2\n        /* \"#utility.yul\":10562:10596   */\n      eq\n        /* \"#utility.yul\":10552:10614   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":10610:10611   */\n      0x00\n        /* \"#utility.yul\":10607:10608   */\n      0x00\n        /* \"#utility.yul\":10600:10612   */\n      revert\n        /* \"#utility.yul\":10552:10614   */\n    tag_446:\n        /* \"#utility.yul\":10500:10620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10626:10767   */\n    tag_318:\n        /* \"#utility.yul\":10682:10687   */\n      0x00\n        /* \"#utility.yul\":10713:10719   */\n      dup2\n        /* \"#utility.yul\":10707:10720   */\n      mload\n        /* \"#utility.yul\":10698:10720   */\n      swap1\n      pop\n        /* \"#utility.yul\":10729:10761   */\n      tag_448\n        /* \"#utility.yul\":10755:10760   */\n      dup2\n        /* \"#utility.yul\":10729:10761   */\n      tag_317\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10626:10767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10773:10849   */\n    tag_319:\n        /* \"#utility.yul\":10809:10816   */\n      0x00\n        /* \"#utility.yul\":10838:10843   */\n      dup2\n        /* \"#utility.yul\":10827:10843   */\n      swap1\n      pop\n        /* \"#utility.yul\":10773:10849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10855:10975   */\n    tag_320:\n        /* \"#utility.yul\":10927:10950   */\n      tag_451\n        /* \"#utility.yul\":10944:10949   */\n      dup2\n        /* \"#utility.yul\":10927:10950   */\n      tag_319\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10920:10925   */\n      dup2\n        /* \"#utility.yul\":10917:10951   */\n      eq\n        /* \"#utility.yul\":10907:10969   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":10965:10966   */\n      0x00\n        /* \"#utility.yul\":10962:10963   */\n      0x00\n        /* \"#utility.yul\":10955:10967   */\n      revert\n        /* \"#utility.yul\":10907:10969   */\n    tag_452:\n        /* \"#utility.yul\":10855:10975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10981:11122   */\n    tag_321:\n        /* \"#utility.yul\":11037:11042   */\n      0x00\n        /* \"#utility.yul\":11068:11074   */\n      dup2\n        /* \"#utility.yul\":11062:11075   */\n      mload\n        /* \"#utility.yul\":11053:11075   */\n      swap1\n      pop\n        /* \"#utility.yul\":11084:11116   */\n      tag_454\n        /* \"#utility.yul\":11110:11115   */\n      dup2\n        /* \"#utility.yul\":11084:11116   */\n      tag_320\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10981:11122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11128:11271   */\n    tag_322:\n        /* \"#utility.yul\":11185:11190   */\n      0x00\n        /* \"#utility.yul\":11216:11222   */\n      dup2\n        /* \"#utility.yul\":11210:11223   */\n      mload\n        /* \"#utility.yul\":11201:11223   */\n      swap1\n      pop\n        /* \"#utility.yul\":11232:11265   */\n      tag_456\n        /* \"#utility.yul\":11259:11264   */\n      dup2\n        /* \"#utility.yul\":11232:11265   */\n      tag_298\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11128:11271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11277:12248   */\n    tag_275:\n        /* \"#utility.yul\":11380:11386   */\n      0x00\n        /* \"#utility.yul\":11388:11394   */\n      0x00\n        /* \"#utility.yul\":11396:11402   */\n      0x00\n        /* \"#utility.yul\":11404:11410   */\n      0x00\n        /* \"#utility.yul\":11412:11418   */\n      0x00\n        /* \"#utility.yul\":11461:11464   */\n      0xa0\n        /* \"#utility.yul\":11449:11458   */\n      dup7\n        /* \"#utility.yul\":11440:11447   */\n      dup9\n        /* \"#utility.yul\":11436:11459   */\n      sub\n        /* \"#utility.yul\":11432:11465   */\n      slt\n        /* \"#utility.yul\":11429:11549   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":11468:11547   */\n      tag_459\n      tag_289\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11429:11549   */\n    tag_458:\n        /* \"#utility.yul\":11588:11589   */\n      0x00\n        /* \"#utility.yul\":11613:11676   */\n      tag_460\n        /* \"#utility.yul\":11668:11675   */\n      dup9\n        /* \"#utility.yul\":11659:11665   */\n      dup3\n        /* \"#utility.yul\":11648:11657   */\n      dup10\n        /* \"#utility.yul\":11644:11666   */\n      add\n        /* \"#utility.yul\":11613:11676   */\n      tag_318\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11603:11676   */\n      swap6\n      pop\n        /* \"#utility.yul\":11559:11686   */\n      pop\n        /* \"#utility.yul\":11725:11727   */\n      0x20\n        /* \"#utility.yul\":11751:11814   */\n      tag_461\n        /* \"#utility.yul\":11806:11813   */\n      dup9\n        /* \"#utility.yul\":11797:11803   */\n      dup3\n        /* \"#utility.yul\":11786:11795   */\n      dup10\n        /* \"#utility.yul\":11782:11804   */\n      add\n        /* \"#utility.yul\":11751:11814   */\n      tag_321\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11741:11814   */\n      swap5\n      pop\n        /* \"#utility.yul\":11696:11824   */\n      pop\n        /* \"#utility.yul\":11863:11865   */\n      0x40\n        /* \"#utility.yul\":11889:11953   */\n      tag_462\n        /* \"#utility.yul\":11945:11952   */\n      dup9\n        /* \"#utility.yul\":11936:11942   */\n      dup3\n        /* \"#utility.yul\":11925:11934   */\n      dup10\n        /* \"#utility.yul\":11921:11943   */\n      add\n        /* \"#utility.yul\":11889:11953   */\n      tag_322\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":11879:11953   */\n      swap4\n      pop\n        /* \"#utility.yul\":11834:11963   */\n      pop\n        /* \"#utility.yul\":12002:12004   */\n      0x60\n        /* \"#utility.yul\":12028:12092   */\n      tag_463\n        /* \"#utility.yul\":12084:12091   */\n      dup9\n        /* \"#utility.yul\":12075:12081   */\n      dup3\n        /* \"#utility.yul\":12064:12073   */\n      dup10\n        /* \"#utility.yul\":12060:12082   */\n      add\n        /* \"#utility.yul\":12028:12092   */\n      tag_322\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12018:12092   */\n      swap3\n      pop\n        /* \"#utility.yul\":11973:12102   */\n      pop\n        /* \"#utility.yul\":12141:12144   */\n      0x80\n        /* \"#utility.yul\":12168:12231   */\n      tag_464\n        /* \"#utility.yul\":12223:12230   */\n      dup9\n        /* \"#utility.yul\":12214:12220   */\n      dup3\n        /* \"#utility.yul\":12203:12212   */\n      dup10\n        /* \"#utility.yul\":12199:12221   */\n      add\n        /* \"#utility.yul\":12168:12231   */\n      tag_318\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12158:12231   */\n      swap2\n      pop\n        /* \"#utility.yul\":12112:12241   */\n      pop\n        /* \"#utility.yul\":11277:12248   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e90310a5100fe560d6810157cc1fac8d6dd38a1c005cccd98f3e99f8d1c944ff64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 344,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128_fromMemory": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint128t_address_fromMemory": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2108:10",
										"nodeType": "YulBlock",
										"src": "0:2108:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:73:10",
													"nodeType": "YulBlock",
													"src": "379:73:10",
													"statements": [
														{
															"nativeSrc": "389:57:10",
															"nodeType": "YulAssignment",
															"src": "389:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:34:10",
																		"nodeType": "YulLiteral",
																		"src": "411:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:46:10",
																"nodeType": "YulFunctionCall",
																"src": "400:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "334:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:118:10"
											},
											{
												"body": {
													"nativeSrc": "501:79:10",
													"nodeType": "YulBlock",
													"src": "501:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "558:16:10",
																"nodeType": "YulBlock",
																"src": "558:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "567:1:10",
																					"nodeType": "YulLiteral",
																					"src": "567:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "570:1:10",
																					"nodeType": "YulLiteral",
																					"src": "570:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "560:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:10"
																			},
																			"nativeSrc": "560:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:10"
																		},
																		"nativeSrc": "560:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "524:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "524:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "549:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "549:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "531:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "531:17:10"
																				},
																				"nativeSrc": "531:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "531:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "521:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "521:2:10"
																		},
																		"nativeSrc": "521:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "521:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "514:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "514:6:10"
																},
																"nativeSrc": "514:43:10",
																"nodeType": "YulFunctionCall",
																"src": "514:43:10"
															},
															"nativeSrc": "511:63:10",
															"nodeType": "YulIf",
															"src": "511:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "458:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "494:5:10",
														"nodeType": "YulTypedName",
														"src": "494:5:10",
														"type": ""
													}
												],
												"src": "458:122:10"
											},
											{
												"body": {
													"nativeSrc": "649:80:10",
													"nodeType": "YulBlock",
													"src": "649:80:10",
													"statements": [
														{
															"nativeSrc": "659:22:10",
															"nodeType": "YulAssignment",
															"src": "659:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "674:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "674:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "668:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "668:5:10"
																},
																"nativeSrc": "668:13:10",
																"nodeType": "YulFunctionCall",
																"src": "668:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "717:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "717:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "690:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "690:26:10"
																},
																"nativeSrc": "690:33:10",
																"nodeType": "YulFunctionCall",
																"src": "690:33:10"
															},
															"nativeSrc": "690:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "690:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint128_fromMemory",
												"nativeSrc": "586:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "627:6:10",
														"nodeType": "YulTypedName",
														"src": "627:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "635:3:10",
														"nodeType": "YulTypedName",
														"src": "635:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "643:5:10",
														"nodeType": "YulTypedName",
														"src": "643:5:10",
														"type": ""
													}
												],
												"src": "586:143:10"
											},
											{
												"body": {
													"nativeSrc": "780:81:10",
													"nodeType": "YulBlock",
													"src": "780:81:10",
													"statements": [
														{
															"nativeSrc": "790:65:10",
															"nodeType": "YulAssignment",
															"src": "790:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "805:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "805:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "812:42:10",
																		"nodeType": "YulLiteral",
																		"src": "812:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "801:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:10"
																},
																"nativeSrc": "801:54:10",
																"nodeType": "YulFunctionCall",
																"src": "801:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "790:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "790:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "735:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "762:5:10",
														"nodeType": "YulTypedName",
														"src": "762:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "772:7:10",
														"nodeType": "YulTypedName",
														"src": "772:7:10",
														"type": ""
													}
												],
												"src": "735:126:10"
											},
											{
												"body": {
													"nativeSrc": "912:51:10",
													"nodeType": "YulBlock",
													"src": "912:51:10",
													"statements": [
														{
															"nativeSrc": "922:35:10",
															"nodeType": "YulAssignment",
															"src": "922:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "951:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "951:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "933:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "933:17:10"
																},
																"nativeSrc": "933:24:10",
																"nodeType": "YulFunctionCall",
																"src": "933:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "922:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "922:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "867:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "894:5:10",
														"nodeType": "YulTypedName",
														"src": "894:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "904:7:10",
														"nodeType": "YulTypedName",
														"src": "904:7:10",
														"type": ""
													}
												],
												"src": "867:96:10"
											},
											{
												"body": {
													"nativeSrc": "1012:79:10",
													"nodeType": "YulBlock",
													"src": "1012:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1069:16:10",
																"nodeType": "YulBlock",
																"src": "1069:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1078:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1078:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1081:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1081:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1071:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1071:6:10"
																			},
																			"nativeSrc": "1071:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1071:12:10"
																		},
																		"nativeSrc": "1071:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1071:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1035:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1035:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1060:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1060:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1042:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1042:17:10"
																				},
																				"nativeSrc": "1042:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1042:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1032:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1032:2:10"
																		},
																		"nativeSrc": "1032:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1032:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1025:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:10"
																},
																"nativeSrc": "1025:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1025:43:10"
															},
															"nativeSrc": "1022:63:10",
															"nodeType": "YulIf",
															"src": "1022:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "969:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1005:5:10",
														"nodeType": "YulTypedName",
														"src": "1005:5:10",
														"type": ""
													}
												],
												"src": "969:122:10"
											},
											{
												"body": {
													"nativeSrc": "1160:80:10",
													"nodeType": "YulBlock",
													"src": "1160:80:10",
													"statements": [
														{
															"nativeSrc": "1170:22:10",
															"nodeType": "YulAssignment",
															"src": "1170:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1185:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1179:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1179:5:10"
																},
																"nativeSrc": "1179:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1179:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1170:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1228:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1228:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1201:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1201:26:10"
																},
																"nativeSrc": "1201:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1201:33:10"
															},
															"nativeSrc": "1201:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1201:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1097:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1138:6:10",
														"nodeType": "YulTypedName",
														"src": "1138:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1146:3:10",
														"nodeType": "YulTypedName",
														"src": "1146:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1154:5:10",
														"nodeType": "YulTypedName",
														"src": "1154:5:10",
														"type": ""
													}
												],
												"src": "1097:143:10"
											},
											{
												"body": {
													"nativeSrc": "1340:413:10",
													"nodeType": "YulBlock",
													"src": "1340:413:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1386:83:10",
																"nodeType": "YulBlock",
																"src": "1386:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1388:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1388:77:10"
																			},
																			"nativeSrc": "1388:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1388:79:10"
																		},
																		"nativeSrc": "1388:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1388:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1361:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1361:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1370:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1357:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:10"
																		},
																		"nativeSrc": "1357:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1382:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1382:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:10"
																},
																"nativeSrc": "1353:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1353:32:10"
															},
															"nativeSrc": "1350:119:10",
															"nodeType": "YulIf",
															"src": "1350:119:10"
														},
														{
															"nativeSrc": "1479:128:10",
															"nodeType": "YulBlock",
															"src": "1479:128:10",
															"statements": [
																{
																	"nativeSrc": "1494:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1494:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1498:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1498:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1523:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1523:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1569:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1569:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1580:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1580:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1565:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1565:3:10"
																				},
																				"nativeSrc": "1565:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1565:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1589:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1589:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128_fromMemory",
																			"nativeSrc": "1533:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1533:31:10"
																		},
																		"nativeSrc": "1533:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1533:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1523:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1617:129:10",
															"nodeType": "YulBlock",
															"src": "1617:129:10",
															"statements": [
																{
																	"nativeSrc": "1632:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1632:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1646:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1636:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1636:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1662:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1662:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1708:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1708:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1719:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1719:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1704:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:10"
																				},
																				"nativeSrc": "1704:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1704:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1728:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1728:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1672:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1672:31:10"
																		},
																		"nativeSrc": "1672:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1672:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1662:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1662:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint128t_address_fromMemory",
												"nativeSrc": "1246:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1302:9:10",
														"nodeType": "YulTypedName",
														"src": "1302:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1313:7:10",
														"nodeType": "YulTypedName",
														"src": "1313:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1325:6:10",
														"nodeType": "YulTypedName",
														"src": "1325:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1333:6:10",
														"nodeType": "YulTypedName",
														"src": "1333:6:10",
														"type": ""
													}
												],
												"src": "1246:507:10"
											},
											{
												"body": {
													"nativeSrc": "1824:53:10",
													"nodeType": "YulBlock",
													"src": "1824:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1841:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1841:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1864:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1864:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1846:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1846:17:10"
																		},
																		"nativeSrc": "1846:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1846:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1834:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:10"
																},
																"nativeSrc": "1834:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1834:37:10"
															},
															"nativeSrc": "1834:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1834:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1759:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1812:5:10",
														"nodeType": "YulTypedName",
														"src": "1812:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1819:3:10",
														"nodeType": "YulTypedName",
														"src": "1819:3:10",
														"type": ""
													}
												],
												"src": "1759:118:10"
											},
											{
												"body": {
													"nativeSrc": "1981:124:10",
													"nodeType": "YulBlock",
													"src": "1981:124:10",
													"statements": [
														{
															"nativeSrc": "1991:26:10",
															"nodeType": "YulAssignment",
															"src": "1991:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2003:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2003:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1999:3:10"
																},
																"nativeSrc": "1999:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1999:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1991:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1991:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2071:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2071:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2084:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2084:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2095:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2095:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2080:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:10"
																		},
																		"nativeSrc": "2080:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2027:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2027:43:10"
																},
																"nativeSrc": "2027:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2027:71:10"
															},
															"nativeSrc": "2027:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2027:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1883:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1953:9:10",
														"nodeType": "YulTypedName",
														"src": "1953:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1965:6:10",
														"nodeType": "YulTypedName",
														"src": "1965:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1976:4:10",
														"nodeType": "YulTypedName",
														"src": "1976:4:10",
														"type": ""
													}
												],
												"src": "1883:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint128t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052670de0b6b3a76400006fffffffffffffffffffffffffffffffff1660a0906fffffffffffffffffffffffffffffffff16815250348015610042575f5ffd5b506040516128b83803806128b8833981810160405281019061006491906102bc565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100d5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100cc9190610309565b60405180910390fd5b6100e48161015860201b60201c565b50816fffffffffffffffffffffffffffffffff166080816fffffffffffffffffffffffffffffffff16815250508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610322565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f6fffffffffffffffffffffffffffffffff82169050919050565b6102418161021d565b811461024b575f5ffd5b50565b5f8151905061025c81610238565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61028b82610262565b9050919050565b61029b81610281565b81146102a5575f5ffd5b50565b5f815190506102b681610292565b92915050565b5f5f604083850312156102d2576102d1610219565b5b5f6102df8582860161024e565b92505060206102f0858286016102a8565b9150509250929050565b61030381610281565b82525050565b5f60208201905061031c5f8301846102fa565b92915050565b60805160a0516125676103515f395f8181610cfc015261156801525f81816106580152610d2001526125675ff3fe608060405260043610610169575f3560e01c806394f649dd116100d0578063c311d04911610089578063d2706c9111610063578063d2706c9114610542578063ef6492491461057e578063f2fde38b146105a8578063f8b2cb4f146105d057610178565b8063c311d049146104b4578063c3a8962c146104dc578063c77e551b1461051857610178565b806394f649dd14610374578063962b9bcc146103b057806397feb926146103ec578063a1db978214610414578063a2abecd31461043c578063b588d2251461047857610178565b80636b149d87116101225780636b149d871461028e578063715018a6146102b85780637dc532c5146102ce5780637f86ee43146102f657806380ef10ed146103205780638da5cb5b1461034a57610178565b806312065fe01461017c57806321d60805146101a6578063297beb3c146101e25780633a2b643a1461021e578063439370b11461025a57806350d6c1e81461026457610178565b366101785761017661060c565b005b5f5ffd5b348015610187575f5ffd5b506101906108d5565b60405161019d9190611f07565b60405180910390f35b3480156101b1575f5ffd5b506101cc60048036038101906101c79190611f7e565b610954565b6040516101d99190611f07565b60405180910390f35b3480156101ed575f5ffd5b5061020860048036038101906102039190611fa9565b6109dd565b6040516102159190611f07565b60405180910390f35b348015610229575f5ffd5b50610244600480360381019061023f9190611f7e565b610a7c565b6040516102519190611f07565b60405180910390f35b61026261060c565b005b34801561026f575f5ffd5b50610278610b1a565b6040516102859190611f07565b60405180910390f35b348015610299575f5ffd5b506102a2610bae565b6040516102af9190611f07565b60405180910390f35b3480156102c3575f5ffd5b506102cc610c42565b005b3480156102d9575f5ffd5b506102f460048036038101906102ef9190611f7e565b610c55565b005b348015610301575f5ffd5b5061030a610cfa565b6040516103179190612011565b60405180910390f35b34801561032b575f5ffd5b50610334610d1e565b6040516103419190612011565b60405180910390f35b348015610355575f5ffd5b5061035e610d42565b60405161036b9190612039565b60405180910390f35b34801561037f575f5ffd5b5061039a60048036038101906103959190611f7e565b610d69565b6040516103a79190611f07565b60405180910390f35b3480156103bb575f5ffd5b506103d660048036038101906103d19190611fa9565b610e07565b6040516103e39190611f07565b60405180910390f35b3480156103f7575f5ffd5b50610412600480360381019061040d919061207c565b610ea6565b005b34801561041f575f5ffd5b5061043a6004803603810190610435919061207c565b6110a0565b005b348015610447575f5ffd5b50610462600480360381019061045d9190611f7e565b611342565b60405161046f9190611f07565b60405180910390f35b348015610483575f5ffd5b5061049e60048036038101906104999190611f7e565b6113d8565b6040516104ab9190611f07565b60405180910390f35b3480156104bf575f5ffd5b506104da60048036038101906104d591906120ba565b611459565b005b3480156104e7575f5ffd5b5061050260048036038101906104fd9190611fa9565b61176c565b60405161050f9190611f07565b60405180910390f35b348015610523575f5ffd5b5061052c6117f6565b6040516105399190612140565b60405180910390f35b34801561054d575f5ffd5b5061056860048036038101906105639190611f7e565b61181b565b6040516105759190611f07565b60405180910390f35b348015610589575f5ffd5b506105926118b1565b60405161059f9190611f07565b60405180910390f35b3480156105b3575f5ffd5b506105ce60048036038101906105c99190611f7e565b611938565b005b3480156105db575f5ffd5b506105f660048036038101906105f19190611f7e565b6119bc565b6040516106039190611f07565b60405180910390f35b5f341133349091610654576040517facb26d8e00000000000000000000000000000000000000000000000000000000815260040161064b929190612159565b60405180910390fd5b50507f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff1660025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20543461070d91906121ad565b111533349091610754576040517facb26d8e00000000000000000000000000000000000000000000000000000000815260040161074b929190612159565b60405180910390fd5b50503460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107dd91906121ad565b9250508190555060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81819054906101000a900463ffffffff168092919061087b906121ef565b91906101000a81548163ffffffff021916908363ffffffff160217905550507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c433346040516108cb929190612159565b60405180910390a1565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f6109d660025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611a45565b9050919050565b5f6109e6611a74565b60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff16905092915050565b5f610a85611a74565b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff169050919050565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff16905090565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff16905090565b610c4a611a74565b610c535f611afb565b565b610c5d611a74565b7f3be680563c528780d5a9cd763a27b4a48ab5f9dc10e4083a2fa55b6fc5ff33e660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610caf92919061221a565b60405180910390a18060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f610d72611a74565b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff169050919050565b5f610e10611a74565b60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff16905092915050565b5f811133829091610eee576040517facb26d8e000000000000000000000000000000000000000000000000000000008152600401610ee5929190612159565b60405180910390fd5b50508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f7791906121ad565b9250508190555060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81819054906101000a900463ffffffff1680929190611015906121ef565b91906101000a81548163ffffffff021916908363ffffffff160217905550507fe33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e133838360405161106793929190612241565b60405180910390a161109c3330838573ffffffffffffffffffffffffffffffffffffffff16611bbc909392919063ffffffff16565b5050565b5f81113383839091926110eb576040517fb4e4601d0000000000000000000000000000000000000000000000000000000081526004016110e293929190612241565b60405180910390fd5b50505060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548111153383839091926111b2576040517fb4e4601d0000000000000000000000000000000000000000000000000000000081526004016111a993929190612241565b60405180910390fd5b5050508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461123c9190612276565b9250508190555060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81819054906101000a900463ffffffff16809291906112da906121ef565b91906101000a81548163ffffffff021916908363ffffffff160217905550506113038282611c3e565b7fd0164496e26f9675acaea59fb065313e45d71d1d3e09d3681765773cd4aa191833838360405161133693929190612241565b60405180910390a15050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff169050919050565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8111338290916114a1576040517ff6074107000000000000000000000000000000000000000000000000000000008152600401611498929190612159565b60405180910390fd5b505060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481111533829091611564576040517ff607410700000000000000000000000000000000000000000000000000000000815260040161155b929190612159565b60405180910390fd5b50507f00000000000000000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff16811115338290916115e1576040517ff60741070000000000000000000000000000000000000000000000000000000081526004016115d8929190612159565b60405180910390fd5b50508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461166a9190612276565b9250508190555060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f81819054906101000a900463ffffffff1680929190611708906121ef565b91906101000a81548163ffffffff021916908363ffffffff1602179055505061173081611c6f565b7f69c169e5c85af54e1ca7e16608ccc812437821387924fb3353a7d053264ddaa03382604051611761929190612159565b60405180910390a150565b5f611775611a74565b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900463ffffffff1663ffffffff169050919050565b5f61193360025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611a45565b905090565b611940611a74565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119a79190612039565b60405180910390fd5b6119b981611afb565b50565b5f6119c5611a74565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f68056bc75e2d63100000611a58611d2a565b83611a6391906122a9565b611a6d9190612317565b9050919050565b611a7c611e4d565b73ffffffffffffffffffffffffffffffffffffffff16611a9a610d42565b73ffffffffffffffffffffffffffffffffffffffff1614611af957611abd611e4d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611af09190612039565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c38848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611bf193929190612241565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611e54565b50505050565b611c6b3033838573ffffffffffffffffffffffffffffffffffffffff16611bbc909392919063ffffffff16565b5050565b5f5f3373ffffffffffffffffffffffffffffffffffffffff1683604051611c9590612374565b5f6040518083038185875af1925050503d805f8114611ccf576040519150601f19603f3d011682016040523d82523d5f602084013e611cd4565b606091505b509150915081338483909192611d22576040517f3fd18b85000000000000000000000000000000000000000000000000000000008152600401611d19939291906123f8565b60405180910390fd5b505050505050565b5f5f5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611d97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dbb91906124ba565b509350509250505f8203611dfb576040517f144c1d9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1061ffff168142611e0e9190612276565b11611e45576040517f19abf40e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b819250505090565b5f33905090565b5f5f60205f8451602086015f885af180611e73576040513d5f823e3d81fd5b3d92505f519150505f8214611e8c576001811415611ea7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611ee957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611ee09190612039565b60405180910390fd5b50505050565b5f819050919050565b611f0181611eef565b82525050565b5f602082019050611f1a5f830184611ef8565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f4d82611f24565b9050919050565b611f5d81611f43565b8114611f67575f5ffd5b50565b5f81359050611f7881611f54565b92915050565b5f60208284031215611f9357611f92611f20565b5b5f611fa084828501611f6a565b91505092915050565b5f5f60408385031215611fbf57611fbe611f20565b5b5f611fcc85828601611f6a565b9250506020611fdd85828601611f6a565b9150509250929050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61200b81611fe7565b82525050565b5f6020820190506120245f830184612002565b92915050565b61203381611f43565b82525050565b5f60208201905061204c5f83018461202a565b92915050565b61205b81611eef565b8114612065575f5ffd5b50565b5f8135905061207681612052565b92915050565b5f5f6040838503121561209257612091611f20565b5b5f61209f85828601611f6a565b92505060206120b085828601612068565b9150509250929050565b5f602082840312156120cf576120ce611f20565b5b5f6120dc84828501612068565b91505092915050565b5f819050919050565b5f6121086121036120fe84611f24565b6120e5565b611f24565b9050919050565b5f612119826120ee565b9050919050565b5f61212a8261210f565b9050919050565b61213a81612120565b82525050565b5f6020820190506121535f830184612131565b92915050565b5f60408201905061216c5f83018561202a565b6121796020830184611ef8565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121b782611eef565b91506121c283611eef565b92508282019050808211156121da576121d9612180565b5b92915050565b5f63ffffffff82169050919050565b5f6121f9826121e0565b915063ffffffff820361220f5761220e612180565b5b600182019050919050565b5f60408201905061222d5f830185612131565b61223a6020830184612131565b9392505050565b5f6060820190506122545f83018661202a565b612261602083018561202a565b61226e6040830184611ef8565b949350505050565b5f61228082611eef565b915061228b83611eef565b92508282039050818111156122a3576122a2612180565b5b92915050565b5f6122b382611eef565b91506122be83611eef565b92508282026122cc81611eef565b915082820484148315176122e3576122e2612180565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61232182611eef565b915061232c83611eef565b92508261233c5761233b6122ea565b5b828204905092915050565b5f81905092915050565b50565b5f61235f5f83612347565b915061236a82612351565b5f82019050919050565b5f61237e82612354565b9150819050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6123ca82612388565b6123d48185612392565b93506123e48185602086016123a2565b6123ed816123b0565b840191505092915050565b5f60608201905061240b5f83018661202a565b6124186020830185611ef8565b818103604083015261242a81846123c0565b9050949350505050565b5f69ffffffffffffffffffff82169050919050565b61245281612434565b811461245c575f5ffd5b50565b5f8151905061246d81612449565b92915050565b5f819050919050565b61248581612473565b811461248f575f5ffd5b50565b5f815190506124a08161247c565b92915050565b5f815190506124b481612052565b92915050565b5f5f5f5f5f60a086880312156124d3576124d2611f20565b5b5f6124e08882890161245f565b95505060206124f188828901612492565b9450506040612502888289016124a6565b9350506060612513888289016124a6565b92505060806125248882890161245f565b915050929550929590935056fea2646970667358221220e90310a5100fe560d6810157cc1fac8d6dd38a1c005cccd98f3e99f8d1c944ff64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28B8 CODESIZE SUB DUP1 PUSH2 0x28B8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x64 SWAP2 SWAP1 PUSH2 0x2BC JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4 DUP2 PUSH2 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x322 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x241 DUP2 PUSH2 0x21D JUMP JUMPDEST DUP2 EQ PUSH2 0x24B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25C DUP2 PUSH2 0x238 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28B DUP3 PUSH2 0x262 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x281 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B6 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x219 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DF DUP6 DUP3 DUP7 ADD PUSH2 0x24E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x303 DUP2 PUSH2 0x281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31C PUSH0 DUP4 ADD DUP5 PUSH2 0x2FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2567 PUSH2 0x351 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xCFC ADD MSTORE PUSH2 0x1568 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x658 ADD MSTORE PUSH2 0xD20 ADD MSTORE PUSH2 0x2567 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x169 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94F649DD GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xC311D049 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD2706C91 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD2706C91 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xEF649249 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5D0 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0xC311D049 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xC3A8962C EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xC77E551B EQ PUSH2 0x518 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x94F649DD EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x962B9BCC EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x97FEB926 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA1DB9782 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xA2ABECD3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xB588D225 EQ PUSH2 0x478 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x6B149D87 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x6B149D87 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x7DC532C5 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7F86EE43 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x80EF10ED EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x21D60805 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x297BEB3C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x3A2B643A EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x50D6C1E8 EQ PUSH2 0x264 JUMPI PUSH2 0x178 JUMP JUMPDEST CALLDATASIZE PUSH2 0x178 JUMPI PUSH2 0x176 PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0xC42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x592 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE GT CALLER CALLVALUE SWAP1 SWAP2 PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH32 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLVALUE PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST GT ISZERO CALLER CALLVALUE SWAP1 SWAP2 PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x87B SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9D6 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4A PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0xC53 PUSH0 PUSH2 0x1AFB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5D PUSH2 0x1A74 JUMP JUMPDEST PUSH32 0x3BE680563C528780D5A9CD763A27B4A48AB5F9DC10E4083A2FA55B6FC5FF33E6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xCAF SWAP3 SWAP2 SWAP1 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xD72 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP3 SWAP1 SWAP2 PUSH2 0xEEE JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE5 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1015 SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x109C CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP4 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x10EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4E4601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO CALLER DUP4 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4E4601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1303 DUP3 DUP3 PUSH2 0x1C3E JUMP JUMPDEST PUSH32 0xD0164496E26F9675ACAEA59FB065313E45D71D1D3E09D3681765773CD4AA1918 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP3 SWAP1 SWAP2 PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1498 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO CALLER DUP3 SWAP1 SWAP2 PUSH2 0x1564 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH32 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO CALLER DUP3 SWAP1 SWAP2 PUSH2 0x15E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D8 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1730 DUP2 PUSH2 0x1C6F JUMP JUMPDEST PUSH32 0x69C169E5C85AF54E1CA7E16608CCC812437821387924FB3353A7D053264DDAA0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1761 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1775 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1933 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1940 PUSH2 0x1A74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A7 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x1AFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x19C5 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0x1A58 PUSH2 0x1D2A JUMP JUMPDEST DUP4 PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7C PUSH2 0x1E4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9A PUSH2 0xD42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AF9 JUMPI PUSH2 0x1ABD PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C38 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BF1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E54 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C6B ADDRESS CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C95 SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1CCF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 CALLER DUP5 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x1D22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3FD18B8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x1DFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x144C1D9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH2 0xFFFF AND DUP2 TIMESTAMP PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST GT PUSH2 0x1E45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19ABF40E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1E8C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1EA7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EE9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F01 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1A PUSH0 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4D DUP3 PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5D DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F67 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F78 DUP2 PUSH2 0x1F54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA0 DUP5 DUP3 DUP6 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBF JUMPI PUSH2 0x1FBE PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDD DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200B DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2024 PUSH0 DUP4 ADD DUP5 PUSH2 0x2002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2033 DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204C PUSH0 DUP4 ADD DUP5 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP2 EQ PUSH2 0x2065 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2076 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x209F DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DC DUP5 DUP3 DUP6 ADD PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2108 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2119 DUP3 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A DUP3 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213A DUP2 PUSH2 0x2120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2153 PUSH0 DUP4 ADD DUP5 PUSH2 0x2131 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216C PUSH0 DUP4 ADD DUP6 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2179 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21B7 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x21C2 DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21DA JUMPI PUSH2 0x21D9 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP3 PUSH2 0x21E0 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x220F JUMPI PUSH2 0x220E PUSH2 0x2180 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x222D PUSH0 DUP4 ADD DUP6 PUSH2 0x2131 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2131 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2254 PUSH0 DUP4 ADD DUP7 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2261 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x226E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x22A2 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22B3 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x22BE DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x22CC DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2321 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x232C DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x22EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x235F PUSH0 DUP4 PUSH2 0x2347 JUMP JUMPDEST SWAP2 POP PUSH2 0x236A DUP3 PUSH2 0x2351 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237E DUP3 PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23CA DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH2 0x23D4 DUP2 DUP6 PUSH2 0x2392 JUMP JUMPDEST SWAP4 POP PUSH2 0x23E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A2 JUMP JUMPDEST PUSH2 0x23ED DUP2 PUSH2 0x23B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x240B PUSH0 DUP4 ADD DUP7 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2418 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EF8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x242A DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP2 EQ PUSH2 0x245C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x246D DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2485 DUP2 PUSH2 0x2473 JUMP JUMPDEST DUP2 EQ PUSH2 0x248F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A0 DUP2 PUSH2 0x247C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24D3 JUMPI PUSH2 0x24D2 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24E0 DUP9 DUP3 DUP10 ADD PUSH2 0x245F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24F1 DUP9 DUP3 DUP10 ADD PUSH2 0x2492 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2502 DUP9 DUP3 DUP10 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2513 DUP9 DUP3 DUP10 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2524 DUP9 DUP3 DUP10 ADD PUSH2 0x245F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SUB LT 0xA5 LT 0xF JUMPF 0x60D6 DUP2 ADD JUMPI 0xCC 0x1F 0xAC DUP14 PUSH14 0xD38A1C005CCCD98F3E99F8D1C944 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "919:14670:9:-:0;;;2427:6;2384:49;;;;;;;;;4607:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4661:10;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;4696:9:9::1;4684:21;;;;;;;;::::0;::::1;4748:5;4716:7;;:38;;;;;;;;;;;;;;;;;;4607:155:::0;;919:14670;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:118;371:7;411:34;404:5;400:46;389:57;;334:118;;;:::o;458:122::-;531:24;549:5;531:24;:::i;:::-;524:5;521:35;511:63;;570:1;567;560:12;511:63;458:122;:::o;586:143::-;643:5;674:6;668:13;659:22;;690:33;717:5;690:33;:::i;:::-;586:143;;;;:::o;735:126::-;772:7;812:42;805:5;801:54;790:65;;735:126;;;:::o;867:96::-;904:7;933:24;951:5;933:24;:::i;:::-;922:35;;867:96;;;:::o;969:122::-;1042:24;1060:5;1042:24;:::i;:::-;1035:5;1032:35;1022:63;;1081:1;1078;1071:12;1022:63;969:122;:::o;1097:143::-;1154:5;1185:6;1179:13;1170:22;;1201:33;1228:5;1201:33;:::i;:::-;1097:143;;;;:::o;1246:507::-;1325:6;1333;1382:2;1370:9;1361:7;1357:23;1353:32;1350:119;;;1388:79;;:::i;:::-;1350:119;1508:1;1533:64;1589:7;1580:6;1569:9;1565:22;1533:64;:::i;:::-;1523:74;;1479:128;1646:2;1672:64;1728:7;1719:6;1708:9;1704:22;1672:64;:::i;:::-;1662:74;;1617:129;1246:507;;;;;:::o;1759:118::-;1846:24;1864:5;1846:24;:::i;:::-;1841:3;1834:37;1759:118;;:::o;1883:222::-;1976:4;2014:2;2003:9;1999:18;1991:26;;2027:71;2095:1;2084:9;2080:17;2071:6;2027:71;:::i;:::-;1883:222;;;;:::o;919:14670:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1048": {
									"entryPoint": null,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_783": {
									"entryPoint": 7764,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 6772,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_837": {
									"entryPoint": 7757,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_192": {
									"entryPoint": 6907,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@chainlinkFeed_1691": {
									"entryPoint": 7466,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertEthInUSD_1649": {
									"entryPoint": 6725,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositERC20_1177": {
									"entryPoint": 3750,
									"id": 1177,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositEth_1120": {
									"entryPoint": 1548,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalanceInUSD_1217": {
									"entryPoint": 6321,
									"id": 1217,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceInUSD_1353": {
									"entryPoint": 2388,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalance_1196": {
									"entryPoint": 2261,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1331": {
									"entryPoint": 6588,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDeposits_1236": {
									"entryPoint": 2990,
									"id": 1236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDeposits_1375": {
									"entryPoint": 3433,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getERC20Balance_1273": {
									"entryPoint": 5080,
									"id": 1273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getERC20Balance_1418": {
									"entryPoint": 5996,
									"id": 1418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getERC20Deposits_1291": {
									"entryPoint": 4930,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getERC20Deposits_1439": {
									"entryPoint": 2525,
									"id": 1439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getERC20Withdrawals_1309": {
									"entryPoint": 6171,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getERC20Withdrawals_1460": {
									"entryPoint": 3591,
									"id": 1460,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getWithdrawals_1255": {
									"entryPoint": 2842,
									"id": 1255,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWithdrawals_1397": {
									"entryPoint": 2684,
									"id": 1397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_113": {
									"entryPoint": 3394,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_144": {
									"entryPoint": 3138,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_bankCap_924": {
									"entryPoint": 3358,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_feeds_900": {
									"entryPoint": 6134,
									"id": 900,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_withdrawLimit_930": {
									"entryPoint": 3322,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_433": {
									"entryPoint": 7100,
									"id": 433,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setFeeds_1482": {
									"entryPoint": 3157,
									"id": 1482,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferERC20_1742": {
									"entryPoint": 7230,
									"id": 1742,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferEth_1720": {
									"entryPoint": 7279,
									"id": 1720,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 6456,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawERC20_1630": {
									"entryPoint": 4256,
									"id": 1630,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawEth_1563": {
									"entryPoint": 5209,
									"id": 1563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 9311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45_t_contract$_AggregatorV3Interface_$45__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 8672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 9268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9122,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint32": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 9340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 9289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12251:10",
										"nodeType": "YulBlock",
										"src": "0:12251:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "482:35:10",
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nativeSrc": "492:19:10",
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nativeSrc": "502:9:10",
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:10",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nativeSrc": "612:28:10",
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:10",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nativeSrc": "622:12:10",
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nativeSrc": "622:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nativeSrc": "735:28:10",
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:10",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nativeSrc": "745:12:10",
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nativeSrc": "745:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nativeSrc": "814:81:10",
													"nodeType": "YulBlock",
													"src": "814:81:10",
													"statements": [
														{
															"nativeSrc": "824:65:10",
															"nodeType": "YulAssignment",
															"src": "824:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:10",
																		"nodeType": "YulLiteral",
																		"src": "846:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nativeSrc": "835:54:10",
																"nodeType": "YulFunctionCall",
																"src": "835:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:10",
														"nodeType": "YulTypedName",
														"src": "796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:10",
														"nodeType": "YulTypedName",
														"src": "806:7:10",
														"type": ""
													}
												],
												"src": "769:126:10"
											},
											{
												"body": {
													"nativeSrc": "946:51:10",
													"nodeType": "YulBlock",
													"src": "946:51:10",
													"statements": [
														{
															"nativeSrc": "956:35:10",
															"nodeType": "YulAssignment",
															"src": "956:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:10"
																},
																"nativeSrc": "967:24:10",
																"nodeType": "YulFunctionCall",
																"src": "967:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:10",
														"nodeType": "YulTypedName",
														"src": "928:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:10",
														"nodeType": "YulTypedName",
														"src": "938:7:10",
														"type": ""
													}
												],
												"src": "901:96:10"
											},
											{
												"body": {
													"nativeSrc": "1046:79:10",
													"nodeType": "YulBlock",
													"src": "1046:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:10",
																"nodeType": "YulBlock",
																"src": "1103:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:10"
																			},
																			"nativeSrc": "1105:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:10"
																		},
																		"nativeSrc": "1105:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:10"
																				},
																				"nativeSrc": "1076:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:10"
																		},
																		"nativeSrc": "1066:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:10"
																},
																"nativeSrc": "1059:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:10"
															},
															"nativeSrc": "1056:63:10",
															"nodeType": "YulIf",
															"src": "1056:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:10",
														"nodeType": "YulTypedName",
														"src": "1039:5:10",
														"type": ""
													}
												],
												"src": "1003:122:10"
											},
											{
												"body": {
													"nativeSrc": "1183:87:10",
													"nodeType": "YulBlock",
													"src": "1183:87:10",
													"statements": [
														{
															"nativeSrc": "1193:29:10",
															"nodeType": "YulAssignment",
															"src": "1193:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:10"
																},
																"nativeSrc": "1202:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:10"
																},
																"nativeSrc": "1231:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:10"
															},
															"nativeSrc": "1231:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:10",
														"nodeType": "YulTypedName",
														"src": "1161:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:10",
														"nodeType": "YulTypedName",
														"src": "1169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:10",
														"nodeType": "YulTypedName",
														"src": "1177:5:10",
														"type": ""
													}
												],
												"src": "1131:139:10"
											},
											{
												"body": {
													"nativeSrc": "1342:263:10",
													"nodeType": "YulBlock",
													"src": "1342:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:10",
																"nodeType": "YulBlock",
																"src": "1388:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:10"
																			},
																			"nativeSrc": "1390:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:10"
																		},
																		"nativeSrc": "1390:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:10"
																		},
																		"nativeSrc": "1359:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:10"
																},
																"nativeSrc": "1355:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:10"
															},
															"nativeSrc": "1352:119:10",
															"nodeType": "YulIf",
															"src": "1352:119:10"
														},
														{
															"nativeSrc": "1481:117:10",
															"nodeType": "YulBlock",
															"src": "1481:117:10",
															"statements": [
																{
																	"nativeSrc": "1496:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:10"
																				},
																				"nativeSrc": "1556:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:10"
																		},
																		"nativeSrc": "1535:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:10",
														"nodeType": "YulTypedName",
														"src": "1312:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:10",
														"nodeType": "YulTypedName",
														"src": "1323:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:10",
														"nodeType": "YulTypedName",
														"src": "1335:6:10",
														"type": ""
													}
												],
												"src": "1276:329:10"
											},
											{
												"body": {
													"nativeSrc": "1694:391:10",
													"nodeType": "YulBlock",
													"src": "1694:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:10",
																"nodeType": "YulBlock",
																"src": "1740:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:10"
																			},
																			"nativeSrc": "1742:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:10"
																		},
																		"nativeSrc": "1742:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:10"
																		},
																		"nativeSrc": "1711:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:10"
																},
																"nativeSrc": "1707:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:10"
															},
															"nativeSrc": "1704:119:10",
															"nodeType": "YulIf",
															"src": "1704:119:10"
														},
														{
															"nativeSrc": "1833:117:10",
															"nodeType": "YulBlock",
															"src": "1833:117:10",
															"statements": [
																{
																	"nativeSrc": "1848:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:10"
																				},
																				"nativeSrc": "1908:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1887:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:10"
																		},
																		"nativeSrc": "1887:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1960:118:10",
															"nodeType": "YulBlock",
															"src": "1960:118:10",
															"statements": [
																{
																	"nativeSrc": "1975:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1975:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1989:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1979:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1979:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2005:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2005:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2040:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2051:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2036:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:10"
																				},
																				"nativeSrc": "2036:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2060:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2015:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2015:20:10"
																		},
																		"nativeSrc": "2015:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2005:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2005:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1611:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:10",
														"nodeType": "YulTypedName",
														"src": "1656:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:10",
														"nodeType": "YulTypedName",
														"src": "1667:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:10",
														"nodeType": "YulTypedName",
														"src": "1679:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1687:6:10",
														"nodeType": "YulTypedName",
														"src": "1687:6:10",
														"type": ""
													}
												],
												"src": "1611:474:10"
											},
											{
												"body": {
													"nativeSrc": "2136:73:10",
													"nodeType": "YulBlock",
													"src": "2136:73:10",
													"statements": [
														{
															"nativeSrc": "2146:57:10",
															"nodeType": "YulAssignment",
															"src": "2146:57:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2161:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2161:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2168:34:10",
																		"nodeType": "YulLiteral",
																		"src": "2168:34:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2157:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2157:3:10"
																},
																"nativeSrc": "2157:46:10",
																"nodeType": "YulFunctionCall",
																"src": "2157:46:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2146:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2146:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "2091:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2118:5:10",
														"nodeType": "YulTypedName",
														"src": "2118:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2128:7:10",
														"nodeType": "YulTypedName",
														"src": "2128:7:10",
														"type": ""
													}
												],
												"src": "2091:118:10"
											},
											{
												"body": {
													"nativeSrc": "2280:53:10",
													"nodeType": "YulBlock",
													"src": "2280:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2297:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2297:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2320:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2320:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "2302:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2302:17:10"
																		},
																		"nativeSrc": "2302:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2290:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:10"
																},
																"nativeSrc": "2290:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2290:37:10"
															},
															"nativeSrc": "2290:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2290:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "2215:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2268:5:10",
														"nodeType": "YulTypedName",
														"src": "2268:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2275:3:10",
														"nodeType": "YulTypedName",
														"src": "2275:3:10",
														"type": ""
													}
												],
												"src": "2215:118:10"
											},
											{
												"body": {
													"nativeSrc": "2437:124:10",
													"nodeType": "YulBlock",
													"src": "2437:124:10",
													"statements": [
														{
															"nativeSrc": "2447:26:10",
															"nodeType": "YulAssignment",
															"src": "2447:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2459:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2459:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2470:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2470:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2455:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:10"
																},
																"nativeSrc": "2455:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2455:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2447:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2447:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2527:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2527:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2551:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:10"
																		},
																		"nativeSrc": "2536:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "2483:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2483:43:10"
																},
																"nativeSrc": "2483:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2483:71:10"
															},
															"nativeSrc": "2483:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2483:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "2339:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:10",
														"nodeType": "YulTypedName",
														"src": "2409:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2421:6:10",
														"nodeType": "YulTypedName",
														"src": "2421:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2432:4:10",
														"nodeType": "YulTypedName",
														"src": "2432:4:10",
														"type": ""
													}
												],
												"src": "2339:222:10"
											},
											{
												"body": {
													"nativeSrc": "2632:53:10",
													"nodeType": "YulBlock",
													"src": "2632:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2649:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2649:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2672:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2672:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2654:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2654:17:10"
																		},
																		"nativeSrc": "2654:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2654:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2642:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:10"
																},
																"nativeSrc": "2642:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2642:37:10"
															},
															"nativeSrc": "2642:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2642:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2567:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2620:5:10",
														"nodeType": "YulTypedName",
														"src": "2620:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2627:3:10",
														"nodeType": "YulTypedName",
														"src": "2627:3:10",
														"type": ""
													}
												],
												"src": "2567:118:10"
											},
											{
												"body": {
													"nativeSrc": "2789:124:10",
													"nodeType": "YulBlock",
													"src": "2789:124:10",
													"statements": [
														{
															"nativeSrc": "2799:26:10",
															"nodeType": "YulAssignment",
															"src": "2799:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2811:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2811:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2822:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2822:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2807:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2807:3:10"
																},
																"nativeSrc": "2807:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2807:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2799:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2799:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2879:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2892:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2903:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2888:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:10"
																		},
																		"nativeSrc": "2888:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2835:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2835:43:10"
																},
																"nativeSrc": "2835:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2835:71:10"
															},
															"nativeSrc": "2835:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2835:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2691:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2761:9:10",
														"nodeType": "YulTypedName",
														"src": "2761:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2773:6:10",
														"nodeType": "YulTypedName",
														"src": "2773:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2784:4:10",
														"nodeType": "YulTypedName",
														"src": "2784:4:10",
														"type": ""
													}
												],
												"src": "2691:222:10"
											},
											{
												"body": {
													"nativeSrc": "2962:79:10",
													"nodeType": "YulBlock",
													"src": "2962:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3019:16:10",
																"nodeType": "YulBlock",
																"src": "3019:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3028:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3028:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3031:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3031:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3021:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3021:6:10"
																			},
																			"nativeSrc": "3021:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3021:12:10"
																		},
																		"nativeSrc": "3021:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3021:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2985:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2985:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3010:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3010:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2992:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2992:17:10"
																				},
																				"nativeSrc": "2992:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2992:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2982:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:2:10"
																		},
																		"nativeSrc": "2982:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:43:10"
															},
															"nativeSrc": "2972:63:10",
															"nodeType": "YulIf",
															"src": "2972:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2919:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2955:5:10",
														"nodeType": "YulTypedName",
														"src": "2955:5:10",
														"type": ""
													}
												],
												"src": "2919:122:10"
											},
											{
												"body": {
													"nativeSrc": "3099:87:10",
													"nodeType": "YulBlock",
													"src": "3099:87:10",
													"statements": [
														{
															"nativeSrc": "3109:29:10",
															"nodeType": "YulAssignment",
															"src": "3109:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3131:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3131:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3118:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3118:12:10"
																},
																"nativeSrc": "3118:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3118:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3109:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3109:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3174:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3174:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3147:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3147:26:10"
																},
																"nativeSrc": "3147:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3147:33:10"
															},
															"nativeSrc": "3147:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3147:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3047:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3077:6:10",
														"nodeType": "YulTypedName",
														"src": "3077:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3085:3:10",
														"nodeType": "YulTypedName",
														"src": "3085:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3093:5:10",
														"nodeType": "YulTypedName",
														"src": "3093:5:10",
														"type": ""
													}
												],
												"src": "3047:139:10"
											},
											{
												"body": {
													"nativeSrc": "3275:391:10",
													"nodeType": "YulBlock",
													"src": "3275:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3321:83:10",
																"nodeType": "YulBlock",
																"src": "3321:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3323:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3323:77:10"
																			},
																			"nativeSrc": "3323:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3323:79:10"
																		},
																		"nativeSrc": "3323:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3323:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3296:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3296:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3305:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3305:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3292:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:10"
																		},
																		"nativeSrc": "3292:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3317:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3317:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3288:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3288:3:10"
																},
																"nativeSrc": "3288:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3288:32:10"
															},
															"nativeSrc": "3285:119:10",
															"nodeType": "YulIf",
															"src": "3285:119:10"
														},
														{
															"nativeSrc": "3414:117:10",
															"nodeType": "YulBlock",
															"src": "3414:117:10",
															"statements": [
																{
																	"nativeSrc": "3429:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3429:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3443:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3433:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3433:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3458:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3458:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3493:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3493:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3504:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3504:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3489:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3489:3:10"
																				},
																				"nativeSrc": "3489:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3489:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3513:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3513:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3468:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3468:20:10"
																		},
																		"nativeSrc": "3468:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3458:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3458:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3541:118:10",
															"nodeType": "YulBlock",
															"src": "3541:118:10",
															"statements": [
																{
																	"nativeSrc": "3556:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3556:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3570:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3570:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3560:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3560:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3586:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3586:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3621:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3621:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3632:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3632:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3617:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3617:3:10"
																				},
																				"nativeSrc": "3617:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3617:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3641:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3641:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3596:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3596:20:10"
																		},
																		"nativeSrc": "3596:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3586:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3586:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3192:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3237:9:10",
														"nodeType": "YulTypedName",
														"src": "3237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3248:7:10",
														"nodeType": "YulTypedName",
														"src": "3248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3260:6:10",
														"nodeType": "YulTypedName",
														"src": "3260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3268:6:10",
														"nodeType": "YulTypedName",
														"src": "3268:6:10",
														"type": ""
													}
												],
												"src": "3192:474:10"
											},
											{
												"body": {
													"nativeSrc": "3738:263:10",
													"nodeType": "YulBlock",
													"src": "3738:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3784:83:10",
																"nodeType": "YulBlock",
																"src": "3784:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3786:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3786:77:10"
																			},
																			"nativeSrc": "3786:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3786:79:10"
																		},
																		"nativeSrc": "3786:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3786:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3759:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3759:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3768:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3768:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3755:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:10"
																		},
																		"nativeSrc": "3755:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3755:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3780:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3780:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3751:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:10"
																},
																"nativeSrc": "3751:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3751:32:10"
															},
															"nativeSrc": "3748:119:10",
															"nodeType": "YulIf",
															"src": "3748:119:10"
														},
														{
															"nativeSrc": "3877:117:10",
															"nodeType": "YulBlock",
															"src": "3877:117:10",
															"statements": [
																{
																	"nativeSrc": "3892:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3892:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3906:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3906:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3896:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3896:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3921:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3921:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3956:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3956:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3967:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3967:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3952:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3952:3:10"
																				},
																				"nativeSrc": "3952:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3952:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3976:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3976:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3931:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3931:20:10"
																		},
																		"nativeSrc": "3931:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3931:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3921:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3921:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3672:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3708:9:10",
														"nodeType": "YulTypedName",
														"src": "3708:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3719:7:10",
														"nodeType": "YulTypedName",
														"src": "3719:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3731:6:10",
														"nodeType": "YulTypedName",
														"src": "3731:6:10",
														"type": ""
													}
												],
												"src": "3672:329:10"
											},
											{
												"body": {
													"nativeSrc": "4039:28:10",
													"nodeType": "YulBlock",
													"src": "4039:28:10",
													"statements": [
														{
															"nativeSrc": "4049:12:10",
															"nodeType": "YulAssignment",
															"src": "4049:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "4056:5:10",
																"nodeType": "YulIdentifier",
																"src": "4056:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4049:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4049:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4007:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4025:5:10",
														"nodeType": "YulTypedName",
														"src": "4025:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4035:3:10",
														"nodeType": "YulTypedName",
														"src": "4035:3:10",
														"type": ""
													}
												],
												"src": "4007:60:10"
											},
											{
												"body": {
													"nativeSrc": "4133:82:10",
													"nodeType": "YulBlock",
													"src": "4133:82:10",
													"statements": [
														{
															"nativeSrc": "4143:66:10",
															"nodeType": "YulAssignment",
															"src": "4143:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4201:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4201:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4183:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4183:17:10"
																				},
																				"nativeSrc": "4183:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4183:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4174:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "4174:8:10"
																		},
																		"nativeSrc": "4174:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4174:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4156:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "4156:17:10"
																},
																"nativeSrc": "4156:53:10",
																"nodeType": "YulFunctionCall",
																"src": "4156:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4143:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4073:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4113:5:10",
														"nodeType": "YulTypedName",
														"src": "4113:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4123:9:10",
														"nodeType": "YulTypedName",
														"src": "4123:9:10",
														"type": ""
													}
												],
												"src": "4073:142:10"
											},
											{
												"body": {
													"nativeSrc": "4281:66:10",
													"nodeType": "YulBlock",
													"src": "4281:66:10",
													"statements": [
														{
															"nativeSrc": "4291:50:10",
															"nodeType": "YulAssignment",
															"src": "4291:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4335:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4335:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4304:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4304:30:10"
																},
																"nativeSrc": "4304:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4304:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4291:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4291:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4221:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4261:5:10",
														"nodeType": "YulTypedName",
														"src": "4261:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4271:9:10",
														"nodeType": "YulTypedName",
														"src": "4271:9:10",
														"type": ""
													}
												],
												"src": "4221:126:10"
											},
											{
												"body": {
													"nativeSrc": "4441:66:10",
													"nodeType": "YulBlock",
													"src": "4441:66:10",
													"statements": [
														{
															"nativeSrc": "4451:50:10",
															"nodeType": "YulAssignment",
															"src": "4451:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4495:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4495:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4464:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "4464:30:10"
																},
																"nativeSrc": "4464:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4464:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4451:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4451:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "4353:154:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4421:5:10",
														"nodeType": "YulTypedName",
														"src": "4421:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4431:9:10",
														"nodeType": "YulTypedName",
														"src": "4431:9:10",
														"type": ""
													}
												],
												"src": "4353:154:10"
											},
											{
												"body": {
													"nativeSrc": "4606:94:10",
													"nodeType": "YulBlock",
													"src": "4606:94:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4623:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4623:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4687:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4687:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "4628:58:10",
																			"nodeType": "YulIdentifier",
																			"src": "4628:58:10"
																		},
																		"nativeSrc": "4628:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4628:65:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4616:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:10"
																},
																"nativeSrc": "4616:78:10",
																"nodeType": "YulFunctionCall",
																"src": "4616:78:10"
															},
															"nativeSrc": "4616:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "4616:78:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "4513:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4594:5:10",
														"nodeType": "YulTypedName",
														"src": "4594:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4601:3:10",
														"nodeType": "YulTypedName",
														"src": "4601:3:10",
														"type": ""
													}
												],
												"src": "4513:187:10"
											},
											{
												"body": {
													"nativeSrc": "4832:152:10",
													"nodeType": "YulBlock",
													"src": "4832:152:10",
													"statements": [
														{
															"nativeSrc": "4842:26:10",
															"nodeType": "YulAssignment",
															"src": "4842:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4854:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4854:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4850:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4850:3:10"
																},
																"nativeSrc": "4850:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4850:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4842:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4842:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4950:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4950:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4963:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4963:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4974:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4974:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:10"
																		},
																		"nativeSrc": "4959:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "4878:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "4878:71:10"
																},
																"nativeSrc": "4878:99:10",
																"nodeType": "YulFunctionCall",
																"src": "4878:99:10"
															},
															"nativeSrc": "4878:99:10",
															"nodeType": "YulExpressionStatement",
															"src": "4878:99:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "4706:278:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4804:9:10",
														"nodeType": "YulTypedName",
														"src": "4804:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4816:6:10",
														"nodeType": "YulTypedName",
														"src": "4816:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4827:4:10",
														"nodeType": "YulTypedName",
														"src": "4827:4:10",
														"type": ""
													}
												],
												"src": "4706:278:10"
											},
											{
												"body": {
													"nativeSrc": "5116:206:10",
													"nodeType": "YulBlock",
													"src": "5116:206:10",
													"statements": [
														{
															"nativeSrc": "5126:26:10",
															"nodeType": "YulAssignment",
															"src": "5126:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5138:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5138:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5134:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5134:3:10"
																},
																"nativeSrc": "5134:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5134:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5126:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5126:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5206:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5219:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5230:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5230:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:10"
																		},
																		"nativeSrc": "5215:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5215:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5162:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5162:43:10"
																},
																"nativeSrc": "5162:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5162:71:10"
															},
															"nativeSrc": "5162:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5162:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5287:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5287:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5300:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5300:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5311:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5311:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5296:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5296:3:10"
																		},
																		"nativeSrc": "5296:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5296:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5243:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5243:43:10"
																},
																"nativeSrc": "5243:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5243:72:10"
															},
															"nativeSrc": "5243:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5243:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4990:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5080:9:10",
														"nodeType": "YulTypedName",
														"src": "5080:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5092:6:10",
														"nodeType": "YulTypedName",
														"src": "5092:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5100:6:10",
														"nodeType": "YulTypedName",
														"src": "5100:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:10",
														"nodeType": "YulTypedName",
														"src": "5111:4:10",
														"type": ""
													}
												],
												"src": "4990:332:10"
											},
											{
												"body": {
													"nativeSrc": "5356:152:10",
													"nodeType": "YulBlock",
													"src": "5356:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5373:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5373:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5376:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5376:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5366:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:10"
																},
																"nativeSrc": "5366:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5366:88:10"
															},
															"nativeSrc": "5366:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5366:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5470:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5470:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5473:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5473:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5463:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:10"
																},
																"nativeSrc": "5463:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5463:15:10"
															},
															"nativeSrc": "5463:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5463:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5494:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5494:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5497:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5487:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:10"
																},
																"nativeSrc": "5487:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5487:15:10"
															},
															"nativeSrc": "5487:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5487:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5328:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5328:180:10"
											},
											{
												"body": {
													"nativeSrc": "5558:147:10",
													"nodeType": "YulBlock",
													"src": "5558:147:10",
													"statements": [
														{
															"nativeSrc": "5568:25:10",
															"nodeType": "YulAssignment",
															"src": "5568:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5591:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5591:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5573:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5573:17:10"
																},
																"nativeSrc": "5573:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5573:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5568:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5568:1:10"
																}
															]
														},
														{
															"nativeSrc": "5602:25:10",
															"nodeType": "YulAssignment",
															"src": "5602:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5625:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5625:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5607:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5607:17:10"
																},
																"nativeSrc": "5607:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5607:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5602:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5602:1:10"
																}
															]
														},
														{
															"nativeSrc": "5636:16:10",
															"nodeType": "YulAssignment",
															"src": "5636:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5647:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5647:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5650:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5650:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5643:3:10"
																},
																"nativeSrc": "5643:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5643:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5676:22:10",
																"nodeType": "YulBlock",
																"src": "5676:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5678:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5678:16:10"
																			},
																			"nativeSrc": "5678:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5678:18:10"
																		},
																		"nativeSrc": "5678:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5678:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5668:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5671:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5671:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5665:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5665:2:10"
																},
																"nativeSrc": "5665:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5665:10:10"
															},
															"nativeSrc": "5662:36:10",
															"nodeType": "YulIf",
															"src": "5662:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5514:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5545:1:10",
														"nodeType": "YulTypedName",
														"src": "5545:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5548:1:10",
														"nodeType": "YulTypedName",
														"src": "5548:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5554:3:10",
														"nodeType": "YulTypedName",
														"src": "5554:3:10",
														"type": ""
													}
												],
												"src": "5514:191:10"
											},
											{
												"body": {
													"nativeSrc": "5755:49:10",
													"nodeType": "YulBlock",
													"src": "5755:49:10",
													"statements": [
														{
															"nativeSrc": "5765:33:10",
															"nodeType": "YulAssignment",
															"src": "5765:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5780:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5787:10:10",
																		"nodeType": "YulLiteral",
																		"src": "5787:10:10",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5776:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5776:3:10"
																},
																"nativeSrc": "5776:22:10",
																"nodeType": "YulFunctionCall",
																"src": "5776:22:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5765:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5765:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "5711:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5737:5:10",
														"nodeType": "YulTypedName",
														"src": "5737:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5747:7:10",
														"nodeType": "YulTypedName",
														"src": "5747:7:10",
														"type": ""
													}
												],
												"src": "5711:93:10"
											},
											{
												"body": {
													"nativeSrc": "5852:133:10",
													"nodeType": "YulBlock",
													"src": "5852:133:10",
													"statements": [
														{
															"nativeSrc": "5862:32:10",
															"nodeType": "YulAssignment",
															"src": "5862:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5888:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5888:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint32",
																	"nativeSrc": "5871:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "5871:16:10"
																},
																"nativeSrc": "5871:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5871:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5862:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5862:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5928:22:10",
																"nodeType": "YulBlock",
																"src": "5928:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5930:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5930:16:10"
																			},
																			"nativeSrc": "5930:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:18:10"
																		},
																		"nativeSrc": "5930:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5909:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5909:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5916:10:10",
																		"nodeType": "YulLiteral",
																		"src": "5916:10:10",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5906:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5906:2:10"
																},
																"nativeSrc": "5906:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:10"
															},
															"nativeSrc": "5903:47:10",
															"nodeType": "YulIf",
															"src": "5903:47:10"
														},
														{
															"nativeSrc": "5959:20:10",
															"nodeType": "YulAssignment",
															"src": "5959:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5970:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5970:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5977:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5966:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5966:3:10"
																},
																"nativeSrc": "5966:13:10",
																"nodeType": "YulFunctionCall",
																"src": "5966:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5959:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint32",
												"nativeSrc": "5810:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5838:5:10",
														"nodeType": "YulTypedName",
														"src": "5838:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5848:3:10",
														"nodeType": "YulTypedName",
														"src": "5848:3:10",
														"type": ""
													}
												],
												"src": "5810:175:10"
											},
											{
												"body": {
													"nativeSrc": "6173:262:10",
													"nodeType": "YulBlock",
													"src": "6173:262:10",
													"statements": [
														{
															"nativeSrc": "6183:26:10",
															"nodeType": "YulAssignment",
															"src": "6183:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6195:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6195:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6206:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6206:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:10"
																},
																"nativeSrc": "6191:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6191:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6183:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6183:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6291:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6291:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6304:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6304:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6315:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6315:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6300:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6300:3:10"
																		},
																		"nativeSrc": "6300:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6300:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "6219:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "6219:71:10"
																},
																"nativeSrc": "6219:99:10",
																"nodeType": "YulFunctionCall",
																"src": "6219:99:10"
															},
															"nativeSrc": "6219:99:10",
															"nodeType": "YulExpressionStatement",
															"src": "6219:99:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6400:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6400:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6413:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6413:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6424:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6424:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6409:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6409:3:10"
																		},
																		"nativeSrc": "6409:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6409:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "6328:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "6328:71:10"
																},
																"nativeSrc": "6328:100:10",
																"nodeType": "YulFunctionCall",
																"src": "6328:100:10"
															},
															"nativeSrc": "6328:100:10",
															"nodeType": "YulExpressionStatement",
															"src": "6328:100:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45_t_contract$_AggregatorV3Interface_$45__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5991:444:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6137:9:10",
														"nodeType": "YulTypedName",
														"src": "6137:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6149:6:10",
														"nodeType": "YulTypedName",
														"src": "6149:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6157:6:10",
														"nodeType": "YulTypedName",
														"src": "6157:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6168:4:10",
														"nodeType": "YulTypedName",
														"src": "6168:4:10",
														"type": ""
													}
												],
												"src": "5991:444:10"
											},
											{
												"body": {
													"nativeSrc": "6595:288:10",
													"nodeType": "YulBlock",
													"src": "6595:288:10",
													"statements": [
														{
															"nativeSrc": "6605:26:10",
															"nodeType": "YulAssignment",
															"src": "6605:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6617:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6617:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6613:3:10"
																},
																"nativeSrc": "6613:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6613:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6605:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6605:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6685:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6685:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6698:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6709:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:10"
																		},
																		"nativeSrc": "6694:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6641:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6641:43:10"
																},
																"nativeSrc": "6641:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6641:71:10"
															},
															"nativeSrc": "6641:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6641:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6766:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6779:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6779:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6790:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6790:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6775:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6775:3:10"
																		},
																		"nativeSrc": "6775:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6775:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6722:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6722:43:10"
																},
																"nativeSrc": "6722:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6722:72:10"
															},
															"nativeSrc": "6722:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6722:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6848:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6872:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6872:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6857:3:10"
																		},
																		"nativeSrc": "6857:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6857:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6804:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6804:43:10"
																},
																"nativeSrc": "6804:72:10",
																"nodeType": "YulFunctionCall",
																"src": "6804:72:10"
															},
															"nativeSrc": "6804:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "6804:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6441:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6551:9:10",
														"nodeType": "YulTypedName",
														"src": "6551:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6563:6:10",
														"nodeType": "YulTypedName",
														"src": "6563:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6571:6:10",
														"nodeType": "YulTypedName",
														"src": "6571:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6579:6:10",
														"nodeType": "YulTypedName",
														"src": "6579:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6590:4:10",
														"nodeType": "YulTypedName",
														"src": "6590:4:10",
														"type": ""
													}
												],
												"src": "6441:442:10"
											},
											{
												"body": {
													"nativeSrc": "6934:149:10",
													"nodeType": "YulBlock",
													"src": "6934:149:10",
													"statements": [
														{
															"nativeSrc": "6944:25:10",
															"nodeType": "YulAssignment",
															"src": "6944:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6967:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6967:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6949:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6949:17:10"
																},
																"nativeSrc": "6949:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6949:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6944:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6944:1:10"
																}
															]
														},
														{
															"nativeSrc": "6978:25:10",
															"nodeType": "YulAssignment",
															"src": "6978:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7001:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7001:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6983:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6983:17:10"
																},
																"nativeSrc": "6983:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6983:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6978:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6978:1:10"
																}
															]
														},
														{
															"nativeSrc": "7012:17:10",
															"nodeType": "YulAssignment",
															"src": "7012:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7024:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7024:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7027:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:10"
																},
																"nativeSrc": "7020:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7020:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7012:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7012:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7054:22:10",
																"nodeType": "YulBlock",
																"src": "7054:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7056:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7056:16:10"
																			},
																			"nativeSrc": "7056:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7056:18:10"
																		},
																		"nativeSrc": "7056:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7056:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7045:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7045:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7051:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7051:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7042:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7042:2:10"
																},
																"nativeSrc": "7042:11:10",
																"nodeType": "YulFunctionCall",
																"src": "7042:11:10"
															},
															"nativeSrc": "7039:37:10",
															"nodeType": "YulIf",
															"src": "7039:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6889:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6920:1:10",
														"nodeType": "YulTypedName",
														"src": "6920:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6923:1:10",
														"nodeType": "YulTypedName",
														"src": "6923:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6929:4:10",
														"nodeType": "YulTypedName",
														"src": "6929:4:10",
														"type": ""
													}
												],
												"src": "6889:194:10"
											},
											{
												"body": {
													"nativeSrc": "7137:362:10",
													"nodeType": "YulBlock",
													"src": "7137:362:10",
													"statements": [
														{
															"nativeSrc": "7147:25:10",
															"nodeType": "YulAssignment",
															"src": "7147:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7170:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:10"
																},
																"nativeSrc": "7152:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7147:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:10"
																}
															]
														},
														{
															"nativeSrc": "7181:25:10",
															"nodeType": "YulAssignment",
															"src": "7181:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7204:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7204:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7186:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7186:17:10"
																},
																"nativeSrc": "7186:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7186:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7181:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7181:1:10"
																}
															]
														},
														{
															"nativeSrc": "7215:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7215:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7238:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7238:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7241:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7241:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7234:3:10"
																},
																"nativeSrc": "7234:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7234:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7219:11:10",
																	"nodeType": "YulTypedName",
																	"src": "7219:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7252:41:10",
															"nodeType": "YulAssignment",
															"src": "7252:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7281:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "7281:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7263:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7263:17:10"
																},
																"nativeSrc": "7263:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7263:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7252:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7252:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7470:22:10",
																"nodeType": "YulBlock",
																"src": "7470:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7472:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7472:16:10"
																			},
																			"nativeSrc": "7472:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7472:18:10"
																		},
																		"nativeSrc": "7472:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7472:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7403:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7403:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7396:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7396:6:10"
																				},
																				"nativeSrc": "7396:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7396:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7426:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7426:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7433:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "7433:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7442:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "7442:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7429:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7429:3:10"
																						},
																						"nativeSrc": "7429:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7429:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7423:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7423:2:10"
																				},
																				"nativeSrc": "7423:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7423:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7376:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7376:2:10"
																		},
																		"nativeSrc": "7376:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7376:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7356:6:10"
																},
																"nativeSrc": "7356:113:10",
																"nodeType": "YulFunctionCall",
																"src": "7356:113:10"
															},
															"nativeSrc": "7353:139:10",
															"nodeType": "YulIf",
															"src": "7353:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7089:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7120:1:10",
														"nodeType": "YulTypedName",
														"src": "7120:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7123:1:10",
														"nodeType": "YulTypedName",
														"src": "7123:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7129:7:10",
														"nodeType": "YulTypedName",
														"src": "7129:7:10",
														"type": ""
													}
												],
												"src": "7089:410:10"
											},
											{
												"body": {
													"nativeSrc": "7533:152:10",
													"nodeType": "YulBlock",
													"src": "7533:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7550:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7550:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7553:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7553:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:10"
																},
																"nativeSrc": "7543:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7543:88:10"
															},
															"nativeSrc": "7543:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7543:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7647:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7647:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7650:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7640:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:10"
																},
																"nativeSrc": "7640:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7640:15:10"
															},
															"nativeSrc": "7640:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7640:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7671:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7671:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7674:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7674:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7664:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:10"
																},
																"nativeSrc": "7664:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7664:15:10"
															},
															"nativeSrc": "7664:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7664:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7505:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7505:180:10"
											},
											{
												"body": {
													"nativeSrc": "7733:143:10",
													"nodeType": "YulBlock",
													"src": "7733:143:10",
													"statements": [
														{
															"nativeSrc": "7743:25:10",
															"nodeType": "YulAssignment",
															"src": "7743:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7766:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7766:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7748:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7748:17:10"
																},
																"nativeSrc": "7748:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7748:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7743:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7743:1:10"
																}
															]
														},
														{
															"nativeSrc": "7777:25:10",
															"nodeType": "YulAssignment",
															"src": "7777:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7800:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7800:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7782:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7782:17:10"
																},
																"nativeSrc": "7782:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7782:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7777:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7777:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7824:22:10",
																"nodeType": "YulBlock",
																"src": "7824:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7826:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7826:16:10"
																			},
																			"nativeSrc": "7826:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7826:18:10"
																		},
																		"nativeSrc": "7826:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7826:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7821:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7821:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7814:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:10"
																},
																"nativeSrc": "7814:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7814:9:10"
															},
															"nativeSrc": "7811:35:10",
															"nodeType": "YulIf",
															"src": "7811:35:10"
														},
														{
															"nativeSrc": "7856:14:10",
															"nodeType": "YulAssignment",
															"src": "7856:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7865:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7865:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7868:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7868:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7861:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:10"
																},
																"nativeSrc": "7861:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7861:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7856:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7856:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7691:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7722:1:10",
														"nodeType": "YulTypedName",
														"src": "7722:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7725:1:10",
														"nodeType": "YulTypedName",
														"src": "7725:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7731:1:10",
														"nodeType": "YulTypedName",
														"src": "7731:1:10",
														"type": ""
													}
												],
												"src": "7691:185:10"
											},
											{
												"body": {
													"nativeSrc": "7995:34:10",
													"nodeType": "YulBlock",
													"src": "7995:34:10",
													"statements": [
														{
															"nativeSrc": "8005:18:10",
															"nodeType": "YulAssignment",
															"src": "8005:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "8020:3:10",
																"nodeType": "YulIdentifier",
																"src": "8020:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8005:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "8005:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7882:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7967:3:10",
														"nodeType": "YulTypedName",
														"src": "7967:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7972:6:10",
														"nodeType": "YulTypedName",
														"src": "7972:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7983:11:10",
														"nodeType": "YulTypedName",
														"src": "7983:11:10",
														"type": ""
													}
												],
												"src": "7882:147:10"
											},
											{
												"body": {
													"nativeSrc": "8141:8:10",
													"nodeType": "YulBlock",
													"src": "8141:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "8035:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8133:6:10",
														"nodeType": "YulTypedName",
														"src": "8133:6:10",
														"type": ""
													}
												],
												"src": "8035:114:10"
											},
											{
												"body": {
													"nativeSrc": "8318:235:10",
													"nodeType": "YulBlock",
													"src": "8318:235:10",
													"statements": [
														{
															"nativeSrc": "8328:90:10",
															"nodeType": "YulAssignment",
															"src": "8328:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8411:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8411:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8416:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8335:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "8335:75:10"
																},
																"nativeSrc": "8335:83:10",
																"nodeType": "YulFunctionCall",
																"src": "8335:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8328:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8328:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8516:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "8427:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8427:88:10"
																},
																"nativeSrc": "8427:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8427:93:10"
															},
															"nativeSrc": "8427:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8427:93:10"
														},
														{
															"nativeSrc": "8529:18:10",
															"nodeType": "YulAssignment",
															"src": "8529:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8540:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8540:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8545:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8545:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8536:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8536:3:10"
																},
																"nativeSrc": "8536:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8536:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "8155:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8306:3:10",
														"nodeType": "YulTypedName",
														"src": "8306:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8314:3:10",
														"nodeType": "YulTypedName",
														"src": "8314:3:10",
														"type": ""
													}
												],
												"src": "8155:398:10"
											},
											{
												"body": {
													"nativeSrc": "8747:191:10",
													"nodeType": "YulBlock",
													"src": "8747:191:10",
													"statements": [
														{
															"nativeSrc": "8758:154:10",
															"nodeType": "YulAssignment",
															"src": "8758:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8908:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8908:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8765:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "8765:141:10"
																},
																"nativeSrc": "8765:147:10",
																"nodeType": "YulFunctionCall",
																"src": "8765:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8758:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8758:3:10"
																}
															]
														},
														{
															"nativeSrc": "8922:10:10",
															"nodeType": "YulAssignment",
															"src": "8922:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "8929:3:10",
																"nodeType": "YulIdentifier",
																"src": "8929:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8559:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8734:3:10",
														"nodeType": "YulTypedName",
														"src": "8734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8743:3:10",
														"nodeType": "YulTypedName",
														"src": "8743:3:10",
														"type": ""
													}
												],
												"src": "8559:379:10"
											},
											{
												"body": {
													"nativeSrc": "9002:40:10",
													"nodeType": "YulBlock",
													"src": "9002:40:10",
													"statements": [
														{
															"nativeSrc": "9013:22:10",
															"nodeType": "YulAssignment",
															"src": "9013:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9029:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9029:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9023:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9023:5:10"
																},
																"nativeSrc": "9023:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9023:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9013:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9013:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "8944:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8985:5:10",
														"nodeType": "YulTypedName",
														"src": "8985:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8995:6:10",
														"nodeType": "YulTypedName",
														"src": "8995:6:10",
														"type": ""
													}
												],
												"src": "8944:98:10"
											},
											{
												"body": {
													"nativeSrc": "9143:73:10",
													"nodeType": "YulBlock",
													"src": "9143:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9160:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9160:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9165:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9165:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9153:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:10"
																},
																"nativeSrc": "9153:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9153:19:10"
															},
															"nativeSrc": "9153:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "9153:19:10"
														},
														{
															"nativeSrc": "9181:29:10",
															"nodeType": "YulAssignment",
															"src": "9181:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9200:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9200:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9205:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9196:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9196:3:10"
																},
																"nativeSrc": "9196:14:10",
																"nodeType": "YulFunctionCall",
																"src": "9196:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9181:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "9181:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9048:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9115:3:10",
														"nodeType": "YulTypedName",
														"src": "9115:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9120:6:10",
														"nodeType": "YulTypedName",
														"src": "9120:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9131:11:10",
														"nodeType": "YulTypedName",
														"src": "9131:11:10",
														"type": ""
													}
												],
												"src": "9048:168:10"
											},
											{
												"body": {
													"nativeSrc": "9284:77:10",
													"nodeType": "YulBlock",
													"src": "9284:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9301:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9301:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9306:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9306:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9311:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9311:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9295:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9295:5:10"
																},
																"nativeSrc": "9295:23:10",
																"nodeType": "YulFunctionCall",
																"src": "9295:23:10"
															},
															"nativeSrc": "9295:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "9295:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9338:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9338:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9343:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9343:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9334:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9334:3:10"
																		},
																		"nativeSrc": "9334:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9334:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9352:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9352:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:10"
																},
																"nativeSrc": "9327:27:10",
																"nodeType": "YulFunctionCall",
																"src": "9327:27:10"
															},
															"nativeSrc": "9327:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "9327:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9222:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9266:3:10",
														"nodeType": "YulTypedName",
														"src": "9266:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9271:3:10",
														"nodeType": "YulTypedName",
														"src": "9271:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9276:6:10",
														"nodeType": "YulTypedName",
														"src": "9276:6:10",
														"type": ""
													}
												],
												"src": "9222:139:10"
											},
											{
												"body": {
													"nativeSrc": "9415:54:10",
													"nodeType": "YulBlock",
													"src": "9415:54:10",
													"statements": [
														{
															"nativeSrc": "9425:38:10",
															"nodeType": "YulAssignment",
															"src": "9425:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9443:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9443:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9450:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9450:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:10"
																		},
																		"nativeSrc": "9439:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9459:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9459:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9455:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9455:3:10"
																		},
																		"nativeSrc": "9455:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9455:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9435:3:10"
																},
																"nativeSrc": "9435:28:10",
																"nodeType": "YulFunctionCall",
																"src": "9435:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "9367:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9398:5:10",
														"nodeType": "YulTypedName",
														"src": "9398:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9408:6:10",
														"nodeType": "YulTypedName",
														"src": "9408:6:10",
														"type": ""
													}
												],
												"src": "9367:102:10"
											},
											{
												"body": {
													"nativeSrc": "9565:283:10",
													"nodeType": "YulBlock",
													"src": "9565:283:10",
													"statements": [
														{
															"nativeSrc": "9575:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9575:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9621:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9621:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "9589:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "9589:31:10"
																},
																"nativeSrc": "9589:38:10",
																"nodeType": "YulFunctionCall",
																"src": "9589:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9579:6:10",
																	"nodeType": "YulTypedName",
																	"src": "9579:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9636:77:10",
															"nodeType": "YulAssignment",
															"src": "9636:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9701:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9701:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9706:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "9643:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "9643:57:10"
																},
																"nativeSrc": "9643:70:10",
																"nodeType": "YulFunctionCall",
																"src": "9643:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9636:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9761:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9761:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9768:4:10",
																				"nodeType": "YulLiteral",
																				"src": "9768:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9757:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:10"
																		},
																		"nativeSrc": "9757:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9775:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9775:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9780:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9722:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "9722:34:10"
																},
																"nativeSrc": "9722:65:10",
																"nodeType": "YulFunctionCall",
																"src": "9722:65:10"
															},
															"nativeSrc": "9722:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "9722:65:10"
														},
														{
															"nativeSrc": "9796:46:10",
															"nodeType": "YulAssignment",
															"src": "9796:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9807:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9807:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9834:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9834:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9812:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "9812:21:10"
																		},
																		"nativeSrc": "9812:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9803:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9803:3:10"
																},
																"nativeSrc": "9803:39:10",
																"nodeType": "YulFunctionCall",
																"src": "9803:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9796:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9796:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9475:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9546:5:10",
														"nodeType": "YulTypedName",
														"src": "9546:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9553:3:10",
														"nodeType": "YulTypedName",
														"src": "9553:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9561:3:10",
														"nodeType": "YulTypedName",
														"src": "9561:3:10",
														"type": ""
													}
												],
												"src": "9475:373:10"
											},
											{
												"body": {
													"nativeSrc": "10026:357:10",
													"nodeType": "YulBlock",
													"src": "10026:357:10",
													"statements": [
														{
															"nativeSrc": "10036:26:10",
															"nodeType": "YulAssignment",
															"src": "10036:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10048:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10048:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10059:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10059:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10044:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10044:3:10"
																},
																"nativeSrc": "10044:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10044:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10036:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10036:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10116:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10116:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10129:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10129:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10140:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10140:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:10"
																		},
																		"nativeSrc": "10125:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10125:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10072:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10072:43:10"
																},
																"nativeSrc": "10072:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10072:71:10"
															},
															"nativeSrc": "10072:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10072:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10197:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10197:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10210:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10210:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10221:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10221:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10206:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:10"
																		},
																		"nativeSrc": "10206:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10206:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10153:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10153:43:10"
																},
																"nativeSrc": "10153:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10153:72:10"
															},
															"nativeSrc": "10153:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10153:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10246:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10246:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10257:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10257:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10242:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10242:3:10"
																		},
																		"nativeSrc": "10242:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10242:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10266:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10266:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10272:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10272:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10262:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:10"
																		},
																		"nativeSrc": "10262:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10262:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10235:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10235:6:10"
																},
																"nativeSrc": "10235:48:10",
																"nodeType": "YulFunctionCall",
																"src": "10235:48:10"
															},
															"nativeSrc": "10235:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "10235:48:10"
														},
														{
															"nativeSrc": "10292:84:10",
															"nodeType": "YulAssignment",
															"src": "10292:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10362:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10362:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10371:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10371:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10300:61:10",
																	"nodeType": "YulIdentifier",
																	"src": "10300:61:10"
																},
																"nativeSrc": "10300:76:10",
																"nodeType": "YulFunctionCall",
																"src": "10300:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10292:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10292:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9854:529:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9982:9:10",
														"nodeType": "YulTypedName",
														"src": "9982:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9994:6:10",
														"nodeType": "YulTypedName",
														"src": "9994:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10002:6:10",
														"nodeType": "YulTypedName",
														"src": "10002:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10010:6:10",
														"nodeType": "YulTypedName",
														"src": "10010:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10021:4:10",
														"nodeType": "YulTypedName",
														"src": "10021:4:10",
														"type": ""
													}
												],
												"src": "9854:529:10"
											},
											{
												"body": {
													"nativeSrc": "10433:61:10",
													"nodeType": "YulBlock",
													"src": "10433:61:10",
													"statements": [
														{
															"nativeSrc": "10443:45:10",
															"nodeType": "YulAssignment",
															"src": "10443:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10458:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10458:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10465:22:10",
																		"nodeType": "YulLiteral",
																		"src": "10465:22:10",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10454:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:10"
																},
																"nativeSrc": "10454:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10454:34:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10443:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10443:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "10389:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10415:5:10",
														"nodeType": "YulTypedName",
														"src": "10415:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10425:7:10",
														"nodeType": "YulTypedName",
														"src": "10425:7:10",
														"type": ""
													}
												],
												"src": "10389:105:10"
											},
											{
												"body": {
													"nativeSrc": "10542:78:10",
													"nodeType": "YulBlock",
													"src": "10542:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10598:16:10",
																"nodeType": "YulBlock",
																"src": "10598:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10607:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10607:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10610:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10610:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10600:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10600:6:10"
																			},
																			"nativeSrc": "10600:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10600:12:10"
																		},
																		"nativeSrc": "10600:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10600:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10565:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10565:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10589:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10589:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "10572:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "10572:16:10"
																				},
																				"nativeSrc": "10572:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10572:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10562:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10562:2:10"
																		},
																		"nativeSrc": "10562:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10562:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10555:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10555:6:10"
																},
																"nativeSrc": "10555:42:10",
																"nodeType": "YulFunctionCall",
																"src": "10555:42:10"
															},
															"nativeSrc": "10552:62:10",
															"nodeType": "YulIf",
															"src": "10552:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "10500:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10535:5:10",
														"nodeType": "YulTypedName",
														"src": "10535:5:10",
														"type": ""
													}
												],
												"src": "10500:120:10"
											},
											{
												"body": {
													"nativeSrc": "10688:79:10",
													"nodeType": "YulBlock",
													"src": "10688:79:10",
													"statements": [
														{
															"nativeSrc": "10698:22:10",
															"nodeType": "YulAssignment",
															"src": "10698:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10713:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10713:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10707:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10707:5:10"
																},
																"nativeSrc": "10707:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10707:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10698:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "10698:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10755:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10755:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "10729:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "10729:25:10"
																},
																"nativeSrc": "10729:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10729:32:10"
															},
															"nativeSrc": "10729:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "10729:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "10626:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10666:6:10",
														"nodeType": "YulTypedName",
														"src": "10666:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10674:3:10",
														"nodeType": "YulTypedName",
														"src": "10674:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10682:5:10",
														"nodeType": "YulTypedName",
														"src": "10682:5:10",
														"type": ""
													}
												],
												"src": "10626:141:10"
											},
											{
												"body": {
													"nativeSrc": "10817:32:10",
													"nodeType": "YulBlock",
													"src": "10817:32:10",
													"statements": [
														{
															"nativeSrc": "10827:16:10",
															"nodeType": "YulAssignment",
															"src": "10827:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "10838:5:10",
																"nodeType": "YulIdentifier",
																"src": "10838:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10827:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10827:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "10773:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10799:5:10",
														"nodeType": "YulTypedName",
														"src": "10799:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10809:7:10",
														"nodeType": "YulTypedName",
														"src": "10809:7:10",
														"type": ""
													}
												],
												"src": "10773:76:10"
											},
											{
												"body": {
													"nativeSrc": "10897:78:10",
													"nodeType": "YulBlock",
													"src": "10897:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10953:16:10",
																"nodeType": "YulBlock",
																"src": "10953:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10962:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10962:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10965:1:10",
																					"nodeType": "YulLiteral",
																					"src": "10965:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10955:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10955:6:10"
																			},
																			"nativeSrc": "10955:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10955:12:10"
																		},
																		"nativeSrc": "10955:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10955:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10920:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10920:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10944:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "10944:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "10927:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "10927:16:10"
																				},
																				"nativeSrc": "10927:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10927:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10917:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10917:2:10"
																		},
																		"nativeSrc": "10917:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10917:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:10"
																},
																"nativeSrc": "10910:42:10",
																"nodeType": "YulFunctionCall",
																"src": "10910:42:10"
															},
															"nativeSrc": "10907:62:10",
															"nodeType": "YulIf",
															"src": "10907:62:10"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "10855:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10890:5:10",
														"nodeType": "YulTypedName",
														"src": "10890:5:10",
														"type": ""
													}
												],
												"src": "10855:120:10"
											},
											{
												"body": {
													"nativeSrc": "11043:79:10",
													"nodeType": "YulBlock",
													"src": "11043:79:10",
													"statements": [
														{
															"nativeSrc": "11053:22:10",
															"nodeType": "YulAssignment",
															"src": "11053:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11068:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11068:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11062:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11062:5:10"
																},
																"nativeSrc": "11062:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11062:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11053:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11053:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11110:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11110:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "11084:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "11084:25:10"
																},
																"nativeSrc": "11084:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11084:32:10"
															},
															"nativeSrc": "11084:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "11084:32:10"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "10981:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11021:6:10",
														"nodeType": "YulTypedName",
														"src": "11021:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11029:3:10",
														"nodeType": "YulTypedName",
														"src": "11029:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11037:5:10",
														"nodeType": "YulTypedName",
														"src": "11037:5:10",
														"type": ""
													}
												],
												"src": "10981:141:10"
											},
											{
												"body": {
													"nativeSrc": "11191:80:10",
													"nodeType": "YulBlock",
													"src": "11191:80:10",
													"statements": [
														{
															"nativeSrc": "11201:22:10",
															"nodeType": "YulAssignment",
															"src": "11201:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11216:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11216:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11210:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11210:5:10"
																},
																"nativeSrc": "11210:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11210:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11201:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11201:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11259:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11259:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11232:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "11232:26:10"
																},
																"nativeSrc": "11232:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11232:33:10"
															},
															"nativeSrc": "11232:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11232:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11128:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11169:6:10",
														"nodeType": "YulTypedName",
														"src": "11169:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11177:3:10",
														"nodeType": "YulTypedName",
														"src": "11177:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11185:5:10",
														"nodeType": "YulTypedName",
														"src": "11185:5:10",
														"type": ""
													}
												],
												"src": "11128:143:10"
											},
											{
												"body": {
													"nativeSrc": "11419:829:10",
													"nodeType": "YulBlock",
													"src": "11419:829:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11466:83:10",
																"nodeType": "YulBlock",
																"src": "11466:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11468:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11468:77:10"
																			},
																			"nativeSrc": "11468:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11468:79:10"
																		},
																		"nativeSrc": "11468:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11468:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11440:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11440:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11449:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11436:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11436:3:10"
																		},
																		"nativeSrc": "11436:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11436:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11461:3:10",
																		"nodeType": "YulLiteral",
																		"src": "11461:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11432:3:10"
																},
																"nativeSrc": "11432:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11432:33:10"
															},
															"nativeSrc": "11429:120:10",
															"nodeType": "YulIf",
															"src": "11429:120:10"
														},
														{
															"nativeSrc": "11559:127:10",
															"nodeType": "YulBlock",
															"src": "11559:127:10",
															"statements": [
																{
																	"nativeSrc": "11574:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11574:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11588:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11588:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11578:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11578:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11603:73:10",
																	"nodeType": "YulAssignment",
																	"src": "11603:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11648:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11648:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11659:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11659:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11644:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11644:3:10"
																				},
																				"nativeSrc": "11644:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11644:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11668:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11668:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "11613:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "11613:30:10"
																		},
																		"nativeSrc": "11613:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11613:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11603:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11603:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11696:128:10",
															"nodeType": "YulBlock",
															"src": "11696:128:10",
															"statements": [
																{
																	"nativeSrc": "11711:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11711:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11725:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11725:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11715:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11715:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11741:73:10",
																	"nodeType": "YulAssignment",
																	"src": "11741:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11786:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11786:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11797:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11797:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11782:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11782:3:10"
																				},
																				"nativeSrc": "11782:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11782:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11806:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11806:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "11751:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "11751:30:10"
																		},
																		"nativeSrc": "11751:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11751:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11741:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11741:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11834:129:10",
															"nodeType": "YulBlock",
															"src": "11834:129:10",
															"statements": [
																{
																	"nativeSrc": "11849:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11863:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11863:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11853:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11879:74:10",
																	"nodeType": "YulAssignment",
																	"src": "11879:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11925:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11925:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11936:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11936:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11921:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11921:3:10"
																				},
																				"nativeSrc": "11921:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11921:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11945:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11945:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11889:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "11889:31:10"
																		},
																		"nativeSrc": "11889:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11889:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11879:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11879:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11973:129:10",
															"nodeType": "YulBlock",
															"src": "11973:129:10",
															"statements": [
																{
																	"nativeSrc": "11988:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11988:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12002:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11992:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11992:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12018:74:10",
																	"nodeType": "YulAssignment",
																	"src": "12018:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12064:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12064:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12075:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12075:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12060:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12060:3:10"
																				},
																				"nativeSrc": "12060:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12060:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12084:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12084:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12028:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "12028:31:10"
																		},
																		"nativeSrc": "12028:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12028:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12018:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12018:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12112:129:10",
															"nodeType": "YulBlock",
															"src": "12112:129:10",
															"statements": [
																{
																	"nativeSrc": "12127:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12127:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12141:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12141:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12131:6:10",
																			"nodeType": "YulTypedName",
																			"src": "12131:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12158:73:10",
																	"nodeType": "YulAssignment",
																	"src": "12158:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12203:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "12203:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12214:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "12214:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12199:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "12199:3:10"
																				},
																				"nativeSrc": "12199:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "12199:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12223:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "12223:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "12168:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "12168:30:10"
																		},
																		"nativeSrc": "12168:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12168:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12158:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "12158:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "11277:971:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11357:9:10",
														"nodeType": "YulTypedName",
														"src": "11357:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11368:7:10",
														"nodeType": "YulTypedName",
														"src": "11368:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11380:6:10",
														"nodeType": "YulTypedName",
														"src": "11380:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11388:6:10",
														"nodeType": "YulTypedName",
														"src": "11388:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11396:6:10",
														"nodeType": "YulTypedName",
														"src": "11396:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11404:6:10",
														"nodeType": "YulTypedName",
														"src": "11404:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11412:6:10",
														"nodeType": "YulTypedName",
														"src": "11412:6:10",
														"type": ""
													}
												],
												"src": "11277:971:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function increment_t_uint32(value) -> ret {\n        value := cleanup_t_uint32(value)\n        if eq(value, 0xffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45_t_contract$_AggregatorV3Interface_$45__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"924": [
									{
										"length": 32,
										"start": 1624
									},
									{
										"length": 32,
										"start": 3360
									}
								],
								"930": [
									{
										"length": 32,
										"start": 3324
									},
									{
										"length": 32,
										"start": 5480
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x169 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94F649DD GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xC311D049 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD2706C91 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD2706C91 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0xEF649249 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5D0 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0xC311D049 EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xC3A8962C EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xC77E551B EQ PUSH2 0x518 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x94F649DD EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x962B9BCC EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x97FEB926 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA1DB9782 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xA2ABECD3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xB588D225 EQ PUSH2 0x478 JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x6B149D87 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x6B149D87 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x7DC532C5 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x7F86EE43 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x80EF10ED EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI PUSH2 0x178 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x21D60805 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x297BEB3C EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x3A2B643A EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x439370B1 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x50D6C1E8 EQ PUSH2 0x264 JUMPI PUSH2 0x178 JUMP JUMPDEST CALLDATASIZE PUSH2 0x178 JUMPI PUSH2 0x176 PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x60C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0xC42 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xC55 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x35E PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x39A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0xEA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x49E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x20BA JUMP JUMPDEST PUSH2 0x1459 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x502 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1FA9 JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x52C PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x2140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x568 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x181B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x575 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x592 PUSH2 0x18B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x1938 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x603 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE GT CALLER CALLVALUE SWAP1 SWAP2 PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH32 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLVALUE PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST GT ISZERO CALLER CALLVALUE SWAP1 SWAP2 PUSH2 0x754 JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x87B SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x8CB SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9D6 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9E6 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA85 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4A PUSH2 0x1A74 JUMP JUMPDEST PUSH2 0xC53 PUSH0 PUSH2 0x1AFB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC5D PUSH2 0x1A74 JUMP JUMPDEST PUSH32 0x3BE680563C528780D5A9CD763A27B4A48AB5F9DC10E4083A2FA55B6FC5FF33E6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xCAF SWAP3 SWAP2 SWAP1 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xD72 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP3 SWAP1 SWAP2 PUSH2 0xEEE JUMPI PUSH1 0x40 MLOAD PUSH32 0xACB26D8E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE5 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1015 SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH32 0xE33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1067 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x109C CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP4 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x10EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4E4601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO CALLER DUP4 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB4E4601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x12DA SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1303 DUP3 DUP3 PUSH2 0x1C3E JUMP JUMPDEST PUSH32 0xD0164496E26F9675ACAEA59FB065313E45D71D1D3E09D3681765773CD4AA1918 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 GT CALLER DUP3 SWAP1 SWAP2 PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1498 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO CALLER DUP3 SWAP1 SWAP2 PUSH2 0x1564 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155B SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH32 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 GT ISZERO CALLER DUP3 SWAP1 SWAP2 PUSH2 0x15E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF607410700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D8 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x166A SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 SWAP1 PUSH2 0x21EF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1730 DUP2 PUSH2 0x1C6F JUMP JUMPDEST PUSH32 0x69C169E5C85AF54E1CA7E16608CCC812437821387924FB3353A7D053264DDAA0 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x1761 SWAP3 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1775 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1933 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1940 PUSH2 0x1A74 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A7 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B9 DUP2 PUSH2 0x1AFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x19C5 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH9 0x56BC75E2D63100000 PUSH2 0x1A58 PUSH2 0x1D2A JUMP JUMPDEST DUP4 PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0x1A6D SWAP2 SWAP1 PUSH2 0x2317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7C PUSH2 0x1E4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A9A PUSH2 0xD42 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AF9 JUMPI PUSH2 0x1ABD PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1C38 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1BF1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1E54 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C6B ADDRESS CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C95 SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1CCF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 CALLER DUP5 DUP4 SWAP1 SWAP2 SWAP3 PUSH2 0x1D22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3FD18B8500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x24BA JUMP JUMPDEST POP SWAP4 POP POP SWAP3 POP POP PUSH0 DUP3 SUB PUSH2 0x1DFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x144C1D9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 PUSH2 0xFFFF AND DUP2 TIMESTAMP PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2276 JUMP JUMPDEST GT PUSH2 0x1E45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19ABF40E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1E8C JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1EA7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EE9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE0 SWAP2 SWAP1 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F01 DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F1A PUSH0 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4D DUP3 PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5D DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F67 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F78 DUP2 PUSH2 0x1F54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA0 DUP5 DUP3 DUP6 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBF JUMPI PUSH2 0x1FBE PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDD DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200B DUP2 PUSH2 0x1FE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2024 PUSH0 DUP4 ADD DUP5 PUSH2 0x2002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2033 DUP2 PUSH2 0x1F43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204C PUSH0 DUP4 ADD DUP5 PUSH2 0x202A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x205B DUP2 PUSH2 0x1EEF JUMP JUMPDEST DUP2 EQ PUSH2 0x2065 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2076 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x209F DUP6 DUP3 DUP7 ADD PUSH2 0x1F6A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20DC DUP5 DUP3 DUP6 ADD PUSH2 0x2068 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2108 PUSH2 0x2103 PUSH2 0x20FE DUP5 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2119 DUP3 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A DUP3 PUSH2 0x210F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213A DUP2 PUSH2 0x2120 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2153 PUSH0 DUP4 ADD DUP5 PUSH2 0x2131 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x216C PUSH0 DUP4 ADD DUP6 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2179 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21B7 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x21C2 DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21DA JUMPI PUSH2 0x21D9 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP3 PUSH2 0x21E0 JUMP JUMPDEST SWAP2 POP PUSH4 0xFFFFFFFF DUP3 SUB PUSH2 0x220F JUMPI PUSH2 0x220E PUSH2 0x2180 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x222D PUSH0 DUP4 ADD DUP6 PUSH2 0x2131 JUMP JUMPDEST PUSH2 0x223A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2131 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2254 PUSH0 DUP4 ADD DUP7 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2261 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x226E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EF8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2280 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x228B DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22A3 JUMPI PUSH2 0x22A2 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22B3 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x22BE DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x22CC DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x22E3 JUMPI PUSH2 0x22E2 PUSH2 0x2180 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2321 DUP3 PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP PUSH2 0x232C DUP4 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x22EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x235F PUSH0 DUP4 PUSH2 0x2347 JUMP JUMPDEST SWAP2 POP PUSH2 0x236A DUP3 PUSH2 0x2351 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237E DUP3 PUSH2 0x2354 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23CA DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH2 0x23D4 DUP2 DUP6 PUSH2 0x2392 JUMP JUMPDEST SWAP4 POP PUSH2 0x23E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x23A2 JUMP JUMPDEST PUSH2 0x23ED DUP2 PUSH2 0x23B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x240B PUSH0 DUP4 ADD DUP7 PUSH2 0x202A JUMP JUMPDEST PUSH2 0x2418 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EF8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x242A DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2452 DUP2 PUSH2 0x2434 JUMP JUMPDEST DUP2 EQ PUSH2 0x245C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x246D DUP2 PUSH2 0x2449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2485 DUP2 PUSH2 0x2473 JUMP JUMPDEST DUP2 EQ PUSH2 0x248F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24A0 DUP2 PUSH2 0x247C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24B4 DUP2 PUSH2 0x2052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24D3 JUMPI PUSH2 0x24D2 PUSH2 0x1F20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24E0 DUP9 DUP3 DUP10 ADD PUSH2 0x245F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24F1 DUP9 DUP3 DUP10 ADD PUSH2 0x2492 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2502 DUP9 DUP3 DUP10 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2513 DUP9 DUP3 DUP10 ADD PUSH2 0x24A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2524 DUP9 DUP3 DUP10 ADD PUSH2 0x245F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SUB LT 0xA5 LT 0xF JUMPF 0x60D6 DUP2 ADD JUMPI 0xCC 0x1F 0xAC DUP14 PUSH14 0xD38A1C005CCCD98F3E99F8D1C944 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "919:14670:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4971:12;:10;:12::i;:::-;919:14670;;;;;6394:123;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9107:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10910:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9906:156;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5160:402;;;:::i;:::-;;7131:138;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6889:126;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;11833:190:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2384:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9510:144:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11432:187;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:413;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13183:556;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7847:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7478:152;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12297:534;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10393:172;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1490:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8221:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6630:145;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8729:141:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5160:402;5228:1;5216:9;:13;5249:10;5260:9;5208:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;5338:9;5290:57;;5300:10;:22;5311:10;5300:22;;;;;;;;;;;;;;;:34;5331:1;5300:34;;;;;;;;;;;;;;;;5290:9;:44;;;;:::i;:::-;:57;;5367:10;5378:9;5282:107;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;5440:9;5402:10;:22;5413:10;5402:22;;;;;;;;;;;;;;;:34;5433:1;5402:34;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;5460:10;:22;5471:10;5460:22;;;;;;;;;;;;;;;:34;5491:1;5460:34;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5522:32;5532:10;5544:9;5522:32;;;;;;;:::i;:::-;;;;;;;;5160:402::o;6394:123::-;6438:13;6475:10;:22;6486:10;6475:22;;;;;;;;;;;;;;;:34;6506:1;6475:34;;;;;;;;;;;;;;;;6464:45;;6394:123;:::o;9107:153::-;9169:13;9206:46;9222:10;:17;9233:5;9222:17;;;;;;;;;;;;;;;:29;9248:1;9222:29;;;;;;;;;;;;;;;;9206:15;:46::i;:::-;9195:57;;9107:153;;;:::o;10910:175::-;11006:14;1531:13:1;:11;:13::i;:::-;11045:10:9::1;:17;11056:5;11045:17;;;;;;;;;;;;;;;:32;11063:13;11045:32;;;;;;;;;;;;;;;;;;;;;;;;;11033:44;;;;10910:175:::0;;;;:::o;9906:156::-;9977:17;1531:13:1;:11;:13::i;:::-;10022::9::1;:20;10036:5;10022:20;;;;;;;;;;;;;;;:32;10051:1;10022:32;;;;;;;;;;;;;;;;;;;;;;;;;10007:47;;;;9906:156:::0;;;:::o;7131:138::-;7179:17;7224:13;:25;7238:10;7224:25;;;;;;;;;;;;;;;:37;7258:1;7224:37;;;;;;;;;;;;;;;;;;;;;;;;;7209:52;;;;7131:138;:::o;6889:126::-;6934:14;6973:10;:22;6984:10;6973:22;;;;;;;;;;;;;;;:34;7004:1;6973:34;;;;;;;;;;;;;;;;;;;;;;;;;6961:46;;;;6889:126;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;11833:190:9:-;1531:13:1;:11;:13::i;:::-;11903:59:9::1;11924:7;;;;;;;;;;;11955:5;11903:59;;;;;;;:::i;:::-;;;;;;;;12007:5;11975:7;;:38;;;;;;;;;;;;;;;;;;11833:190:::0;:::o;2384:49::-;;;:::o;2293:34::-;;;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;9510:144:9:-;9578:14;1531:13:1;:11;:13::i;:::-;9617:10:9::1;:17;9628:5;9617:17;;;;;;;;;;;;;;;:29;9643:1;9617:29;;;;;;;;;;;;;;;;;;;;;;;;;9605:41;;;;9510:144:::0;;;:::o;11432:187::-;11531:17;1531:13:1;:11;:13::i;:::-;11576::9::1;:20;11590:5;11576:20;;;;;;;;;;;;;;;:35;11597:13;11576:35;;;;;;;;;;;;;;;;;;;;;;;;;11561:50;;;;11432:187:::0;;;;:::o;5873:413::-;5973:1;5963:7;:11;5994:10;6005:7;5955:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;6066:7;6025:10;:22;6036:10;6025:22;;;;;;;;;;;;;;;:37;6048:13;6025:37;;;;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;6084:10;:22;6095:10;6084:22;;;;;;;;;;;;;;;:37;6107:13;6084:37;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;6141:50;6156:10;6168:13;6183:7;6141:50;;;;;;;;:::i;:::-;;;;;;;;6204:74;6243:10;6263:4;6270:7;6211:13;6204:38;;;;:74;;;;;;:::i;:::-;5873:413;;:::o;13183:556::-;13279:1;13269:7;:11;13308:10;13320:13;13335:7;13261:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;13374:10;:22;13385:10;13374:22;;;;;;;;;;;;;;;:37;13397:13;13374:37;;;;;;;;;;;;;;;;13363:7;:48;;13439:10;13451:13;13466:7;13355:120;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;13529:7;13488:10;:22;13499:10;13488:22;;;;;;;;;;;;;;;:37;13511:13;13488:37;;;;;;;;;;;;;;;;:48;;;;;;;:::i;:::-;;;;;;;;13547:13;:25;13561:10;13547:25;;;;;;;;;;;;;;;:40;13573:13;13547:40;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;13610:37;13624:13;13639:7;13610:13;:37::i;:::-;13673:50;13688:10;13700:13;13715:7;13673:50;;;;;;;;:::i;:::-;;;;;;;;13183:556;;:::o;7847:155::-;7918:14;7957:10;:22;7968:10;7957:22;;;;;;;;;;;;;;;:37;7980:13;7957:37;;;;;;;;;;;;;;;;;;;;;;;;;7945:49;;;;7847:155;;;:::o;7478:152::-;7548:13;7585:10;:22;7596:10;7585:22;;;;;;;;;;;;;;;:37;7608:13;7585:37;;;;;;;;;;;;;;;;7574:48;;7478:152;;;:::o;12297:534::-;12368:1;12358:7;:11;12392:10;12404:7;12350:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;12443:10;:22;12454:10;12443:22;;;;;;;;;;;;;;;:34;12474:1;12443:34;;;;;;;;;;;;;;;;12432:7;:45;;12500:10;12512:7;12424:97;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;12551:15;12540:26;;:7;:26;;12589:10;12601:7;12532:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;12661:7;12623:10;:22;12634:10;12623:22;;;;;;;;;;;;;;;:34;12654:1;12623:34;;;;;;;;;;;;;;;;:45;;;;;;;:::i;:::-;;;;;;;;12679:13;:25;12693:10;12679:25;;;;;;;;;;;;;;;:37;12713:1;12679:37;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;12739:20;12751:7;12739:11;:20::i;:::-;12785:30;12795:10;12807:7;12785:30;;;;;;;:::i;:::-;;;;;;;;12297:534;:::o;10393:172::-;10488:13;1531::1;:11;:13::i;:::-;10525:10:9::1;:17;10536:5;10525:17;;;;;;;;;;;;;;;:32;10543:13;10525:32;;;;;;;;;;;;;;;;10514:43;;10393:172:::0;;;;:::o;1490:36::-;;;;;;;;;;;;;:::o;8221:167::-;8295:17;8340:13;:25;8354:10;8340:25;;;;;;;;;;;;;;;:40;8366:13;8340:40;;;;;;;;;;;;;;;;;;;;;;;;;8325:55;;;;8221:167;;;:::o;6630:145::-;6679:13;6716:51;6732:10;:22;6743:10;6732:22;;;;;;;;;;;;;;;:34;6763:1;6732:34;;;;;;;;;;;;;;;;6716:15;:51::i;:::-;6705:62;;6630:145;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8729:141:9:-;8796:13;1531::1;:11;:13::i;:::-;8833:10:9::1;:17;8844:5;8833:17;;;;;;;;;;;;;;;:29;8859:1;8833:29;;;;;;;;;;;;;;;;8822:40;;8729:141:::0;;;:::o;13980:179::-;14048:24;1396:12;14118:15;:13;:15::i;:::-;14105:10;:28;;;;:::i;:::-;14104:47;;;;:::i;:::-;14085:66;;13980:179;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;15417:161:9:-;15496:74;15543:4;15550:10;15562:7;15503:13;15496:38;;;;:74;;;;;;:::i;:::-;15417:161;;:::o;14894:215::-;14949:12;14963:22;14989:10;:15;;15012:7;14989:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14948:76;;;;15043:7;15071:10;15082:7;15090:9;15035:66;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;14937:172;;14894:215;:::o;14318:349::-;14366:20;14402:18;14423:17;14445:7;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14399:71;;;;;;;14506:1;14491:11;:16;14483:46;;;;;;;;;;;;;;;;;1278:4;14548:48;;14567:9;14549:15;:27;;;;:::i;:::-;14548:48;14540:71;;;;;;;;;;;;;;;;;14647:11;14624:35;;14388:279;;14318:349;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:474::-;1679:6;1687;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1989:2;2015:53;2060:7;2051:6;2040:9;2036:22;2015:53;:::i;:::-;2005:63;;1960:118;1611:474;;;;;:::o;2091:118::-;2128:7;2168:34;2161:5;2157:46;2146:57;;2091:118;;;:::o;2215:::-;2302:24;2320:5;2302:24;:::i;:::-;2297:3;2290:37;2215:118;;:::o;2339:222::-;2432:4;2470:2;2459:9;2455:18;2447:26;;2483:71;2551:1;2540:9;2536:17;2527:6;2483:71;:::i;:::-;2339:222;;;;:::o;2567:118::-;2654:24;2672:5;2654:24;:::i;:::-;2649:3;2642:37;2567:118;;:::o;2691:222::-;2784:4;2822:2;2811:9;2807:18;2799:26;;2835:71;2903:1;2892:9;2888:17;2879:6;2835:71;:::i;:::-;2691:222;;;;:::o;2919:122::-;2992:24;3010:5;2992:24;:::i;:::-;2985:5;2982:35;2972:63;;3031:1;3028;3021:12;2972:63;2919:122;:::o;3047:139::-;3093:5;3131:6;3118:20;3109:29;;3147:33;3174:5;3147:33;:::i;:::-;3047:139;;;;:::o;3192:474::-;3260:6;3268;3317:2;3305:9;3296:7;3292:23;3288:32;3285:119;;;3323:79;;:::i;:::-;3285:119;3443:1;3468:53;3513:7;3504:6;3493:9;3489:22;3468:53;:::i;:::-;3458:63;;3414:117;3570:2;3596:53;3641:7;3632:6;3621:9;3617:22;3596:53;:::i;:::-;3586:63;;3541:118;3192:474;;;;;:::o;3672:329::-;3731:6;3780:2;3768:9;3759:7;3755:23;3751:32;3748:119;;;3786:79;;:::i;:::-;3748:119;3906:1;3931:53;3976:7;3967:6;3956:9;3952:22;3931:53;:::i;:::-;3921:63;;3877:117;3672:329;;;;:::o;4007:60::-;4035:3;4056:5;4049:12;;4007:60;;;:::o;4073:142::-;4123:9;4156:53;4174:34;4183:24;4201:5;4183:24;:::i;:::-;4174:34;:::i;:::-;4156:53;:::i;:::-;4143:66;;4073:142;;;:::o;4221:126::-;4271:9;4304:37;4335:5;4304:37;:::i;:::-;4291:50;;4221:126;;;:::o;4353:154::-;4431:9;4464:37;4495:5;4464:37;:::i;:::-;4451:50;;4353:154;;;:::o;4513:187::-;4628:65;4687:5;4628:65;:::i;:::-;4623:3;4616:78;4513:187;;:::o;4706:278::-;4827:4;4865:2;4854:9;4850:18;4842:26;;4878:99;4974:1;4963:9;4959:17;4950:6;4878:99;:::i;:::-;4706:278;;;;:::o;4990:332::-;5111:4;5149:2;5138:9;5134:18;5126:26;;5162:71;5230:1;5219:9;5215:17;5206:6;5162:71;:::i;:::-;5243:72;5311:2;5300:9;5296:18;5287:6;5243:72;:::i;:::-;4990:332;;;;;:::o;5328:180::-;5376:77;5373:1;5366:88;5473:4;5470:1;5463:15;5497:4;5494:1;5487:15;5514:191;5554:3;5573:20;5591:1;5573:20;:::i;:::-;5568:25;;5607:20;5625:1;5607:20;:::i;:::-;5602:25;;5650:1;5647;5643:9;5636:16;;5671:3;5668:1;5665:10;5662:36;;;5678:18;;:::i;:::-;5662:36;5514:191;;;;:::o;5711:93::-;5747:7;5787:10;5780:5;5776:22;5765:33;;5711:93;;;:::o;5810:175::-;5848:3;5871:23;5888:5;5871:23;:::i;:::-;5862:32;;5916:10;5909:5;5906:21;5903:47;;5930:18;;:::i;:::-;5903:47;5977:1;5970:5;5966:13;5959:20;;5810:175;;;:::o;5991:444::-;6168:4;6206:2;6195:9;6191:18;6183:26;;6219:99;6315:1;6304:9;6300:17;6291:6;6219:99;:::i;:::-;6328:100;6424:2;6413:9;6409:18;6400:6;6328:100;:::i;:::-;5991:444;;;;;:::o;6441:442::-;6590:4;6628:2;6617:9;6613:18;6605:26;;6641:71;6709:1;6698:9;6694:17;6685:6;6641:71;:::i;:::-;6722:72;6790:2;6779:9;6775:18;6766:6;6722:72;:::i;:::-;6804;6872:2;6861:9;6857:18;6848:6;6804:72;:::i;:::-;6441:442;;;;;;:::o;6889:194::-;6929:4;6949:20;6967:1;6949:20;:::i;:::-;6944:25;;6983:20;7001:1;6983:20;:::i;:::-;6978:25;;7027:1;7024;7020:9;7012:17;;7051:1;7045:4;7042:11;7039:37;;;7056:18;;:::i;:::-;7039:37;6889:194;;;;:::o;7089:410::-;7129:7;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7186:20;7204:1;7186:20;:::i;:::-;7181:25;;7241:1;7238;7234:9;7263:30;7281:11;7263:30;:::i;:::-;7252:41;;7442:1;7433:7;7429:15;7426:1;7423:22;7403:1;7396:9;7376:83;7353:139;;7472:18;;:::i;:::-;7353:139;7137:362;7089:410;;;;:::o;7505:180::-;7553:77;7550:1;7543:88;7650:4;7647:1;7640:15;7674:4;7671:1;7664:15;7691:185;7731:1;7748:20;7766:1;7748:20;:::i;:::-;7743:25;;7782:20;7800:1;7782:20;:::i;:::-;7777:25;;7821:1;7811:35;;7826:18;;:::i;:::-;7811:35;7868:1;7865;7861:9;7856:14;;7691:185;;;;:::o;7882:147::-;7983:11;8020:3;8005:18;;7882:147;;;;:::o;8035:114::-;;:::o;8155:398::-;8314:3;8335:83;8416:1;8411:3;8335:83;:::i;:::-;8328:90;;8427:93;8516:3;8427:93;:::i;:::-;8545:1;8540:3;8536:11;8529:18;;8155:398;;;:::o;8559:379::-;8743:3;8765:147;8908:3;8765:147;:::i;:::-;8758:154;;8929:3;8922:10;;8559:379;;;:::o;8944:98::-;8995:6;9029:5;9023:12;9013:22;;8944:98;;;:::o;9048:168::-;9131:11;9165:6;9160:3;9153:19;9205:4;9200:3;9196:14;9181:29;;9048:168;;;;:::o;9222:139::-;9311:6;9306:3;9301;9295:23;9352:1;9343:6;9338:3;9334:16;9327:27;9222:139;;;:::o;9367:102::-;9408:6;9459:2;9455:7;9450:2;9443:5;9439:14;9435:28;9425:38;;9367:102;;;:::o;9475:373::-;9561:3;9589:38;9621:5;9589:38;:::i;:::-;9643:70;9706:6;9701:3;9643:70;:::i;:::-;9636:77;;9722:65;9780:6;9775:3;9768:4;9761:5;9757:16;9722:65;:::i;:::-;9812:29;9834:6;9812:29;:::i;:::-;9807:3;9803:39;9796:46;;9565:283;9475:373;;;;:::o;9854:529::-;10021:4;10059:2;10048:9;10044:18;10036:26;;10072:71;10140:1;10129:9;10125:17;10116:6;10072:71;:::i;:::-;10153:72;10221:2;10210:9;10206:18;10197:6;10153:72;:::i;:::-;10272:9;10266:4;10262:20;10257:2;10246:9;10242:18;10235:48;10300:76;10371:4;10362:6;10300:76;:::i;:::-;10292:84;;9854:529;;;;;;:::o;10389:105::-;10425:7;10465:22;10458:5;10454:34;10443:45;;10389:105;;;:::o;10500:120::-;10572:23;10589:5;10572:23;:::i;:::-;10565:5;10562:34;10552:62;;10610:1;10607;10600:12;10552:62;10500:120;:::o;10626:141::-;10682:5;10713:6;10707:13;10698:22;;10729:32;10755:5;10729:32;:::i;:::-;10626:141;;;;:::o;10773:76::-;10809:7;10838:5;10827:16;;10773:76;;;:::o;10855:120::-;10927:23;10944:5;10927:23;:::i;:::-;10920:5;10917:34;10907:62;;10965:1;10962;10955:12;10907:62;10855:120;:::o;10981:141::-;11037:5;11068:6;11062:13;11053:22;;11084:32;11110:5;11084:32;:::i;:::-;10981:141;;;;:::o;11128:143::-;11185:5;11216:6;11210:13;11201:22;;11232:33;11259:5;11232:33;:::i;:::-;11128:143;;;;:::o;11277:971::-;11380:6;11388;11396;11404;11412;11461:3;11449:9;11440:7;11436:23;11432:33;11429:120;;;11468:79;;:::i;:::-;11429:120;11588:1;11613:63;11668:7;11659:6;11648:9;11644:22;11613:63;:::i;:::-;11603:73;;11559:127;11725:2;11751:63;11806:7;11797:6;11786:9;11782:22;11751:63;:::i;:::-;11741:73;;11696:128;11863:2;11889:64;11945:7;11936:6;11925:9;11921:22;11889:64;:::i;:::-;11879:74;;11834:129;12002:2;12028:64;12084:7;12075:6;12064:9;12060:22;12028:64;:::i;:::-;12018:74;;11973:129;12141:3;12168:63;12223:7;12214:6;12203:9;12199:22;12168:63;:::i;:::-;12158:73;;12112:129;11277:971;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1915000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"depositERC20(address,uint256)": "infinite",
								"depositEth()": "infinite",
								"getBalance()": "2630",
								"getBalance(address)": "infinite",
								"getBalanceInUSD()": "infinite",
								"getBalanceInUSD(address)": "infinite",
								"getDeposits()": "2670",
								"getDeposits(address)": "infinite",
								"getERC20Balance(address)": "3049",
								"getERC20Balance(address,address)": "infinite",
								"getERC20Deposits(address)": "3068",
								"getERC20Deposits(address,address)": "infinite",
								"getERC20Withdrawals(address)": "3001",
								"getERC20Withdrawals(address,address)": "infinite",
								"getWithdrawals()": "2781",
								"getWithdrawals(address)": "infinite",
								"owner()": "2647",
								"renounceOwnership()": "infinite",
								"s_bankCap()": "infinite",
								"s_feeds()": "infinite",
								"s_withdrawLimit()": "infinite",
								"setFeeds(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawERC20(address,uint256)": "infinite",
								"withdrawEth(uint256)": "infinite"
							},
							"internal": {
								"chainlinkFeed()": "infinite",
								"convertEthInUSD(uint256)": "infinite",
								"transferERC20(address,uint256)": "infinite",
								"transferEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2433,
									"name": "PUSH",
									"source": 9,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2433,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 4607,
									"end": 4762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4661,
									"end": 4671,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4696,
									"end": 4705,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4684,
									"end": 4705,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4748,
									"end": 4753,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4723,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4716,
									"end": 4723,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4716,
									"end": 4754,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4762,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 452,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 452,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 445,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 446,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 446,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 446,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 452,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 452,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 452,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 458,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 458,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 531,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 549,
									"end": 554,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 531,
									"end": 555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 531,
									"end": 555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 531,
									"end": 555,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 531,
									"end": 555,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 524,
									"end": 529,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 511,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 511,
									"end": 574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 568,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 572,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 511,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 511,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 580,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 458,
									"end": 580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 586,
									"end": 729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 643,
									"end": 648,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 668,
									"end": 681,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 659,
									"end": 681,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 659,
									"end": 681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 690,
									"end": 723,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 717,
									"end": 722,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 690,
									"end": 723,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 690,
									"end": 723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 690,
									"end": 723,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 690,
									"end": 723,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 586,
									"end": 729,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 735,
									"end": 861,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 735,
									"end": 861,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 772,
									"end": 779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 854,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 805,
									"end": 810,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 801,
									"end": 855,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 790,
									"end": 855,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 790,
									"end": 855,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 735,
									"end": 861,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 735,
									"end": 861,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 735,
									"end": 861,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 735,
									"end": 861,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 867,
									"end": 963,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 867,
									"end": 963,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 904,
									"end": 911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 933,
									"end": 957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 951,
									"end": 956,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 933,
									"end": 957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 933,
									"end": 957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 933,
									"end": 957,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 933,
									"end": 957,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 922,
									"end": 957,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 922,
									"end": 957,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 867,
									"end": 963,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 867,
									"end": 963,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 867,
									"end": 963,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 867,
									"end": 963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1091,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 969,
									"end": 1091,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1065,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1042,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1042,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1042,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1035,
									"end": 1040,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1067,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1022,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1081,
									"end": 1082,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 1079,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1083,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1022,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1022,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1091,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1154,
									"end": 1159,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1191,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1192,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1192,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1170,
									"end": 1192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1201,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1228,
									"end": 1233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1201,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1201,
									"end": 1234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1201,
									"end": 1234,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 1201,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1331,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 1339,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1384,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1379,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1361,
									"end": 1368,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1357,
									"end": 1380,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1353,
									"end": 1385,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1350,
									"end": 1469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1350,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1350,
									"end": 1469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 1467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1388,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1350,
									"end": 1469,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1350,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1589,
									"end": 1596,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1569,
									"end": 1578,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1565,
									"end": 1587,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1533,
									"end": 1597,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1597,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1523,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1479,
									"end": 1607,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1646,
									"end": 1648,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1728,
									"end": 1735,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 1725,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1708,
									"end": 1717,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1704,
									"end": 1726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1672,
									"end": 1736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1672,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1736,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1662,
									"end": 1736,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1617,
									"end": 1746,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1753,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1759,
									"end": 1877,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1759,
									"end": 1877,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1864,
									"end": 1869,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1846,
									"end": 1870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1870,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1846,
									"end": 1870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1841,
									"end": 1844,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1871,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1759,
									"end": 1877,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1759,
									"end": 1877,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1759,
									"end": 1877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 1980,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2014,
									"end": 2016,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2003,
									"end": 2012,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1999,
									"end": 2017,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1991,
									"end": 2017,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1991,
									"end": 2017,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2027,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2095,
									"end": 2096,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2093,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2080,
									"end": 2097,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2077,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2027,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 2027,
									"end": 2098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2027,
									"end": 2098,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2027,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1883,
									"end": 2105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "930"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "924"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 15589,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e90310a5100fe560d6810157cc1fac8d6dd38a1c005cccd98f3e99f8d1c944ff64736f6c634300081e0033",
									".code": [
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "94F649DD"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "C311D049"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "D2706C91"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "D2706C91"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "EF649249"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "F8B2CB4F"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "C311D049"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "C3A8962C"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "C77E551B"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "94F649DD"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "962B9BCC"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "97FEB926"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "A1DB9782"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "A2ABECD3"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "B588D225"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "6B149D87"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "6B149D87"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "7DC532C5"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "7F86EE43"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "80EF10ED"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "12065FE0"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "21D60805"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "297BEB3C"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "3A2B643A"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "439370B1"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "50D6C1E8"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4971,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 4971,
											"end": 4983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 4983,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4971,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 15589,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6394,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9107,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9107,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9107,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 10910,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10910,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9906,
											"end": 10062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 9906,
											"end": 10062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 10062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5160,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7131,
											"end": 7269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6889,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11833,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 11833,
											"end": 12023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2384,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2384,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9510,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 9510,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 11432,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11432,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11432,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 5873,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5873,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 13183,
											"end": 13739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 13183,
											"end": 13739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7847,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7847,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7847,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7478,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7478,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 12297,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 12297,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 10393,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 10393,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10393,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1490,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 1490,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8221,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 8221,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8221,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6630,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8729,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 8729,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 5160,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5216,
											"end": 5229,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5249,
											"end": 5259,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5260,
											"end": 5269,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH",
											"source": 9,
											"value": "ACB26D8E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5208,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5208,
											"end": 5271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "924"
										},
										{
											"begin": 5290,
											"end": 5347,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5290,
											"end": 5347,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5310,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5321,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5322,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5300,
											"end": 5334,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5299,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 5290,
											"end": 5334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5290,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5347,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5347,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5377,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH",
											"source": 9,
											"value": "ACB26D8E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5282,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5282,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5449,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5412,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5423,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 5402,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5470,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5460,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 5532,
											"end": 5542,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5522,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6496,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6497,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6475,
											"end": 6509,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6509,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6394,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9206,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 9222,
											"end": 9232,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9238,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9239,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9248,
											"end": 9249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9251,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9206,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 9206,
											"end": 9252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9206,
											"end": 9252,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 9206,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9107,
											"end": 9260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 11061,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11062,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11033,
											"end": 11077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11033,
											"end": 11077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10910,
											"end": 11085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 9994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10036,
											"end": 10041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10042,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10007,
											"end": 10054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10007,
											"end": 10054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10007,
											"end": 10054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10007,
											"end": 10054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9906,
											"end": 10062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7179,
											"end": 7196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7237,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7248,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7249,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7224,
											"end": 7261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7261,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 6983,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6994,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 6995,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 7007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 7007,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 7007,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 7007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6961,
											"end": 7007,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 7015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3BE680563C528780D5A9CD763A27B4A48AB5F9DC10E4083A2FA55B6FC5FF33E6"
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11924,
											"end": 11931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 11960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 11903,
											"end": 11962,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11903,
											"end": 11962,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 12007,
											"end": 12012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11975,
											"end": 11982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11975,
											"end": 12013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 12023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "930"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "924"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9617,
											"end": 9627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9633,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9634,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9617,
											"end": 9646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9646,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11595,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11596,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11610,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11576,
											"end": 11611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11561,
											"end": 11611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11561,
											"end": 11611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11561,
											"end": 11611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11561,
											"end": 11611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11432,
											"end": 11619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5994,
											"end": 6004,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6005,
											"end": 6012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH",
											"source": 9,
											"value": "ACB26D8E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5955,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6046,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6047,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6061,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6025,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6025,
											"end": 6073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6094,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6105,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6106,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6120,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6084,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "PUSH",
											"source": 9,
											"value": "E33E9822E3317B004D587136BAB2627EA1ECFBBA4EB79ABDDD0A56CFDD09C0E1"
										},
										{
											"begin": 6156,
											"end": 6166,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6168,
											"end": 6181,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6141,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6191,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 6243,
											"end": 6253,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6277,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6242,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6242,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6204,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 6204,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 6286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13279,
											"end": 13280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13269,
											"end": 13276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13280,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13308,
											"end": 13318,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13333,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13335,
											"end": 13342,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH",
											"source": 9,
											"value": "B4E4601D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13261,
											"end": 13344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13261,
											"end": 13344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13384,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13395,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13397,
											"end": 13410,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13374,
											"end": 13411,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13363,
											"end": 13370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13363,
											"end": 13411,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13363,
											"end": 13411,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13439,
											"end": 13449,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13451,
											"end": 13464,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13466,
											"end": 13473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH",
											"source": 9,
											"value": "B4E4601D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13355,
											"end": 13475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13355,
											"end": 13475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13529,
											"end": 13536,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13498,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13509,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13510,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13511,
											"end": 13524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 13488,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13560,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13571,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13572,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13573,
											"end": 13586,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 13547,
											"end": 13589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13547,
											"end": 13589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 13624,
											"end": 13637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13639,
											"end": 13646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 13610,
											"end": 13647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13647,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 13610,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "PUSH",
											"source": 9,
											"value": "D0164496E26F9675ACAEA59FB065313E45D71D1D3E09D3681765773CD4AA1918"
										},
										{
											"begin": 13688,
											"end": 13698,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 13700,
											"end": 13713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13722,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 13673,
											"end": 13723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13673,
											"end": 13723,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7967,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7978,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7979,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7993,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7957,
											"end": 7994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7945,
											"end": 7994,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7994,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7847,
											"end": 8002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7548,
											"end": 7561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7595,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7606,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7607,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7622,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12358,
											"end": 12369,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12402,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12404,
											"end": 12411,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH",
											"source": 9,
											"value": "F607410700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 12350,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12350,
											"end": 12413,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12453,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12464,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12465,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12477,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12477,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12432,
											"end": 12477,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12500,
											"end": 12510,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12512,
											"end": 12519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH",
											"source": 9,
											"value": "F607410700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 12424,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12566,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "930"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12589,
											"end": 12599,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12601,
											"end": 12608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH",
											"source": 9,
											"value": "F607410700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 12532,
											"end": 12610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12532,
											"end": 12610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12661,
											"end": 12668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12633,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12644,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12654,
											"end": 12655,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 12623,
											"end": 12668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12623,
											"end": 12668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12692,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12693,
											"end": 12703,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12704,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 12679,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12679,
											"end": 12718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12751,
											"end": 12758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12739,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 12739,
											"end": 12759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "PUSH",
											"source": 9,
											"value": "69C169E5C85AF54E1CA7E16608CCC812437821387924FB3353A7D053264DDAA0"
										},
										{
											"begin": 12795,
											"end": 12805,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 12807,
											"end": 12814,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 12785,
											"end": 12815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12785,
											"end": 12815,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12297,
											"end": 12831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10541,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10542,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10556,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10557,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10514,
											"end": 10557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10393,
											"end": 10565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8295,
											"end": 8312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8353,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8364,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8379,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8380,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8325,
											"end": 8380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8221,
											"end": 8388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6732,
											"end": 6742,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6753,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6763,
											"end": 6764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6732,
											"end": 6766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6716,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6767,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6716,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8796,
											"end": 8809,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8849,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8850,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8862,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8822,
											"end": 8862,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14159,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 13980,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14048,
											"end": 14072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1408,
											"name": "PUSH",
											"source": 9,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 14118,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 14118,
											"end": 14131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 14118,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14118,
											"end": 14133,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 14118,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14115,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 14105,
											"end": 14133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 14105,
											"end": 14133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 14104,
											"end": 14151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 14104,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14085,
											"end": 14151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14085,
											"end": 14151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13980,
											"end": 14159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15417,
											"end": 15578,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15417,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15543,
											"end": 15547,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 15550,
											"end": 15560,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 15562,
											"end": 15569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15516,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15534,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15496,
											"end": 15534,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 15496,
											"end": 15534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15496,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15417,
											"end": 15578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15417,
											"end": 15578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15417,
											"end": 15578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 15109,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 14894,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14949,
											"end": 14961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14989,
											"end": 14999,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15004,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14989,
											"end": 15004,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15019,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 14989,
											"end": 15024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 15024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 15024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 15024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15043,
											"end": 15050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15071,
											"end": 15081,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15089,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH",
											"source": 9,
											"value": "3FD18B8500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 15035,
											"end": 15101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15035,
											"end": 15101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14937,
											"end": 15109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14937,
											"end": 15109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 15109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14894,
											"end": 15109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14318,
											"end": 14667,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 14318,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14366,
											"end": 14386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14402,
											"end": 14420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14468,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14445,
											"end": 14468,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14468,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 14445,
											"end": 14470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 14445,
											"end": 14470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14399,
											"end": 14470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14506,
											"end": 14507,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14491,
											"end": 14507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "PUSH",
											"source": 9,
											"value": "144C1D9500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 14483,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "PUSH",
											"source": 9,
											"value": "E10"
										},
										{
											"begin": 14548,
											"end": 14596,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 14548,
											"end": 14596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14567,
											"end": 14576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14564,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 14549,
											"end": 14576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 14549,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14548,
											"end": 14596,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "19ABF40E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 14540,
											"end": 14611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14647,
											"end": 14658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14388,
											"end": 14667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14388,
											"end": 14667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14318,
											"end": 14667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14318,
											"end": 14667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2040,
											"end": 2049,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 2015,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 2015,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2005,
											"end": 2068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2128,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2202,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2203,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2320,
											"end": 2325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 2302,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 2302,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2472,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2483,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 2654,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 2788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2903,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 2905,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 2885,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 2835,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 2835,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 3041,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 2919,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2992,
											"end": 3016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 2990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3017,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 2972,
											"end": 3035,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3031,
											"end": 3032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3033,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3035,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 2972,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 3041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2919,
											"end": 3041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3138,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3174,
											"end": 3179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 3147,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3047,
											"end": 3186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3315,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3320,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3404,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3285,
											"end": 3404,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3323,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 3323,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3404,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 3285,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3513,
											"end": 3520,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3502,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3468,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3468,
											"end": 3521,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 3468,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3641,
											"end": 3648,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3596,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3649,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 3596,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3766,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3755,
											"end": 3778,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3867,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3748,
											"end": 3867,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3786,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3786,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3786,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3748,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3748,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3906,
											"end": 3907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 3974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3931,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 3931,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 4001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4067,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4007,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4035,
											"end": 4038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4215,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4073,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4174,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4174,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4208,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 4174,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4156,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4347,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4221,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4304,
											"end": 4341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4341,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 4304,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4291,
											"end": 4341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4291,
											"end": 4341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4507,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4353,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4495,
											"end": 4500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4464,
											"end": 4501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4464,
											"end": 4501,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 4464,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4451,
											"end": 4501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4451,
											"end": 4501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4507,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4700,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4513,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 4687,
											"end": 4692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4628,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4693,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 4628,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4694,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 4974,
											"end": 4975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4878,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4977,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 4878,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5126,
											"end": 5152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5126,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5228,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5162,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5311,
											"end": 5313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5300,
											"end": 5309,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5287,
											"end": 5293,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5243,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5315,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 5243,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 5322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5508,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5328,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5453,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5373,
											"end": 5374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5477,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5501,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5502,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5554,
											"end": 5557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5573,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5593,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 5573,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5593,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5607,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5607,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5607,
											"end": 5627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5607,
											"end": 5627,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 5607,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5671,
											"end": 5674,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5675,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5678,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5804,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5711,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5776,
											"end": 5798,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5804,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5804,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5985,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5810,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 5888,
											"end": 5893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5871,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 5871,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5862,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5916,
											"end": 5926,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5930,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5959,
											"end": 5979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5959,
											"end": 5979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6168,
											"end": 6172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6219,
											"end": 6318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 6219,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6413,
											"end": 6422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6406,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6328,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6328,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 6328,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6709,
											"end": 6710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6694,
											"end": 6711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6641,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6722,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 6790,
											"end": 6792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6722,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6722,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6722,
											"end": 6794,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 6722,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6804,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 6872,
											"end": 6874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6804,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6804,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6804,
											"end": 6876,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 6804,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6441,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6949,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6949,
											"end": 6969,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 6949,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 6969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6944,
											"end": 6969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 6983,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7003,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6983,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7003,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7042,
											"end": 7053,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7076,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7039,
											"end": 7076,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7056,
											"end": 7074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7076,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7039,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7129,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7186,
											"end": 7206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7206,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7186,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7281,
											"end": 7292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7263,
											"end": 7293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7293,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7263,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7252,
											"end": 7293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7252,
											"end": 7293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7433,
											"end": 7440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7444,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7427,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7445,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7403,
											"end": 7404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7405,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7376,
											"end": 7459,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7353,
											"end": 7492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 7472,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 7472,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7490,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 7472,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7492,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7353,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7137,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7089,
											"end": 7499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7685,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7505,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7630,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7640,
											"end": 7655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7678,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7671,
											"end": 7672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7679,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7748,
											"end": 7768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7782,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7782,
											"end": 7802,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 7782,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7802,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7826,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 7811,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7856,
											"end": 7870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7856,
											"end": 7870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8005,
											"end": 8023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 8029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8149,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8035,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8335,
											"end": 8418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8418,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 8335,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8427,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 8516,
											"end": 8519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8427,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8427,
											"end": 8520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8427,
											"end": 8520,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 8427,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8545,
											"end": 8546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8938,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 8559,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8743,
											"end": 8746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 8908,
											"end": 8911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8765,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8765,
											"end": 8912,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 8765,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8912,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8559,
											"end": 8938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9042,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 8944,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9001,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9023,
											"end": 9035,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9013,
											"end": 9035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9013,
											"end": 9035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 9042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9131,
											"end": 9142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9172,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9200,
											"end": 9203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9196,
											"end": 9210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9361,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9222,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9306,
											"end": 9309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9301,
											"end": 9304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9295,
											"end": 9318,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9469,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 9367,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9455,
											"end": 9462,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9452,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9443,
											"end": 9448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9435,
											"end": 9463,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9425,
											"end": 9463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9425,
											"end": 9463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9367,
											"end": 9469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9621,
											"end": 9626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9589,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9589,
											"end": 9627,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9589,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9706,
											"end": 9712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 9704,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9643,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9643,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9713,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 9778,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9772,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9766,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9757,
											"end": 9773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 9722,
											"end": 9787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9787,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9722,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 9812,
											"end": 9841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9812,
											"end": 9841,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9812,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9807,
											"end": 9810,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9842,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9565,
											"end": 9848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9475,
											"end": 9848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10061,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10044,
											"end": 10062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10140,
											"end": 10141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 10072,
											"end": 10143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10072,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10221,
											"end": 10223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10210,
											"end": 10219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10206,
											"end": 10224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 10153,
											"end": 10225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10225,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10153,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10272,
											"end": 10281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10266,
											"end": 10270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10262,
											"end": 10282,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10371,
											"end": 10375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10368,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 10300,
											"end": 10376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9854,
											"end": 10383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10494,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 10389,
											"end": 10494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10487,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10458,
											"end": 10463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10488,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10389,
											"end": 10494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10620,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 10500,
											"end": 10620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10589,
											"end": 10594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 10572,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10572,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10565,
											"end": 10570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10562,
											"end": 10596,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10552,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10552,
											"end": 10614,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10600,
											"end": 10612,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10552,
											"end": 10614,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10552,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10707,
											"end": 10720,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10755,
											"end": 10760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 10729,
											"end": 10761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10626,
											"end": 10767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10849,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10773,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10809,
											"end": 10816,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10838,
											"end": 10843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 10849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10975,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10855,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10927,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 10944,
											"end": 10949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10927,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10927,
											"end": 10950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10927,
											"end": 10950,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 10927,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10920,
											"end": 10925,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10917,
											"end": 10951,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10907,
											"end": 10969,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10965,
											"end": 10966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10955,
											"end": 10967,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10907,
											"end": 10969,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 10907,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11037,
											"end": 11042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11075,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11110,
											"end": 11115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11084,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11084,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11185,
											"end": 11190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11216,
											"end": 11222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11210,
											"end": 11223,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11259,
											"end": 11264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 11232,
											"end": 11265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11232,
											"end": 11265,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11232,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11380,
											"end": 11386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11464,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11440,
											"end": 11447,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11459,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11432,
											"end": 11465,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11429,
											"end": 11549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11429,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 11429,
											"end": 11549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11468,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11468,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 11468,
											"end": 11547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11468,
											"end": 11547,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11468,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11429,
											"end": 11549,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 11429,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 11668,
											"end": 11675,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11659,
											"end": 11665,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11648,
											"end": 11657,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 11613,
											"end": 11676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11676,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 11613,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11676,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11725,
											"end": 11727,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 11806,
											"end": 11813,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11797,
											"end": 11803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 11751,
											"end": 11814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11814,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 11751,
											"end": 11814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11741,
											"end": 11814,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11741,
											"end": 11814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11696,
											"end": 11824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11863,
											"end": 11865,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11889,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 11945,
											"end": 11952,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11934,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11921,
											"end": 11943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11953,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11889,
											"end": 11953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11953,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 11889,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11879,
											"end": 11953,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11879,
											"end": 11953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12004,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12028,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12084,
											"end": 12091,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12060,
											"end": 12082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 12028,
											"end": 12092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12092,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 12028,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12092,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12144,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12168,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 12223,
											"end": 12230,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12203,
											"end": 12212,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 12199,
											"end": 12221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 12168,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12168,
											"end": 12231,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 12168,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12158,
											"end": 12231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11277,
											"end": 12248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/KipuBankV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositERC20(address,uint256)": "97feb926",
							"depositEth()": "439370b1",
							"getBalance()": "12065fe0",
							"getBalance(address)": "f8b2cb4f",
							"getBalanceInUSD()": "ef649249",
							"getBalanceInUSD(address)": "21d60805",
							"getDeposits()": "6b149d87",
							"getDeposits(address)": "94f649dd",
							"getERC20Balance(address)": "b588d225",
							"getERC20Balance(address,address)": "c3a8962c",
							"getERC20Deposits(address)": "a2abecd3",
							"getERC20Deposits(address,address)": "297beb3c",
							"getERC20Withdrawals(address)": "d2706c91",
							"getERC20Withdrawals(address,address)": "962b9bcc",
							"getWithdrawals()": "50d6c1e8",
							"getWithdrawals(address)": "3a2b643a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"s_bankCap()": "80ef10ed",
							"s_feeds()": "c77e551b",
							"s_withdrawLimit()": "7f86ee43",
							"setFeeds(address)": "7dc532c5",
							"transferOwnership(address)": "f2fde38b",
							"withdrawERC20(address,uint256)": "a1db9782",
							"withdrawEth(uint256)": "c311d049"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_banckCap\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20DepositNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20ExtractionNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExtractionNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"errorData\",\"type\":\"bytes\"}],\"name\":\"ExtractionReverted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OracleCompromised\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StalePrice\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"oldFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"newFeed\",\"type\":\"address\"}],\"name\":\"ChainlinkFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Extracted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Extracted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposits_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposits_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposits_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposits_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawals_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getERC20Withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawals_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawals_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawals_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_bankCap\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_feeds\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_withdrawLimit\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feed\",\"type\":\"address\"}],\"name\":\"setFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Erik Borgnia\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"depositERC20(address,uint256)\":{\"params\":{\"_amount\":\"La cantidad a depositar de USDC\",\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a depositar\"}},\"getBalance(address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"user_\":\"Usuario que se quiere auditar\"}},\"getBalanceInUSD(address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"user_\":\"Usuario que se quiere auditar\"}},\"getDeposits(address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"user_\":\"Usuario que se quiere auditar\"}},\"getERC20Balance(address)\":{\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\"}},\"getERC20Balance(address,address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\",\"user_\":\"Usuario que se quiere auditar\"}},\"getERC20Deposits(address)\":{\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\"}},\"getERC20Deposits(address,address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\",\"user_\":\"Usuario que se quiere auditar\"}},\"getERC20Withdrawals(address)\":{\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\"}},\"getERC20Withdrawals(address,address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a consultar\",\"user_\":\"Usuario que se quiere auditar\"}},\"getWithdrawals(address)\":{\"details\":\"Esta funci\\u00f3n garantiza que toda la informaci\\u00f3n es auditable\",\"params\":{\"user_\":\"Usuario que se quiere auditar\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeds(address)\":{\"details\":\"S\\u00f3lo puede ser llamada por el propietario\",\"params\":{\"_feed\":\"La nueva direcci\\u00f3n del Price Feed\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawERC20(address,uint256)\":{\"details\":\"S\\u00f3lo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\",\"params\":{\"_amount\":\"Cantidad que se quiere extraer. Debe ser <= al balance y al l\\u00edmite de extracci\\u00f3n\",\"_tokenAddress\":\"La direcci\\u00f3n del contrato del token a extraer\"}},\"withdrawEth(uint256)\":{\"details\":\"S\\u00f3lo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\",\"params\":{\"_amount\":\"Cantidad que se quiere extraer. Debe ser <= al balance y al l\\u00edmite de extracci\\u00f3n\"}}},\"title\":\"KipuBank V3\",\"version\":1},\"userdoc\":{\"errors\":{\"DepositNotAllowed(address,uint256)\":[{\"notice\":\"Error emitido cuando se intenta depositar una cantidad inv\\u00e1lida (=0, o la cuenta superar\\u00eda el bankCap)\"}],\"ERC20DepositNotAllowed(address,address,uint256)\":[{\"notice\":\"Error emitido cuando se intenta depositar una cantidad inv\\u00e1lida de un token ERC20 (=0)\"}],\"ERC20ExtractionNotAllowed(address,address,uint256)\":[{\"notice\":\"Error emitido cuando se intenta extraer una cantidad inv\\u00e1lda de un token ERC20 (<=0, >saldo)\"}],\"ExtractionNotAllowed(address,uint256)\":[{\"notice\":\"Error emitido cuando se intenta extraer una cantidad inv\\u00e1lda (<=0, >saldo, >l\\u00edmite)\"}],\"ExtractionReverted(address,uint256,bytes)\":[{\"notice\":\"Error emitido cuando falla una extracci\\u00f3n\"}],\"OracleCompromised()\":[{\"notice\":\"Error emitido cuando falla el or\\u00e1culo\"}],\"StalePrice()\":[{\"notice\":\"Error emitido cuando la \\u00faltima actualizaci\\u00f3n del or\\u00e1culo supera el heartbeat\"}]},\"events\":{\"ChainlinkFeedUpdated(address,address)\":{\"notice\":\"Evento emitido al extraer USDC exitosamente\"},\"Deposited(address,uint256)\":{\"notice\":\"Evento emitido al depositar exitosamente\"},\"ERC20Deposited(address,address,uint256)\":{\"notice\":\"Evento emitido al depositar USDC exitosamente\"},\"ERC20Extracted(address,address,uint256)\":{\"notice\":\"Evento emitido al extraer USDC exitosamente\"},\"Extracted(address,uint256)\":{\"notice\":\"Evento emitido al extraer exitosamente\"}},\"kind\":\"user\",\"methods\":{\"depositERC20(address,uint256)\":{\"notice\":\"Funci\\u00f3n externa para recibir dep\\u00f3sitos de tokens ERC20Emite un evento cuando la transacci\\u00f3n es exitosa.\"},\"depositEth()\":{\"notice\":\"Funci\\u00f3n para hacer un dep\\u00f3sitoS\\u00f3lo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\"},\"getBalance()\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver el balance de ETH que uno mismo tiene\"},\"getBalance(address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver el balance de ETH que alg\\u00fan usuario tiene\"},\"getBalanceInUSD()\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver el balance de ETH que uno mismo tiene en USD\"},\"getBalanceInUSD(address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver el balance de ETH que alg\\u00fan usuario tiene en USD\"},\"getDeposits()\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver la cantidad de dep\\u00f3sitos de ETH que uno hizo\"},\"getDeposits(address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver la cantidad de dep\\u00f3sitos de ETH que alg\\u00fan usuario hizo\"},\"getERC20Balance(address)\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver el balance que uno mismo tiene de un token ERC20 espec\\u00edfico\"},\"getERC20Balance(address,address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver el balance que alg\\u00fan usuario tiene en alg\\u00fan token ERC20\"},\"getERC20Deposits(address)\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver la cantidad de dep\\u00f3sitos que uno hizo de un token ERC20 espec\\u00edfico\"},\"getERC20Deposits(address,address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver la cantidad de dep\\u00f3sitos que alg\\u00fan usuario hizo de alg\\u00fan token ERC20\"},\"getERC20Withdrawals(address)\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver la cantidad de extracciones que uno hizo de un token ERC20 espec\\u00edfico\"},\"getERC20Withdrawals(address,address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver la cantidad de extracciones que alg\\u00fan usuario hizo de alg\\u00fan token ERC20\"},\"getWithdrawals()\":{\"notice\":\"Funci\\u00f3n p\\u00fablica para ver la cantidad de extracciones de ETH que uno hizo\"},\"getWithdrawals(address)\":{\"notice\":\"Funci\\u00f3n onlyOwner para ver la cantidad de extracciones de ETH que alg\\u00fan usuario hizo\"},\"s_bankCap()\":{\"notice\":\"L\\u00edmite de balance por cuenta\"},\"s_feeds()\":{\"notice\":\"variable para almacenar la direcci\\u00f3n del Chainlink Feed\"},\"s_withdrawLimit()\":{\"notice\":\"L\\u00edmite de extracci\\u00f3n por cuenta\"},\"setFeeds(address)\":{\"notice\":\"Funci\\u00f3n para actualizar el Chainlink Price Feed\"},\"withdrawERC20(address,uint256)\":{\"notice\":\"Funci\\u00f3n para hacer un dep\\u00f3sito\"},\"withdrawEth(uint256)\":{\"notice\":\"Funci\\u00f3n para hacer un dep\\u00f3sito\"}},\"notice\":\"Contrato para el TP Final del M\\u00f3dulo 4 del curso de EthKipuEs una simulaci\\u00f3n de banco con dep\\u00f3sitos y extracciones, auditable por el due\\u00f1o del contrato, que adem\\u00e1s incorpora USDC al que se hizo previamente\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KipuBankV3.sol\":\"KipuBankV3\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/KipuBankV3.sol\":{\"keccak256\":\"0xe9fbe26a3fccdbcab86d5c092a3f1772fb21e54129d6196701966df88d041ca0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c836cc06e0667956b4198d7abdafc3b3c5a2bfc785bf42f5704fbe6b885d0\",\"dweb:/ipfs/QmPpfjmBTLNC82L8N3ExRNsLjJANxKKqTRvGFs22Kq7tXH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "contracts/KipuBankV3.sol:KipuBankV3",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 900,
								"contract": "contracts/KipuBankV3.sol:KipuBankV3",
								"label": "s_feeds",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 907,
								"contract": "contracts/KipuBankV3.sol:KipuBankV3",
								"label": "s_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 914,
								"contract": "contracts/KipuBankV3.sol:KipuBankV3",
								"label": "s_deposits",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint32))"
							},
							{
								"astId": 921,
								"contract": "contracts/KipuBankV3.sol:KipuBankV3",
								"label": "s_withdrawals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint32))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint32))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint32))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint32)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_address,t_uint32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"errors": {
							"DepositNotAllowed(address,uint256)": [
								{
									"notice": "Error emitido cuando se intenta depositar una cantidad inválida (=0, o la cuenta superaría el bankCap)"
								}
							],
							"ERC20DepositNotAllowed(address,address,uint256)": [
								{
									"notice": "Error emitido cuando se intenta depositar una cantidad inválida de un token ERC20 (=0)"
								}
							],
							"ERC20ExtractionNotAllowed(address,address,uint256)": [
								{
									"notice": "Error emitido cuando se intenta extraer una cantidad inválda de un token ERC20 (<=0, >saldo)"
								}
							],
							"ExtractionNotAllowed(address,uint256)": [
								{
									"notice": "Error emitido cuando se intenta extraer una cantidad inválda (<=0, >saldo, >límite)"
								}
							],
							"ExtractionReverted(address,uint256,bytes)": [
								{
									"notice": "Error emitido cuando falla una extracción"
								}
							],
							"OracleCompromised()": [
								{
									"notice": "Error emitido cuando falla el oráculo"
								}
							],
							"StalePrice()": [
								{
									"notice": "Error emitido cuando la última actualización del oráculo supera el heartbeat"
								}
							]
						},
						"events": {
							"ChainlinkFeedUpdated(address,address)": {
								"notice": "Evento emitido al extraer USDC exitosamente"
							},
							"Deposited(address,uint256)": {
								"notice": "Evento emitido al depositar exitosamente"
							},
							"ERC20Deposited(address,address,uint256)": {
								"notice": "Evento emitido al depositar USDC exitosamente"
							},
							"ERC20Extracted(address,address,uint256)": {
								"notice": "Evento emitido al extraer USDC exitosamente"
							},
							"Extracted(address,uint256)": {
								"notice": "Evento emitido al extraer exitosamente"
							}
						},
						"kind": "user",
						"methods": {
							"depositERC20(address,uint256)": {
								"notice": "Función externa para recibir depósitos de tokens ERC20Emite un evento cuando la transacción es exitosa."
							},
							"depositEth()": {
								"notice": "Función para hacer un depósitoSólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap"
							},
							"getBalance()": {
								"notice": "Función pública para ver el balance de ETH que uno mismo tiene"
							},
							"getBalance(address)": {
								"notice": "Función onlyOwner para ver el balance de ETH que algún usuario tiene"
							},
							"getBalanceInUSD()": {
								"notice": "Función pública para ver el balance de ETH que uno mismo tiene en USD"
							},
							"getBalanceInUSD(address)": {
								"notice": "Función onlyOwner para ver el balance de ETH que algún usuario tiene en USD"
							},
							"getDeposits()": {
								"notice": "Función pública para ver la cantidad de depósitos de ETH que uno hizo"
							},
							"getDeposits(address)": {
								"notice": "Función onlyOwner para ver la cantidad de depósitos de ETH que algún usuario hizo"
							},
							"getERC20Balance(address)": {
								"notice": "Función pública para ver el balance que uno mismo tiene de un token ERC20 específico"
							},
							"getERC20Balance(address,address)": {
								"notice": "Función onlyOwner para ver el balance que algún usuario tiene en algún token ERC20"
							},
							"getERC20Deposits(address)": {
								"notice": "Función pública para ver la cantidad de depósitos que uno hizo de un token ERC20 específico"
							},
							"getERC20Deposits(address,address)": {
								"notice": "Función onlyOwner para ver la cantidad de depósitos que algún usuario hizo de algún token ERC20"
							},
							"getERC20Withdrawals(address)": {
								"notice": "Función pública para ver la cantidad de extracciones que uno hizo de un token ERC20 específico"
							},
							"getERC20Withdrawals(address,address)": {
								"notice": "Función onlyOwner para ver la cantidad de extracciones que algún usuario hizo de algún token ERC20"
							},
							"getWithdrawals()": {
								"notice": "Función pública para ver la cantidad de extracciones de ETH que uno hizo"
							},
							"getWithdrawals(address)": {
								"notice": "Función onlyOwner para ver la cantidad de extracciones de ETH que algún usuario hizo"
							},
							"s_bankCap()": {
								"notice": "Límite de balance por cuenta"
							},
							"s_feeds()": {
								"notice": "variable para almacenar la dirección del Chainlink Feed"
							},
							"s_withdrawLimit()": {
								"notice": "Límite de extracción por cuenta"
							},
							"setFeeds(address)": {
								"notice": "Función para actualizar el Chainlink Price Feed"
							},
							"withdrawERC20(address,uint256)": {
								"notice": "Función para hacer un depósito"
							},
							"withdrawEth(uint256)": {
								"notice": "Función para hacer un depósito"
							}
						},
						"notice": "Contrato para el TP Final del Módulo 4 del curso de EthKipuEs una simulación de banco con depósitos y extracciones, auditable por el dueño del contrato, que además incorpora USDC al que se hizo previamente",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							855
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 856,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 855,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								855
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC165": [
							867
						],
						"IERC20": [
							361
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 284,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 196,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 276,
							"sourceUnit": 280,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 198,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 361,
										"src": "590:6:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 867,
										"src": "598:7:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275,
								867,
								361
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 275,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 275,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 275,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 275,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 275,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 275,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 280,
							"sourceUnit": 868,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 278,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 867,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 284,
							"sourceUnit": 362,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 282,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 285,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 295,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 304,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 361,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 361,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 361,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 361,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 361,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 361,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 362,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								295,
								304
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							275
						],
						"IERC20": [
							361
						],
						"SafeERC20": [
							825
						]
					},
					"id": 826,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 362,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 826,
							"sourceUnit": 276,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 366,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 825,
							"linearizedBaseContracts": [
								825
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 373,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 382,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 397,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 399,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 393,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 825,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 423,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 425,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 426,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 408,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 825,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 450,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 328,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 452,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 448,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 446,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 445,
												"id": 457,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 361,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 825,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 478,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 480,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 481,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 476,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 474,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 473,
												"id": 486,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 361,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 825,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 505,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$825",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 503,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 501,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 512,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 490,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 361,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 825,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															531
														],
														"declarations": [
															{
																"constant": false,
																"id": 531,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 560,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 540,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$825",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 532,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 338,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 542,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 551,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 550,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 547,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 544,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 382,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 549,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 554,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$361",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 521,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 361,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 825,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 573,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 577,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 348,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 579,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 581,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 575,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 585,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 586,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$361",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 584,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 593,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$361",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 348,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 595,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 568,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 591,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 602,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 603,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$361",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 601,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 564,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 361,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 825,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 622,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 638,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 226,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 649,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 648,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 644,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 642,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 641,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 647,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 627,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 611,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 275,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 825,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 667,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 682,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 683,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 684,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 685,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 252,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 696,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 695,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 691,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 689,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 688,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 694,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 673,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 656,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 674,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 675,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 660,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 672,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 678,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 654,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 275,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 825,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 712,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 728,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$275",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 274,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 739,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 738,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$275",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 732,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 731,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 737,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 740,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 718,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 719,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 720,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$275",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 717,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$275",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 275,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 275,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$275",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 825,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 746,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 769,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 763,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$361",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 761,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 776,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$361",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 361,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 825,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 798,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 801,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 787,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 803,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 805,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 810,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 787,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$361",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 808,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 820,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 793,
												"id": 822,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$361",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 785,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 361,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 361,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$361",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 825,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 826,
							"src": "698:9376:6",
							"usedErrors": [
								373,
								382
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							855
						]
					},
					"id": 856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 827,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 828,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 855,
							"linearizedBaseContracts": [
								855
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 833,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 835,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 855,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 842,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 841,
												"id": 844,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 855,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 850,
												"id": 852,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 855,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 856,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							867
						]
					},
					"id": 868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 857,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 858,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 860,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 867,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 868,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"contracts/KipuBankV3.sol": {
				"ast": {
					"absolutePath": "contracts/KipuBankV3.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"IERC20": [
							361
						],
						"KipuBankV3": [
							1743
						],
						"Ownable": [
							193
						],
						"SafeERC20": [
							825
						]
					},
					"id": 1744,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 869,
							"literals": [
								"solidity",
								"0.8",
								".30"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 194,
							"src": "135:67:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 870,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 193,
										"src": "143:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 826,
							"src": "277:82:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 872,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 825,
										"src": "285:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 875,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 362,
							"src": "437:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 874,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "445:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1744,
							"sourceUnit": 46,
							"src": "509:112:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 876,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "517:21:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 879,
										"name": "Ownable",
										"nameLocations": [
											"942:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "942:7:9"
									},
									"id": 880,
									"nodeType": "InheritanceSpecifier",
									"src": "942:7:9"
								}
							],
							"canonicalName": "KipuBankV3",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 878,
								"nodeType": "StructuredDocumentation",
								"src": "625:292:9",
								"text": " @title KipuBank V3\n @author Erik Borgnia\n @notice Contrato para el TP Final del Módulo 4 del curso de EthKipu\n @notice Es una simulación de banco con depósitos y extracciones, auditable por el dueño del contrato, que además incorpora USDC al que se hizo previamente"
							},
							"fullyImplemented": true,
							"id": 1743,
							"linearizedBaseContracts": [
								1743,
								193,
								855
							],
							"name": "KipuBankV3",
							"nameLocation": "928:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 884,
									"libraryName": {
										"id": 881,
										"name": "SafeERC20",
										"nameLocations": [
											"1051:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 825,
										"src": "1051:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "1045:27:9",
									"typeName": {
										"id": 883,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 882,
											"name": "IERC20",
											"nameLocations": [
												"1065:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 361,
											"src": "1065:6:9"
										},
										"referencedDeclaration": 361,
										"src": "1065:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$361",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1157:80:9",
										"text": "@notice variable constante para almacenar el latido (heartbeat) del Data Feed"
									},
									"id": 888,
									"mutability": "constant",
									"name": "ORACLE_HEARTBEAT",
									"nameLocation": "1259:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "1243:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 886,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1243:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 887,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1278:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1289:67:9",
										"text": "@notice variable constante para almacenar el factor de decimales"
									},
									"id": 896,
									"mutability": "constant",
									"name": "DECIMAL_FACTOR",
									"nameLocation": "1379:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "1362:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1362:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 895,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 891,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1396:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											},
											"id": 894,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 892,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1400:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3230",
												"id": 893,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1406:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_20_by_1",
													"typeString": "int_const 20"
												},
												"value": "20"
											},
											"src": "1400:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000000000000000_by_1",
												"typeString": "int_const 100000000000000000000"
											}
										},
										"src": "1396:12:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1417:67:9",
										"text": "@notice variable para almacenar la dirección del Chainlink Feed"
									},
									"functionSelector": "c77e551b",
									"id": 900,
									"mutability": "mutable",
									"name": "s_feeds",
									"nameLocation": "1519:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "1490:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 899,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 898,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"1490:21:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "1490:21:9"
										},
										"referencedDeclaration": 45,
										"src": "1490:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "1680:85:9",
										"text": "@notice Mapping que mantienen el balance de tokens ERC20 de las distintas cuentas "
									},
									"id": 907,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "1839:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "1771:78:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 906,
										"keyName": "user",
										"keyNameLocation": "1788:4:9",
										"keyType": {
											"id": 902,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1780:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1771:67:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 905,
											"keyName": "token",
											"keyNameLocation": "1813:5:9",
											"keyType": {
												"id": 903,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1805:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1796:41:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "amount",
											"valueNameLocation": "1830:6:9",
											"valueType": {
												"id": 904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1822:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1856:99:9",
										"text": "@notice Mapping que mantienen la cantidad de depósitos de tokens ERC20 de las distintas cuentas"
									},
									"id": 914,
									"mutability": "mutable",
									"name": "s_deposits",
									"nameLocation": "2029:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "1961:78:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
										"typeString": "mapping(address => mapping(address => uint32))"
									},
									"typeName": {
										"id": 913,
										"keyName": "user",
										"keyNameLocation": "1978:4:9",
										"keyType": {
											"id": 909,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1970:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1961:67:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
											"typeString": "mapping(address => mapping(address => uint32))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 912,
											"keyName": "token",
											"keyNameLocation": "2003:5:9",
											"keyType": {
												"id": 910,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1995:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1986:41:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
												"typeString": "mapping(address => uint32)"
											},
											"valueName": "counter",
											"valueNameLocation": "2019:7:9",
											"valueType": {
												"id": 911,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2012:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2046:102:9",
										"text": "@notice Mapping que mantienen la cantidad de extracciones de tokens ERC20  de las distintas cuentas"
									},
									"id": 921,
									"mutability": "mutable",
									"name": "s_withdrawals",
									"nameLocation": "2221:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "2154:80:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
										"typeString": "mapping(address => mapping(address => uint32))"
									},
									"typeName": {
										"id": 920,
										"keyName": "user",
										"keyNameLocation": "2171:4:9",
										"keyType": {
											"id": 916,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2163:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2154:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
											"typeString": "mapping(address => mapping(address => uint32))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 919,
											"keyName": "token",
											"keyNameLocation": "2196:5:9",
											"keyType": {
												"id": 917,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2188:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2179:40:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
												"typeString": "mapping(address => uint32)"
											},
											"valueName": "amount",
											"valueNameLocation": "2212:6:9",
											"valueType": {
												"id": 918,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2205:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "2247:40:9",
										"text": "@notice Límite de balance por cuenta"
									},
									"functionSelector": "80ef10ed",
									"id": 924,
									"mutability": "immutable",
									"name": "s_bankCap",
									"nameLocation": "2318:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "2293:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 923,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "2293:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "2334:44:9",
										"text": "@notice Límite de extracción por cuenta"
									},
									"functionSelector": "7f86ee43",
									"id": 930,
									"mutability": "immutable",
									"name": "s_withdrawLimit",
									"nameLocation": "2409:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1743,
									"src": "2384:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 926,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "2384:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 927,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2427:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 928,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2431:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "2427:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2748:51:9",
										"text": "@notice Evento emitido al depositar exitosamente"
									},
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 937,
									"name": "Deposited",
									"nameLocation": "2811:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2829:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2821:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2840:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2835:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2835:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:27:9"
									},
									"src": "2805:43:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:49:9",
										"text": "@notice Evento emitido al extraer exitosamente"
									},
									"eventSelector": "69c169e5c85af54e1ca7e16608ccc812437821387924fb3353a7d053264ddaa0",
									"id": 944,
									"name": "Extracted",
									"nameLocation": "2915:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2933:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2925:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2942:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2937:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2937:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2924:25:9"
									},
									"src": "2909:41:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "2956:56:9",
										"text": "@notice Evento emitido al depositar USDC exitosamente"
									},
									"eventSelector": "e33e9822e3317b004d587136bab2627ea1ecfbba4eb79abddd0a56cfdd09c0e1",
									"id": 953,
									"name": "ERC20Deposited",
									"nameLocation": "3024:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3047:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3039:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3061:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3053:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3080:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3075:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3038:49:9"
									},
									"src": "3018:70:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "3094:54:9",
										"text": "@notice Evento emitido al extraer USDC exitosamente"
									},
									"eventSelector": "d0164496e26f9675acaea59fb065313e45d71d1d3e09d3681765773cd4aa1918",
									"id": 962,
									"name": "ERC20Extracted",
									"nameLocation": "3160:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3183:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3175:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3195:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3187:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3214:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3209:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3209:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:47:9"
									},
									"src": "3154:68:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "3228:54:9",
										"text": "@notice Evento emitido al extraer USDC exitosamente"
									},
									"eventSelector": "3be680563c528780d5a9cd763a27b4a48ab5f9dc10e4083a2fa55b6fc5ff33e6",
									"id": 971,
									"name": "ChainlinkFeedUpdated",
									"nameLocation": "3294:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFeed",
												"nameLocation": "3337:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3315:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
													"typeString": "contract AggregatorV3Interface"
												},
												"typeName": {
													"id": 965,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 964,
														"name": "AggregatorV3Interface",
														"nameLocations": [
															"3315:21:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 45,
														"src": "3315:21:9"
													},
													"referencedDeclaration": 45,
													"src": "3315:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeed",
												"nameLocation": "3368:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3346:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
													"typeString": "contract AggregatorV3Interface"
												},
												"typeName": {
													"id": 968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 967,
														"name": "AggregatorV3Interface",
														"nameLocations": [
															"3346:21:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 45,
														"src": "3346:21:9"
													},
													"referencedDeclaration": 45,
													"src": "3346:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:62:9"
									},
									"src": "3288:89:9"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3385:115:9",
										"text": "@notice Error emitido cuando se intenta depositar una cantidad inválida (=0, o la cuenta superaría el bankCap)"
									},
									"errorSelector": "acb26d8e",
									"id": 978,
									"name": "DepositNotAllowed",
									"nameLocation": "3512:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3538:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3530:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3530:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3547:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3542:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3542:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:25:9"
									},
									"src": "3506:49:9"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "3561:96:9",
										"text": "@notice Error emitido cuando se intenta extraer una cantidad inválda (<=0, >saldo, >límite)"
									},
									"errorSelector": "f6074107",
									"id": 985,
									"name": "ExtractionNotAllowed",
									"nameLocation": "3669:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3698:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3690:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3707:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3702:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3702:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:25:9"
									},
									"src": "3663:52:9"
								},
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "3721:53:9",
										"text": "@notice Error emitido cuando falla una extracción"
									},
									"errorSelector": "3fd18b85",
									"id": 994,
									"name": "ExtractionReverted",
									"nameLocation": "3786:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3813:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3805:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3822:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3817:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3817:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "errorData",
												"nameLocation": "3836:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "3830:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3830:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:42:9"
									},
									"src": "3780:67:9"
								},
								{
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "3853:98:9",
										"text": "@notice Error emitido cuando se intenta depositar una cantidad inválida de un token ERC20 (=0)"
									},
									"errorSelector": "30db0dc0",
									"id": 1003,
									"name": "ERC20DepositNotAllowed",
									"nameLocation": "3963:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3994:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3986:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4006:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "3998:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4025:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "4020:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4020:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:47:9"
									},
									"src": "3957:76:9"
								},
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "4039:104:9",
										"text": "@notice Error emitido cuando se intenta extraer una cantidad inválda de un token ERC20 (<=0, >saldo)"
									},
									"errorSelector": "b4e4601d",
									"id": 1012,
									"name": "ERC20ExtractionNotAllowed",
									"nameLocation": "4155:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4189:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "4181:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4181:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4201:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "4193:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4220:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "4215:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4215:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4180:47:9"
									},
									"src": "4149:79:9"
								},
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "4234:49:9",
										"text": "@notice Error emitido cuando falla el oráculo"
									},
									"errorSelector": "144c1d95",
									"id": 1015,
									"name": "OracleCompromised",
									"nameLocation": "4295:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4312:2:9"
									},
									"src": "4289:26:9"
								},
								{
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "4321:90:9",
										"text": "@notice Error emitido cuando la última actualización del oráculo supera el heartbeat"
									},
									"errorSelector": "19abf40e",
									"id": 1018,
									"name": "StalePrice",
									"nameLocation": "4423:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:9"
									},
									"src": "4417:19:9"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "4673:89:9",
										"statements": [
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "s_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "4684:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1030,
														"name": "_banckCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "4696:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "4684:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "4684:21:9"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "s_feeds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "4716:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1035,
																"name": "_feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "4748:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1034,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4726:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4726:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "4716:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "4716:38:9"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1025,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4661:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4665:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4661:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1027,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1024,
												"name": "Ownable",
												"nameLocations": [
													"4653:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "4653:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4653:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_banckCap",
												"nameLocation": "4627:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4619:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1019,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_feed",
												"nameLocation": "4646:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4638:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:34:9"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4673:0:9"
									},
									"scope": 1743,
									"src": "4607:155:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "4960:31:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1044,
														"name": "depositEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "4971:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "4971:12:9"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "4770:157:9",
										"text": "@notice Función receive para manejar depósitos directos\n@notice Esto garantiza la consistencia con las interacciones del contrato"
									},
									"id": 1048,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4940:2:9"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4960:0:9"
									},
									"scope": 1743,
									"src": "4933:58:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "5197:365:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1053,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5216:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5220:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5216:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5228:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5216:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1058,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5249:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5253:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5249:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1060,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5260:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5264:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5260:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1057,
																"name": "DepositNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5231:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5231:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5208:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5208:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "5208:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1066,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5290:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5294:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5290:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1068,
																			"name": "s_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "5300:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1071,
																		"indexExpression": {
																			"expression": {
																				"id": 1069,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5311:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5315:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5311:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5300:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1076,
																	"indexExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5331:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5323:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1072,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5323:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5323:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5300:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5290:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1078,
																"name": "s_bankCap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "5338:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "5290:57:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1081,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5367:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5371:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5367:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1083,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5378:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5382:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5378:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1080,
																"name": "DepositNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5349:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5349:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5282:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "5282:107:9"
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1088,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1095,
															"indexExpression": {
																"expression": {
																	"id": 1089,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5413:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5417:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5413:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5402:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1096,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5433:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5425:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5425:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5425:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5402:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1097,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5440:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5444:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5440:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5402:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "5402:47:9"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5460:36:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1101,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "5460:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1108,
															"indexExpression": {
																"expression": {
																	"id": 1102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5471:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5475:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5471:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5460:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5491:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5483:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5483:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5483:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5460:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "5460:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1113,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5532:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5536:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5532:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1115,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5544:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5548:5:9",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5544:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5522:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "EmitStatement",
												"src": "5517:37:9"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "4999:155:9",
										"text": "@notice Función para hacer un depósito\n@notice Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap"
									},
									"functionSelector": "439370b1",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositEth",
									"nameLocation": "5169:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5179:2:9"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5197:0:9"
									},
									"scope": 1743,
									"src": "5160:402:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "5944:342:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "5963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5973:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5963:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5994:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5998:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5994:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1135,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "6005:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1132,
																"name": "DepositNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "5976:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5976:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5955:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5955:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "5955:59:9"
											},
											{
												"expression": {
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1139,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "6025:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1143,
															"indexExpression": {
																"expression": {
																	"id": 1140,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6036:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6040:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6025:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1142,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "6048:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6025:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1145,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "6066:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6025:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "6025:48:9"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6084:39:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1148,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "6084:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1152,
															"indexExpression": {
																"expression": {
																	"id": 1149,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6095:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6099:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6095:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6084:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1153,
														"indexExpression": {
															"id": 1151,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "6107:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6084:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "6084:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6156:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6160:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6156:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "6168:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "6183:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "ERC20Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "6141:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6141:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "6136:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1167,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6243:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6247:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6243:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1171,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6263:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV3_$1743",
																		"typeString": "contract KipuBankV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV3_$1743",
																		"typeString": "contract KipuBankV3"
																	}
																],
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6255:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1169,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6255:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6255:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "6270:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1164,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "6211:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1163,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "6204:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6204:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6226:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "6204:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6204:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "6204:74:9"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "5570:297:9",
										"text": "@notice Función externa para recibir depósitos de tokens ERC20\n@notice Emite un evento cuando la transacción es exitosa.\n@param _tokenAddress La dirección del contrato del token a depositar\n@param _amount La cantidad a depositar de USDC"
									},
									"functionSelector": "97feb926",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositERC20",
									"nameLocation": "5882:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "5903:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "5895:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5895:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5926:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "5918:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5894:40:9"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5944:0:9"
									},
									"scope": 1743,
									"src": "5873:413:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "6453:64:9",
										"statements": [
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "6464:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "6475:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"expression": {
																	"id": 1185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6486:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6490:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6486:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6475:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1192,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6506:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6498:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6498:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6498:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6475:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6464:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "6464:45:9"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "6294:94:9",
										"text": "@notice Función pública para ver el balance de ETH que uno mismo tiene"
									},
									"functionSelector": "12065fe0",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "6403:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6413:2:9"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "6443:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "6438:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6438:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6437:15:9"
									},
									"scope": 1743,
									"src": "6394:123:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "6694:81:9",
										"statements": [
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1202,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "6705:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"baseExpression": {
																		"id": 1204,
																		"name": "s_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "6732:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1207,
																	"indexExpression": {
																		"expression": {
																			"id": 1205,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6743:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6747:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6743:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6732:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1212,
																"indexExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6755:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1208,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6755:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6755:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6732:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1203,
															"name": "convertEthInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "6716:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6716:51:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6705:62:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "6705:62:9"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "6523:101:9",
										"text": "@notice Función pública para ver el balance de ETH que uno mismo tiene en USD"
									},
									"functionSelector": "ef649249",
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceInUSD",
									"nameLocation": "6639:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6654:2:9"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "6684:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "6679:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6679:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6678:15:9"
									},
									"scope": 1743,
									"src": "6630:145:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "6950:65:9",
										"statements": [
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "deposits_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "6961:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1224,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "6973:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1227,
															"indexExpression": {
																"expression": {
																	"id": 1225,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6984:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6988:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6984:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6973:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1232,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7004:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6996:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6996:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6996:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6973:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "6961:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "6961:46:9"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "6781:102:9",
										"text": "@notice Función pública para ver la cantidad de depósitos de ETH que uno hizo"
									},
									"functionSelector": "6b149d87",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeposits",
									"nameLocation": "6898:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6909:2:9"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "deposits_",
												"nameLocation": "6939:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "6934:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6934:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6933:16:9"
									},
									"scope": 1743,
									"src": "6889:126:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "7198:71:9",
										"statements": [
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "withdrawals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "7209:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1243,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "7224:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1246,
															"indexExpression": {
																"expression": {
																	"id": 1244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7238:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7242:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7238:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7224:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1251,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7258:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7250:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7250:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7250:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7224:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "7209:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "7209:52:9"
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "7021:104:9",
										"text": "@notice Función pública para ver la cantidad de extracciones de ETH que uno hizo"
									},
									"functionSelector": "50d6c1e8",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWithdrawals",
									"nameLocation": "7140:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7154:2:9"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "withdrawals_",
												"nameLocation": "7184:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "7179:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7179:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7178:19:9"
									},
									"scope": 1743,
									"src": "7131:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "7563:67:9",
										"statements": [
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1263,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "7574:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1264,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "7585:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1267,
															"indexExpression": {
																"expression": {
																	"id": 1265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7596:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7600:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7596:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7585:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1269,
														"indexExpression": {
															"id": 1268,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7608:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7585:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7574:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "7574:48:9"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "7275:197:9",
										"text": "@notice Función pública para ver el balance que uno mismo tiene de un token ERC20 específico\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "b588d225",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20Balance",
									"nameLocation": "7487:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "7511:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "7503:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7502:23:9"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "7553:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "7548:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7548:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7547:15:9"
									},
									"scope": 1743,
									"src": "7478:152:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "7934:68:9",
										"statements": [
											{
												"expression": {
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1281,
														"name": "deposits_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "7945:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1282,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "7957:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1285,
															"indexExpression": {
																"expression": {
																	"id": 1283,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7968:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7972:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7968:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7957:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1287,
														"indexExpression": {
															"id": 1286,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7980:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7957:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "7945:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "7945:49:9"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "7636:205:9",
										"text": "@notice Función pública para ver la cantidad de depósitos que uno hizo de un token ERC20 específico\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "a2abecd3",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20Deposits",
									"nameLocation": "7856:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "7881:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "7873:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7872:23:9"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "deposits_",
												"nameLocation": "7923:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "7918:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7918:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7917:16:9"
									},
									"scope": 1743,
									"src": "7847:155:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "8314:74:9",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1299,
														"name": "withdrawals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "8325:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1300,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "8340:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1303,
															"indexExpression": {
																"expression": {
																	"id": 1301,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8354:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8358:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8354:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8340:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1305,
														"indexExpression": {
															"id": 1304,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "8366:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8340:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "8325:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "8325:55:9"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "8008:207:9",
										"text": "@notice Función pública para ver la cantidad de extracciones que uno hizo de un token ERC20 específico\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "d2706c91",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20Withdrawals",
									"nameLocation": "8230:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "8258:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "8250:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8250:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8249:23:9"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "withdrawals_",
												"nameLocation": "8300:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "8295:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8295:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8294:19:9"
									},
									"scope": 1743,
									"src": "8221:167:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "8811:59:9",
										"statements": [
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1319,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "8822:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1320,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "8833:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1322,
															"indexExpression": {
																"id": 1321,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "8844:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8833:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1327,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8859:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8851:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1323,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8851:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8851:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8833:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8822:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "8822:40:9"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "8499:224:9",
										"text": "@notice Función onlyOwner para ver el balance de ETH que algún usuario tiene\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar"
									},
									"functionSelector": "f8b2cb4f",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1314,
												"name": "onlyOwner",
												"nameLocations": [
													"8773:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "8773:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8773:9:9"
										}
									],
									"name": "getBalance",
									"nameLocation": "8738:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "8757:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "8749:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8749:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8748:15:9"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "8801:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "8796:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8796:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8795:15:9"
									},
									"scope": 1743,
									"src": "8729:141:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "9184:76:9",
										"statements": [
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1339,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "9195:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"baseExpression": {
																	"baseExpression": {
																		"id": 1341,
																		"name": "s_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "9222:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1343,
																	"indexExpression": {
																		"id": 1342,
																		"name": "user_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "9233:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9222:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1348,
																"indexExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9248:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9240:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1344,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9240:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9240:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9222:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1340,
															"name": "convertEthInUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "9206:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9206:46:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9195:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "9195:57:9"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "8870:231:9",
										"text": "@notice Función onlyOwner para ver el balance de ETH que algún usuario tiene en USD\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar"
									},
									"functionSelector": "21d60805",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceInUSD",
									"nameLocation": "9116:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "9140:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "9132:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9132:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9131:15:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "9174:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "9169:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9169:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9168:15:9"
									},
									"scope": 1743,
									"src": "9107:153:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "9594:60:9",
										"statements": [
											{
												"expression": {
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1363,
														"name": "deposits_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "9605:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1364,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "9617:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1366,
															"indexExpression": {
																"id": 1365,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "9628:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9617:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1371,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9643:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9635:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1367,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9635:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9635:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9617:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "9605:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "9605:41:9"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "9266:238:9",
										"text": "@notice Función onlyOwner para ver la cantidad de depósitos de ETH que algún usuario hizo\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar"
									},
									"functionSelector": "94f649dd",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1359,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1358,
												"name": "onlyOwner",
												"nameLocations": [
													"9555:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "9555:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9555:9:9"
										}
									],
									"name": "getDeposits",
									"nameLocation": "9519:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "9539:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "9531:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9530:15:9"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "deposits_",
												"nameLocation": "9583:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "9578:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9578:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9577:16:9"
									},
									"scope": 1743,
									"src": "9510:144:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "9996:66:9",
										"statements": [
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1385,
														"name": "withdrawals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "10007:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1386,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "10022:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1388,
															"indexExpression": {
																"id": 1387,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "10036:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10022:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1393,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10051:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10043:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1389,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10043:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10043:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10022:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10007:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "10007:47:9"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "9660:240:9",
										"text": "@notice Función onlyOwner para ver la cantidad de extracciones de ETH que algún usuario hizo\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar"
									},
									"functionSelector": "3a2b643a",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1380,
												"name": "onlyOwner",
												"nameLocations": [
													"9954:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "9954:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9954:9:9"
										}
									],
									"name": "getWithdrawals",
									"nameLocation": "9915:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "9938:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "9930:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9929:15:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "withdrawals_",
												"nameLocation": "9982:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "9977:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9977:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9976:19:9"
									},
									"scope": 1743,
									"src": "9906:156:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "10503:62:9",
										"statements": [
											{
												"expression": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "balance_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "10514:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1410,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "10525:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1412,
															"indexExpression": {
																"id": 1411,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "10536:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10525:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1414,
														"indexExpression": {
															"id": 1413,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "10543:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10525:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10514:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "10514:43:9"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "10068:319:9",
										"text": "@notice Función onlyOwner para ver el balance que algún usuario tiene en algún token ERC20\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "c3a8962c",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1404,
												"name": "onlyOwner",
												"nameLocations": [
													"10465:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "10465:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10465:9:9"
										}
									],
									"name": "getERC20Balance",
									"nameLocation": "10402:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "10426:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "10418:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10418:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "10441:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "10433:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10433:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10417:38:9"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "balance_",
												"nameLocation": "10493:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "10488:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10488:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10487:15:9"
									},
									"scope": 1743,
									"src": "10393:172:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "11022:63:9",
										"statements": [
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1430,
														"name": "deposits_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "11033:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1431,
																"name": "s_deposits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11045:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1433,
															"indexExpression": {
																"id": 1432,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "11056:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11045:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1435,
														"indexExpression": {
															"id": 1434,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "11063:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11045:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "11033:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "11033:44:9"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "10571:333:9",
										"text": "@notice Función onlyOwner para ver la cantidad de depósitos que algún usuario hizo de algún token ERC20\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "297beb3c",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "onlyOwner",
												"nameLocations": [
													"10983:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "10983:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10983:9:9"
										}
									],
									"name": "getERC20Deposits",
									"nameLocation": "10919:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "10944:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "10936:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10936:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "10959:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "10951:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:38:9"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "deposits_",
												"nameLocation": "11011:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "11006:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11006:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11005:16:9"
									},
									"scope": 1743,
									"src": "10910:175:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "11550:69:9",
										"statements": [
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1451,
														"name": "withdrawals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "11561:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1452,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "11576:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1454,
															"indexExpression": {
																"id": 1453,
																"name": "user_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "11590:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11576:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1456,
														"indexExpression": {
															"id": 1455,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "11597:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11576:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "11561:50:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "11561:50:9"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "11091:335:9",
										"text": "@notice Función onlyOwner para ver la cantidad de extracciones que algún usuario hizo de algún token ERC20\n@dev Esta función garantiza que toda la información es auditable\n@param user_ Usuario que se quiere auditar\n@param _tokenAddress La dirección del contrato del token a consultar"
									},
									"functionSelector": "962b9bcc",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1446,
												"name": "onlyOwner",
												"nameLocations": [
													"11508:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11508:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11508:9:9"
										}
									],
									"name": "getERC20Withdrawals",
									"nameLocation": "11441:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "user_",
												"nameLocation": "11469:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "11461:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11461:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "11484:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "11476:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11460:38:9"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "withdrawals_",
												"nameLocation": "11536:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "11531:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11531:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11530:19:9"
									},
									"scope": 1743,
									"src": "11432:187:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "11885:138:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1469,
															"name": "s_feeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "11924:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														{
															"arguments": [
																{
																	"id": 1471,
																	"name": "_feed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "11955:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1470,
																"name": "AggregatorV3Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "11933:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																	"typeString": "type(contract AggregatorV3Interface)"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11933:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															},
															{
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														],
														"id": 1468,
														"name": "ChainlinkFeedUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "11903:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_AggregatorV3Interface_$45_$_t_contract$_AggregatorV3Interface_$45_$returns$__$",
															"typeString": "function (contract AggregatorV3Interface,contract AggregatorV3Interface)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11903:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "EmitStatement",
												"src": "11898:64:9"
											},
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1475,
														"name": "s_feeds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11975:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1477,
																"name": "_feed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "12007:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1476,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "11985:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11985:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "11975:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "11975:38:9"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "11633:194:9",
										"text": "@notice Función para actualizar el Chainlink Price Feed\n@param _feed La nueva dirección del Price Feed\n@dev Sólo puede ser llamada por el propietario"
									},
									"functionSelector": "7dc532c5",
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1465,
												"name": "onlyOwner",
												"nameLocations": [
													"11875:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "11875:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11875:9:9"
										}
									],
									"name": "setFeeds",
									"nameLocation": "11842:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "_feed",
												"nameLocation": "11859:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "11851:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11851:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11850:15:9"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11885:0:9"
									},
									"scope": 1743,
									"src": "11833:190:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "12339:492:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1489,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "12358:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12368:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12358:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1493,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12392:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12396:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12392:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1495,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "12404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1492,
																"name": "ExtractionNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "12371:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12371:41:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12350:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12350:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "12350:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "12432:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1501,
																		"name": "s_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "12443:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1504,
																	"indexExpression": {
																		"expression": {
																			"id": 1502,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12454:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12458:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12454:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12443:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1509,
																"indexExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12474:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12466:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1505,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12466:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12466:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12443:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12432:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1512,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12500:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12504:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12500:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1514,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "12512:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1511,
																"name": "ExtractionNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "12479:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12479:41:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12424:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12424:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "12424:97:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1519,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "12540:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1520,
																"name": "s_withdrawLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "12551:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "12540:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1523,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12589:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12593:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12589:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1525,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "12601:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1522,
																"name": "ExtractionNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "12568:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,uint256) pure returns (error)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12568:41:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12532:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12532:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "12532:78:9"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1529,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "12623:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1536,
															"indexExpression": {
																"expression": {
																	"id": 1530,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12634:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12638:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12634:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12623:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1537,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12654:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12646:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1532,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12646:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12646:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12623:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1538,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "12661:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12623:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "12623:45:9"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "12679:39:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1541,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "12679:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1548,
															"indexExpression": {
																"expression": {
																	"id": 1542,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12693:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12697:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12693:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12679:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1549,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12713:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12705:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12705:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12705:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12679:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "12679:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "12751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1552,
														"name": "transferEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "12739:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12739:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "12739:20:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12795:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12799:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12795:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "12807:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1556,
														"name": "Extracted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "12785:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12785:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "EmitStatement",
												"src": "12780:35:9"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "12031:260:9",
										"text": "@notice Función para hacer un depósito\n@dev Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\n@param _amount Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción"
									},
									"functionSelector": "c311d049",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawEth",
									"nameLocation": "12306:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12323:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12318:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12318:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12317:14:9"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12339:0:9"
									},
									"scope": 1743,
									"src": "12297:534:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "13250:489:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1572,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "13269:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13279:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13269:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1576,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13308:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13312:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13308:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1578,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "13320:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1579,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "13335:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1575,
																"name": "ERC20ExtractionNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "13282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,address,uint256) pure returns (error)"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13282:61:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13261:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13261:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "13261:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1584,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "13363:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1585,
																		"name": "s_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "13374:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1588,
																	"indexExpression": {
																		"expression": {
																			"id": 1586,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13385:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13389:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13385:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13374:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1590,
																"indexExpression": {
																	"id": 1589,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "13397:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13374:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13363:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1593,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "13439:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13443:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "13439:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1595,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "13451:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1596,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "13466:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1592,
																"name": "ERC20ExtractionNotAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "13413:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$_t_error_$",
																	"typeString": "function (address,address,uint256) pure returns (error)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13413:61:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13355:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13355:120:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "13355:120:9"
											},
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1600,
																"name": "s_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "13488:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1604,
															"indexExpression": {
																"expression": {
																	"id": 1601,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13499:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13503:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13499:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13488:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1605,
														"indexExpression": {
															"id": 1603,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "13511:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13488:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1606,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "13529:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13488:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "13488:48:9"
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "13547:42:9",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1609,
																"name": "s_withdrawals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13547:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint32_$_$",
																	"typeString": "mapping(address => mapping(address => uint32))"
																}
															},
															"id": 1613,
															"indexExpression": {
																"expression": {
																	"id": 1610,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "13561:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13565:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "13561:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13547:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
																"typeString": "mapping(address => uint32)"
															}
														},
														"id": 1614,
														"indexExpression": {
															"id": 1612,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "13573:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13547:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "13547:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "13624:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1619,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "13639:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"name": "transferERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "13610:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13610:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "13610:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1623,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13688:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13692:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13688:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1625,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "13700:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1626,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "13715:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"name": "ERC20Extracted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "13673:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13673:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "EmitStatement",
												"src": "13668:55:9"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "12839:338:9",
										"text": "@notice Función para hacer un depósito\n@dev Sólo se puede depositar un valor mayor a 0, siempre que no se supere el bankCap\n@param _tokenAddress La dirección del contrato del token a extraer\n@param _amount Cantidad que se quiere extraer. Debe ser <= al balance y al límite de extracción"
									},
									"functionSelector": "a1db9782",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawERC20",
									"nameLocation": "13192:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "13214:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "13206:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13206:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13234:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "13229:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13229:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13205:37:9"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13250:0:9"
									},
									"scope": 1743,
									"src": "13183:556:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "14074:85:9",
										"statements": [
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1638,
														"name": "convertedAmount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "14085:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1639,
																		"name": "_ethAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "14105:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1640,
																			"name": "chainlinkFeed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "14118:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14118:15:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14105:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14104:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1644,
															"name": "DECIMAL_FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "14137:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14104:47:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14085:66:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "14085:66:9"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "13747:227:9",
										"text": "@notice Función interna para realizar la conversión de decimales de ETH a USD\n@param _ethAmount La cantidad de ETH a ser convertida\n@return convertedAmount_ El resultado del cálculo."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertEthInUSD",
									"nameLocation": "13989:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "14013:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "14005:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14004:20:9"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "convertedAmount_",
												"nameLocation": "14056:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "14048:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14048:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14047:26:9"
									},
									"scope": 1743,
									"src": "13980:179:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "14388:279:9",
										"statements": [
											{
												"assignments": [
													null,
													1656,
													null,
													1658,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1656,
														"mutability": "mutable",
														"name": "ethUSDPrice",
														"nameLocation": "14409:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "14402:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1655,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "14402:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "updatedAt",
														"nameLocation": "14431:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "14423:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14423:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1662,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1659,
															"name": "s_feeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "14445:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14453:15:9",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "14445:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14445:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14399:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1664,
																"name": "ethUSDPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "14491:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14506:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14491:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1667,
																"name": "OracleCompromised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "14509:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14509:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14483:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14483:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "14483:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1672,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "14549:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14555:9:9",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "14549:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1674,
																			"name": "updatedAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "14567:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14549:27:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1676,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14548:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1677,
																"name": "ORACLE_HEARTBEAT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "14580:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "14548:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1679,
																"name": "StalePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "14598:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14598:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14540:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14540:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "14540:71:9"
											},
											{
												"expression": {
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "ethUSDPrice_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "14624:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1686,
																"name": "ethUSDPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "14647:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14639:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1684,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14639:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14639:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14624:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "14624:35:9"
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "14167:145:9",
										"text": "@notice Función para consultar el precio en USD del ETH\n@return ethUSDPrice_ El precio provisto por el oráculo."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "chainlinkFeed",
									"nameLocation": "14327:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14340:2:9"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "ethUSDPrice_",
												"nameLocation": "14374:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "14366:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14366:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14365:22:9"
									},
									"scope": 1743,
									"src": "14318:349:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "14937:172:9",
										"statements": [
											{
												"assignments": [
													1698,
													1700
												],
												"declarations": [
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14954:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "14949:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1697,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14949:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1700,
														"mutability": "mutable",
														"name": "errorData",
														"nameLocation": "14976:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "14963:22:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1699,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14963:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15021:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 1701,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14989:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14993:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14989:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15000:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14989:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1704,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "15012:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14989:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14948:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1710,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "15043:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1712,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "15071:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15075:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "15071:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1714,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "15082:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1715,
																	"name": "errorData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "15090:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1711,
																"name": "ExtractionReverted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "15052:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_error_$",
																	"typeString": "function (address,uint256,bytes memory) pure returns (error)"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15052:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_error",
																"typeString": "error"
															}
														],
														"id": 1709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15035:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
															"typeString": "function (bool,error) pure"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15035:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "15035:66:9"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "14675:213:9",
										"text": "@notice Función privada que transfiere la cantidad pedida por la extracción\n@dev Nadie puede acceder a esta función excepto ESTE contrato\n@param _amount Cantidad a transferir"
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferEth",
									"nameLocation": "14903:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "14920:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "14915:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14914:14:9"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14937:0:9"
									},
									"scope": 1743,
									"src": "14894:215:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "15485:93:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1734,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15543:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV3_$1743",
																		"typeString": "contract KipuBankV3"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV3_$1743",
																		"typeString": "contract KipuBankV3"
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15535:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1732,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15535:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15535:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1736,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15550:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15554:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15550:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1738,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "15562:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1729,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "15503:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1728,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "15496:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$361_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$361",
																"typeString": "contract IERC20"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15518:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "15496:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$361_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$361_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15496:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "15496:74:9"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "15117:294:9",
										"text": "@notice Función privada que transfiere la cantidad pedida por la extracción\n@dev Nadie puede acceder a esta función excepto ESTE contrato\n@param _tokenAddress La dirección del contrato del token a transferir\n@param _amount Cantidad a transferir"
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferERC20",
									"nameLocation": "15426:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "15448:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "15440:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15440:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "15468:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "15463:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15463:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15439:37:9"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15485:0:9"
									},
									"scope": 1743,
									"src": "15417:161:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1744,
							"src": "919:14670:9",
							"usedErrors": [
								59,
								64,
								373,
								978,
								985,
								994,
								1003,
								1012,
								1015,
								1018
							],
							"usedEvents": [
								70,
								937,
								944,
								953,
								962,
								971
							]
						}
					],
					"src": "35:15554:9"
				},
				"id": 9
			}
		}
	}
}